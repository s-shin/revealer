// Code generated by go-bindata.
// sources:
// assets/index.html
// assets/reveal/css/print/paper.css
// assets/reveal/css/print/pdf.css
// assets/reveal/css/reveal.css
// assets/reveal/css/reveal.scss
// assets/reveal/css/theme/README.md
// assets/reveal/css/theme/beige.css
// assets/reveal/css/theme/black.css
// assets/reveal/css/theme/blood.css
// assets/reveal/css/theme/league.css
// assets/reveal/css/theme/moon.css
// assets/reveal/css/theme/night.css
// assets/reveal/css/theme/serif.css
// assets/reveal/css/theme/simple.css
// assets/reveal/css/theme/sky.css
// assets/reveal/css/theme/solarized.css
// assets/reveal/css/theme/source/beige.scss
// assets/reveal/css/theme/source/black.scss
// assets/reveal/css/theme/source/blood.scss
// assets/reveal/css/theme/source/league.scss
// assets/reveal/css/theme/source/moon.scss
// assets/reveal/css/theme/source/night.scss
// assets/reveal/css/theme/source/serif.scss
// assets/reveal/css/theme/source/simple.scss
// assets/reveal/css/theme/source/sky.scss
// assets/reveal/css/theme/source/solarized.scss
// assets/reveal/css/theme/source/white.scss
// assets/reveal/css/theme/template/mixins.scss
// assets/reveal/css/theme/template/settings.scss
// assets/reveal/css/theme/template/theme.scss
// assets/reveal/css/theme/white.css
// assets/reveal/js/reveal.js
// assets/reveal/lib/css/zenburn.css
// assets/reveal/lib/font/league-gothic/LICENSE
// assets/reveal/lib/font/league-gothic/league-gothic.css
// assets/reveal/lib/font/league-gothic/league-gothic.eot
// assets/reveal/lib/font/league-gothic/league-gothic.ttf
// assets/reveal/lib/font/league-gothic/league-gothic.woff
// assets/reveal/lib/font/source-sans-pro/LICENSE
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.eot
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.ttf
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.woff
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.eot
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.ttf
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.woff
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.eot
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.ttf
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.woff
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.eot
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.ttf
// assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.woff
// assets/reveal/lib/font/source-sans-pro/source-sans-pro.css
// assets/reveal/lib/js/classList.js
// assets/reveal/lib/js/head.min.js
// assets/reveal/lib/js/html5shiv.js
// assets/reveal/plugin/highlight/highlight.js
// assets/reveal/plugin/markdown/example.html
// assets/reveal/plugin/markdown/example.md
// assets/reveal/plugin/markdown/markdown.js
// assets/reveal/plugin/markdown/marked.js
// assets/reveal/plugin/math/math.js
// assets/reveal/plugin/multiplex/client.js
// assets/reveal/plugin/multiplex/index.js
// assets/reveal/plugin/multiplex/master.js
// assets/reveal/plugin/multiplex/package.json
// assets/reveal/plugin/notes/notes.html
// assets/reveal/plugin/notes/notes.js
// assets/reveal/plugin/notes-server/client.js
// assets/reveal/plugin/notes-server/index.js
// assets/reveal/plugin/notes-server/notes.html
// assets/reveal/plugin/print-pdf/print-pdf.js
// assets/reveal/plugin/search/search.js
// assets/reveal/plugin/zoom-js/zoom.js
// assets/gemoji/db/emoji.json
// assets/gemoji/images/emoji/basecamp.png
// assets/gemoji/images/emoji/basecampy.png
// assets/gemoji/images/emoji/bowtie.png
// assets/gemoji/images/emoji/feelsgood.png
// assets/gemoji/images/emoji/finnadie.png
// assets/gemoji/images/emoji/fu.png
// assets/gemoji/images/emoji/goberserk.png
// assets/gemoji/images/emoji/godmode.png
// assets/gemoji/images/emoji/hurtrealbad.png
// assets/gemoji/images/emoji/metal.png
// assets/gemoji/images/emoji/neckbeard.png
// assets/gemoji/images/emoji/octocat.png
// assets/gemoji/images/emoji/rage1.png
// assets/gemoji/images/emoji/rage2.png
// assets/gemoji/images/emoji/rage3.png
// assets/gemoji/images/emoji/rage4.png
// assets/gemoji/images/emoji/shipit.png
// assets/gemoji/images/emoji/suspect.png
// assets/gemoji/images/emoji/taco.png
// assets/gemoji/images/emoji/trollface.png
// assets/gemoji/images/emoji/unicode/0023-20e3.png
// assets/gemoji/images/emoji/unicode/0030-20e3.png
// assets/gemoji/images/emoji/unicode/0031-20e3.png
// assets/gemoji/images/emoji/unicode/0032-20e3.png
// assets/gemoji/images/emoji/unicode/0033-20e3.png
// assets/gemoji/images/emoji/unicode/0034-20e3.png
// assets/gemoji/images/emoji/unicode/0035-20e3.png
// assets/gemoji/images/emoji/unicode/0036-20e3.png
// assets/gemoji/images/emoji/unicode/0037-20e3.png
// assets/gemoji/images/emoji/unicode/0038-20e3.png
// assets/gemoji/images/emoji/unicode/0039-20e3.png
// assets/gemoji/images/emoji/unicode/00a9.png
// assets/gemoji/images/emoji/unicode/00ae.png
// assets/gemoji/images/emoji/unicode/1f004.png
// assets/gemoji/images/emoji/unicode/1f0cf.png
// assets/gemoji/images/emoji/unicode/1f170.png
// assets/gemoji/images/emoji/unicode/1f171.png
// assets/gemoji/images/emoji/unicode/1f17e.png
// assets/gemoji/images/emoji/unicode/1f17f.png
// assets/gemoji/images/emoji/unicode/1f18e.png
// assets/gemoji/images/emoji/unicode/1f191.png
// assets/gemoji/images/emoji/unicode/1f192.png
// assets/gemoji/images/emoji/unicode/1f193.png
// assets/gemoji/images/emoji/unicode/1f194.png
// assets/gemoji/images/emoji/unicode/1f195.png
// assets/gemoji/images/emoji/unicode/1f196.png
// assets/gemoji/images/emoji/unicode/1f197.png
// assets/gemoji/images/emoji/unicode/1f198.png
// assets/gemoji/images/emoji/unicode/1f199.png
// assets/gemoji/images/emoji/unicode/1f19a.png
// assets/gemoji/images/emoji/unicode/1f1e8-1f1f3.png
// assets/gemoji/images/emoji/unicode/1f1e9-1f1ea.png
// assets/gemoji/images/emoji/unicode/1f1ea-1f1f8.png
// assets/gemoji/images/emoji/unicode/1f1eb-1f1f7.png
// assets/gemoji/images/emoji/unicode/1f1ec-1f1e7.png
// assets/gemoji/images/emoji/unicode/1f1ee-1f1f9.png
// assets/gemoji/images/emoji/unicode/1f1ef-1f1f5.png
// assets/gemoji/images/emoji/unicode/1f1f0-1f1f7.png
// assets/gemoji/images/emoji/unicode/1f1f7-1f1fa.png
// assets/gemoji/images/emoji/unicode/1f1fa-1f1f8.png
// assets/gemoji/images/emoji/unicode/1f201.png
// assets/gemoji/images/emoji/unicode/1f202.png
// assets/gemoji/images/emoji/unicode/1f21a.png
// assets/gemoji/images/emoji/unicode/1f22f.png
// assets/gemoji/images/emoji/unicode/1f232.png
// assets/gemoji/images/emoji/unicode/1f233.png
// assets/gemoji/images/emoji/unicode/1f234.png
// assets/gemoji/images/emoji/unicode/1f235.png
// assets/gemoji/images/emoji/unicode/1f236.png
// assets/gemoji/images/emoji/unicode/1f237.png
// assets/gemoji/images/emoji/unicode/1f238.png
// assets/gemoji/images/emoji/unicode/1f239.png
// assets/gemoji/images/emoji/unicode/1f23a.png
// assets/gemoji/images/emoji/unicode/1f250.png
// assets/gemoji/images/emoji/unicode/1f251.png
// assets/gemoji/images/emoji/unicode/1f300.png
// assets/gemoji/images/emoji/unicode/1f301.png
// assets/gemoji/images/emoji/unicode/1f302.png
// assets/gemoji/images/emoji/unicode/1f303.png
// assets/gemoji/images/emoji/unicode/1f304.png
// assets/gemoji/images/emoji/unicode/1f305.png
// assets/gemoji/images/emoji/unicode/1f306.png
// assets/gemoji/images/emoji/unicode/1f307.png
// assets/gemoji/images/emoji/unicode/1f308.png
// assets/gemoji/images/emoji/unicode/1f309.png
// assets/gemoji/images/emoji/unicode/1f30a.png
// assets/gemoji/images/emoji/unicode/1f30b.png
// assets/gemoji/images/emoji/unicode/1f30c.png
// assets/gemoji/images/emoji/unicode/1f30d.png
// assets/gemoji/images/emoji/unicode/1f30e.png
// assets/gemoji/images/emoji/unicode/1f30f.png
// assets/gemoji/images/emoji/unicode/1f310.png
// assets/gemoji/images/emoji/unicode/1f311.png
// assets/gemoji/images/emoji/unicode/1f312.png
// assets/gemoji/images/emoji/unicode/1f313.png
// assets/gemoji/images/emoji/unicode/1f314.png
// assets/gemoji/images/emoji/unicode/1f315.png
// assets/gemoji/images/emoji/unicode/1f316.png
// assets/gemoji/images/emoji/unicode/1f317.png
// assets/gemoji/images/emoji/unicode/1f318.png
// assets/gemoji/images/emoji/unicode/1f319.png
// assets/gemoji/images/emoji/unicode/1f31a.png
// assets/gemoji/images/emoji/unicode/1f31b.png
// assets/gemoji/images/emoji/unicode/1f31c.png
// assets/gemoji/images/emoji/unicode/1f31d.png
// assets/gemoji/images/emoji/unicode/1f31e.png
// assets/gemoji/images/emoji/unicode/1f31f.png
// assets/gemoji/images/emoji/unicode/1f320.png
// assets/gemoji/images/emoji/unicode/1f330.png
// assets/gemoji/images/emoji/unicode/1f331.png
// assets/gemoji/images/emoji/unicode/1f332.png
// assets/gemoji/images/emoji/unicode/1f333.png
// assets/gemoji/images/emoji/unicode/1f334.png
// assets/gemoji/images/emoji/unicode/1f335.png
// assets/gemoji/images/emoji/unicode/1f337.png
// assets/gemoji/images/emoji/unicode/1f338.png
// assets/gemoji/images/emoji/unicode/1f339.png
// assets/gemoji/images/emoji/unicode/1f33a.png
// assets/gemoji/images/emoji/unicode/1f33b.png
// assets/gemoji/images/emoji/unicode/1f33c.png
// assets/gemoji/images/emoji/unicode/1f33d.png
// assets/gemoji/images/emoji/unicode/1f33e.png
// assets/gemoji/images/emoji/unicode/1f33f.png
// assets/gemoji/images/emoji/unicode/1f340.png
// assets/gemoji/images/emoji/unicode/1f341.png
// assets/gemoji/images/emoji/unicode/1f342.png
// assets/gemoji/images/emoji/unicode/1f343.png
// assets/gemoji/images/emoji/unicode/1f344.png
// assets/gemoji/images/emoji/unicode/1f345.png
// assets/gemoji/images/emoji/unicode/1f346.png
// assets/gemoji/images/emoji/unicode/1f347.png
// assets/gemoji/images/emoji/unicode/1f348.png
// assets/gemoji/images/emoji/unicode/1f349.png
// assets/gemoji/images/emoji/unicode/1f34a.png
// assets/gemoji/images/emoji/unicode/1f34b.png
// assets/gemoji/images/emoji/unicode/1f34c.png
// assets/gemoji/images/emoji/unicode/1f34d.png
// assets/gemoji/images/emoji/unicode/1f34e.png
// assets/gemoji/images/emoji/unicode/1f34f.png
// assets/gemoji/images/emoji/unicode/1f350.png
// assets/gemoji/images/emoji/unicode/1f351.png
// assets/gemoji/images/emoji/unicode/1f352.png
// assets/gemoji/images/emoji/unicode/1f353.png
// assets/gemoji/images/emoji/unicode/1f354.png
// assets/gemoji/images/emoji/unicode/1f355.png
// assets/gemoji/images/emoji/unicode/1f356.png
// assets/gemoji/images/emoji/unicode/1f357.png
// assets/gemoji/images/emoji/unicode/1f358.png
// assets/gemoji/images/emoji/unicode/1f359.png
// assets/gemoji/images/emoji/unicode/1f35a.png
// assets/gemoji/images/emoji/unicode/1f35b.png
// assets/gemoji/images/emoji/unicode/1f35c.png
// assets/gemoji/images/emoji/unicode/1f35d.png
// assets/gemoji/images/emoji/unicode/1f35e.png
// assets/gemoji/images/emoji/unicode/1f35f.png
// assets/gemoji/images/emoji/unicode/1f360.png
// assets/gemoji/images/emoji/unicode/1f361.png
// assets/gemoji/images/emoji/unicode/1f362.png
// assets/gemoji/images/emoji/unicode/1f363.png
// assets/gemoji/images/emoji/unicode/1f364.png
// assets/gemoji/images/emoji/unicode/1f365.png
// assets/gemoji/images/emoji/unicode/1f366.png
// assets/gemoji/images/emoji/unicode/1f367.png
// assets/gemoji/images/emoji/unicode/1f368.png
// assets/gemoji/images/emoji/unicode/1f369.png
// assets/gemoji/images/emoji/unicode/1f36a.png
// assets/gemoji/images/emoji/unicode/1f36b.png
// assets/gemoji/images/emoji/unicode/1f36c.png
// assets/gemoji/images/emoji/unicode/1f36d.png
// assets/gemoji/images/emoji/unicode/1f36e.png
// assets/gemoji/images/emoji/unicode/1f36f.png
// assets/gemoji/images/emoji/unicode/1f370.png
// assets/gemoji/images/emoji/unicode/1f371.png
// assets/gemoji/images/emoji/unicode/1f372.png
// assets/gemoji/images/emoji/unicode/1f373.png
// assets/gemoji/images/emoji/unicode/1f374.png
// assets/gemoji/images/emoji/unicode/1f375.png
// assets/gemoji/images/emoji/unicode/1f376.png
// assets/gemoji/images/emoji/unicode/1f377.png
// assets/gemoji/images/emoji/unicode/1f378.png
// assets/gemoji/images/emoji/unicode/1f379.png
// assets/gemoji/images/emoji/unicode/1f37a.png
// assets/gemoji/images/emoji/unicode/1f37b.png
// assets/gemoji/images/emoji/unicode/1f37c.png
// assets/gemoji/images/emoji/unicode/1f380.png
// assets/gemoji/images/emoji/unicode/1f381.png
// assets/gemoji/images/emoji/unicode/1f382.png
// assets/gemoji/images/emoji/unicode/1f383.png
// assets/gemoji/images/emoji/unicode/1f384.png
// assets/gemoji/images/emoji/unicode/1f385.png
// assets/gemoji/images/emoji/unicode/1f386.png
// assets/gemoji/images/emoji/unicode/1f387.png
// assets/gemoji/images/emoji/unicode/1f388.png
// assets/gemoji/images/emoji/unicode/1f389.png
// assets/gemoji/images/emoji/unicode/1f38a.png
// assets/gemoji/images/emoji/unicode/1f38b.png
// assets/gemoji/images/emoji/unicode/1f38c.png
// assets/gemoji/images/emoji/unicode/1f38d.png
// assets/gemoji/images/emoji/unicode/1f38e.png
// assets/gemoji/images/emoji/unicode/1f38f.png
// assets/gemoji/images/emoji/unicode/1f390.png
// assets/gemoji/images/emoji/unicode/1f391.png
// assets/gemoji/images/emoji/unicode/1f392.png
// assets/gemoji/images/emoji/unicode/1f393.png
// assets/gemoji/images/emoji/unicode/1f3a0.png
// assets/gemoji/images/emoji/unicode/1f3a1.png
// assets/gemoji/images/emoji/unicode/1f3a2.png
// assets/gemoji/images/emoji/unicode/1f3a3.png
// assets/gemoji/images/emoji/unicode/1f3a4.png
// assets/gemoji/images/emoji/unicode/1f3a5.png
// assets/gemoji/images/emoji/unicode/1f3a6.png
// assets/gemoji/images/emoji/unicode/1f3a7.png
// assets/gemoji/images/emoji/unicode/1f3a8.png
// assets/gemoji/images/emoji/unicode/1f3a9.png
// assets/gemoji/images/emoji/unicode/1f3aa.png
// assets/gemoji/images/emoji/unicode/1f3ab.png
// assets/gemoji/images/emoji/unicode/1f3ac.png
// assets/gemoji/images/emoji/unicode/1f3ad.png
// assets/gemoji/images/emoji/unicode/1f3ae.png
// assets/gemoji/images/emoji/unicode/1f3af.png
// assets/gemoji/images/emoji/unicode/1f3b0.png
// assets/gemoji/images/emoji/unicode/1f3b1.png
// assets/gemoji/images/emoji/unicode/1f3b2.png
// assets/gemoji/images/emoji/unicode/1f3b3.png
// assets/gemoji/images/emoji/unicode/1f3b4.png
// assets/gemoji/images/emoji/unicode/1f3b5.png
// assets/gemoji/images/emoji/unicode/1f3b6.png
// assets/gemoji/images/emoji/unicode/1f3b7.png
// assets/gemoji/images/emoji/unicode/1f3b8.png
// assets/gemoji/images/emoji/unicode/1f3b9.png
// assets/gemoji/images/emoji/unicode/1f3ba.png
// assets/gemoji/images/emoji/unicode/1f3bb.png
// assets/gemoji/images/emoji/unicode/1f3bc.png
// assets/gemoji/images/emoji/unicode/1f3bd.png
// assets/gemoji/images/emoji/unicode/1f3be.png
// assets/gemoji/images/emoji/unicode/1f3bf.png
// assets/gemoji/images/emoji/unicode/1f3c0.png
// assets/gemoji/images/emoji/unicode/1f3c1.png
// assets/gemoji/images/emoji/unicode/1f3c2.png
// assets/gemoji/images/emoji/unicode/1f3c3.png
// assets/gemoji/images/emoji/unicode/1f3c4.png
// assets/gemoji/images/emoji/unicode/1f3c6.png
// assets/gemoji/images/emoji/unicode/1f3c7.png
// assets/gemoji/images/emoji/unicode/1f3c8.png
// assets/gemoji/images/emoji/unicode/1f3c9.png
// assets/gemoji/images/emoji/unicode/1f3ca.png
// assets/gemoji/images/emoji/unicode/1f3e0.png
// assets/gemoji/images/emoji/unicode/1f3e1.png
// assets/gemoji/images/emoji/unicode/1f3e2.png
// assets/gemoji/images/emoji/unicode/1f3e3.png
// assets/gemoji/images/emoji/unicode/1f3e4.png
// assets/gemoji/images/emoji/unicode/1f3e5.png
// assets/gemoji/images/emoji/unicode/1f3e6.png
// assets/gemoji/images/emoji/unicode/1f3e7.png
// assets/gemoji/images/emoji/unicode/1f3e8.png
// assets/gemoji/images/emoji/unicode/1f3e9.png
// assets/gemoji/images/emoji/unicode/1f3ea.png
// assets/gemoji/images/emoji/unicode/1f3eb.png
// assets/gemoji/images/emoji/unicode/1f3ec.png
// assets/gemoji/images/emoji/unicode/1f3ed.png
// assets/gemoji/images/emoji/unicode/1f3ee.png
// assets/gemoji/images/emoji/unicode/1f3ef.png
// assets/gemoji/images/emoji/unicode/1f3f0.png
// assets/gemoji/images/emoji/unicode/1f400.png
// assets/gemoji/images/emoji/unicode/1f401.png
// assets/gemoji/images/emoji/unicode/1f402.png
// assets/gemoji/images/emoji/unicode/1f403.png
// assets/gemoji/images/emoji/unicode/1f404.png
// assets/gemoji/images/emoji/unicode/1f405.png
// assets/gemoji/images/emoji/unicode/1f406.png
// assets/gemoji/images/emoji/unicode/1f407.png
// assets/gemoji/images/emoji/unicode/1f408.png
// assets/gemoji/images/emoji/unicode/1f409.png
// assets/gemoji/images/emoji/unicode/1f40a.png
// assets/gemoji/images/emoji/unicode/1f40b.png
// assets/gemoji/images/emoji/unicode/1f40c.png
// assets/gemoji/images/emoji/unicode/1f40d.png
// assets/gemoji/images/emoji/unicode/1f40e.png
// assets/gemoji/images/emoji/unicode/1f40f.png
// assets/gemoji/images/emoji/unicode/1f410.png
// assets/gemoji/images/emoji/unicode/1f411.png
// assets/gemoji/images/emoji/unicode/1f412.png
// assets/gemoji/images/emoji/unicode/1f413.png
// assets/gemoji/images/emoji/unicode/1f414.png
// assets/gemoji/images/emoji/unicode/1f415.png
// assets/gemoji/images/emoji/unicode/1f416.png
// assets/gemoji/images/emoji/unicode/1f417.png
// assets/gemoji/images/emoji/unicode/1f418.png
// assets/gemoji/images/emoji/unicode/1f419.png
// assets/gemoji/images/emoji/unicode/1f41a.png
// assets/gemoji/images/emoji/unicode/1f41b.png
// assets/gemoji/images/emoji/unicode/1f41c.png
// assets/gemoji/images/emoji/unicode/1f41d.png
// assets/gemoji/images/emoji/unicode/1f41e.png
// assets/gemoji/images/emoji/unicode/1f41f.png
// assets/gemoji/images/emoji/unicode/1f420.png
// assets/gemoji/images/emoji/unicode/1f421.png
// assets/gemoji/images/emoji/unicode/1f422.png
// assets/gemoji/images/emoji/unicode/1f423.png
// assets/gemoji/images/emoji/unicode/1f424.png
// assets/gemoji/images/emoji/unicode/1f425.png
// assets/gemoji/images/emoji/unicode/1f426.png
// assets/gemoji/images/emoji/unicode/1f427.png
// assets/gemoji/images/emoji/unicode/1f428.png
// assets/gemoji/images/emoji/unicode/1f429.png
// assets/gemoji/images/emoji/unicode/1f42a.png
// assets/gemoji/images/emoji/unicode/1f42b.png
// assets/gemoji/images/emoji/unicode/1f42c.png
// assets/gemoji/images/emoji/unicode/1f42d.png
// assets/gemoji/images/emoji/unicode/1f42e.png
// assets/gemoji/images/emoji/unicode/1f42f.png
// assets/gemoji/images/emoji/unicode/1f430.png
// assets/gemoji/images/emoji/unicode/1f431.png
// assets/gemoji/images/emoji/unicode/1f432.png
// assets/gemoji/images/emoji/unicode/1f433.png
// assets/gemoji/images/emoji/unicode/1f434.png
// assets/gemoji/images/emoji/unicode/1f435.png
// assets/gemoji/images/emoji/unicode/1f436.png
// assets/gemoji/images/emoji/unicode/1f437.png
// assets/gemoji/images/emoji/unicode/1f438.png
// assets/gemoji/images/emoji/unicode/1f439.png
// assets/gemoji/images/emoji/unicode/1f43a.png
// assets/gemoji/images/emoji/unicode/1f43b.png
// assets/gemoji/images/emoji/unicode/1f43c.png
// assets/gemoji/images/emoji/unicode/1f43d.png
// assets/gemoji/images/emoji/unicode/1f43e.png
// assets/gemoji/images/emoji/unicode/1f440.png
// assets/gemoji/images/emoji/unicode/1f442.png
// assets/gemoji/images/emoji/unicode/1f443.png
// assets/gemoji/images/emoji/unicode/1f444.png
// assets/gemoji/images/emoji/unicode/1f445.png
// assets/gemoji/images/emoji/unicode/1f446.png
// assets/gemoji/images/emoji/unicode/1f447.png
// assets/gemoji/images/emoji/unicode/1f448.png
// assets/gemoji/images/emoji/unicode/1f449.png
// assets/gemoji/images/emoji/unicode/1f44a.png
// assets/gemoji/images/emoji/unicode/1f44b.png
// assets/gemoji/images/emoji/unicode/1f44c.png
// assets/gemoji/images/emoji/unicode/1f44d.png
// assets/gemoji/images/emoji/unicode/1f44e.png
// assets/gemoji/images/emoji/unicode/1f44f.png
// assets/gemoji/images/emoji/unicode/1f450.png
// assets/gemoji/images/emoji/unicode/1f451.png
// assets/gemoji/images/emoji/unicode/1f452.png
// assets/gemoji/images/emoji/unicode/1f453.png
// assets/gemoji/images/emoji/unicode/1f454.png
// assets/gemoji/images/emoji/unicode/1f455.png
// assets/gemoji/images/emoji/unicode/1f456.png
// assets/gemoji/images/emoji/unicode/1f457.png
// assets/gemoji/images/emoji/unicode/1f458.png
// assets/gemoji/images/emoji/unicode/1f459.png
// assets/gemoji/images/emoji/unicode/1f45a.png
// assets/gemoji/images/emoji/unicode/1f45b.png
// assets/gemoji/images/emoji/unicode/1f45c.png
// assets/gemoji/images/emoji/unicode/1f45d.png
// assets/gemoji/images/emoji/unicode/1f45e.png
// assets/gemoji/images/emoji/unicode/1f45f.png
// assets/gemoji/images/emoji/unicode/1f460.png
// assets/gemoji/images/emoji/unicode/1f461.png
// assets/gemoji/images/emoji/unicode/1f462.png
// assets/gemoji/images/emoji/unicode/1f463.png
// assets/gemoji/images/emoji/unicode/1f464.png
// assets/gemoji/images/emoji/unicode/1f465.png
// assets/gemoji/images/emoji/unicode/1f466.png
// assets/gemoji/images/emoji/unicode/1f467.png
// assets/gemoji/images/emoji/unicode/1f468.png
// assets/gemoji/images/emoji/unicode/1f469.png
// assets/gemoji/images/emoji/unicode/1f46a.png
// assets/gemoji/images/emoji/unicode/1f46b.png
// assets/gemoji/images/emoji/unicode/1f46c.png
// assets/gemoji/images/emoji/unicode/1f46d.png
// assets/gemoji/images/emoji/unicode/1f46e.png
// assets/gemoji/images/emoji/unicode/1f46f.png
// assets/gemoji/images/emoji/unicode/1f470.png
// assets/gemoji/images/emoji/unicode/1f471.png
// assets/gemoji/images/emoji/unicode/1f472.png
// assets/gemoji/images/emoji/unicode/1f473.png
// assets/gemoji/images/emoji/unicode/1f474.png
// assets/gemoji/images/emoji/unicode/1f475.png
// assets/gemoji/images/emoji/unicode/1f476.png
// assets/gemoji/images/emoji/unicode/1f477.png
// assets/gemoji/images/emoji/unicode/1f478.png
// assets/gemoji/images/emoji/unicode/1f479.png
// assets/gemoji/images/emoji/unicode/1f47a.png
// assets/gemoji/images/emoji/unicode/1f47b.png
// assets/gemoji/images/emoji/unicode/1f47c.png
// assets/gemoji/images/emoji/unicode/1f47d.png
// assets/gemoji/images/emoji/unicode/1f47e.png
// assets/gemoji/images/emoji/unicode/1f47f.png
// assets/gemoji/images/emoji/unicode/1f480.png
// assets/gemoji/images/emoji/unicode/1f481.png
// assets/gemoji/images/emoji/unicode/1f482.png
// assets/gemoji/images/emoji/unicode/1f483.png
// assets/gemoji/images/emoji/unicode/1f484.png
// assets/gemoji/images/emoji/unicode/1f485.png
// assets/gemoji/images/emoji/unicode/1f486.png
// assets/gemoji/images/emoji/unicode/1f487.png
// assets/gemoji/images/emoji/unicode/1f488.png
// assets/gemoji/images/emoji/unicode/1f489.png
// assets/gemoji/images/emoji/unicode/1f48a.png
// assets/gemoji/images/emoji/unicode/1f48b.png
// assets/gemoji/images/emoji/unicode/1f48c.png
// assets/gemoji/images/emoji/unicode/1f48d.png
// assets/gemoji/images/emoji/unicode/1f48e.png
// assets/gemoji/images/emoji/unicode/1f48f.png
// assets/gemoji/images/emoji/unicode/1f490.png
// assets/gemoji/images/emoji/unicode/1f491.png
// assets/gemoji/images/emoji/unicode/1f492.png
// assets/gemoji/images/emoji/unicode/1f493.png
// assets/gemoji/images/emoji/unicode/1f494.png
// assets/gemoji/images/emoji/unicode/1f495.png
// assets/gemoji/images/emoji/unicode/1f496.png
// assets/gemoji/images/emoji/unicode/1f497.png
// assets/gemoji/images/emoji/unicode/1f498.png
// assets/gemoji/images/emoji/unicode/1f499.png
// assets/gemoji/images/emoji/unicode/1f49a.png
// assets/gemoji/images/emoji/unicode/1f49b.png
// assets/gemoji/images/emoji/unicode/1f49c.png
// assets/gemoji/images/emoji/unicode/1f49d.png
// assets/gemoji/images/emoji/unicode/1f49e.png
// assets/gemoji/images/emoji/unicode/1f49f.png
// assets/gemoji/images/emoji/unicode/1f4a0.png
// assets/gemoji/images/emoji/unicode/1f4a1.png
// assets/gemoji/images/emoji/unicode/1f4a2.png
// assets/gemoji/images/emoji/unicode/1f4a3.png
// assets/gemoji/images/emoji/unicode/1f4a4.png
// assets/gemoji/images/emoji/unicode/1f4a5.png
// assets/gemoji/images/emoji/unicode/1f4a6.png
// assets/gemoji/images/emoji/unicode/1f4a7.png
// assets/gemoji/images/emoji/unicode/1f4a8.png
// assets/gemoji/images/emoji/unicode/1f4a9.png
// assets/gemoji/images/emoji/unicode/1f4aa.png
// assets/gemoji/images/emoji/unicode/1f4ab.png
// assets/gemoji/images/emoji/unicode/1f4ac.png
// assets/gemoji/images/emoji/unicode/1f4ad.png
// assets/gemoji/images/emoji/unicode/1f4ae.png
// assets/gemoji/images/emoji/unicode/1f4af.png
// assets/gemoji/images/emoji/unicode/1f4b0.png
// assets/gemoji/images/emoji/unicode/1f4b1.png
// assets/gemoji/images/emoji/unicode/1f4b2.png
// assets/gemoji/images/emoji/unicode/1f4b3.png
// assets/gemoji/images/emoji/unicode/1f4b4.png
// assets/gemoji/images/emoji/unicode/1f4b5.png
// assets/gemoji/images/emoji/unicode/1f4b6.png
// assets/gemoji/images/emoji/unicode/1f4b7.png
// assets/gemoji/images/emoji/unicode/1f4b8.png
// assets/gemoji/images/emoji/unicode/1f4b9.png
// assets/gemoji/images/emoji/unicode/1f4ba.png
// assets/gemoji/images/emoji/unicode/1f4bb.png
// assets/gemoji/images/emoji/unicode/1f4bc.png
// assets/gemoji/images/emoji/unicode/1f4bd.png
// assets/gemoji/images/emoji/unicode/1f4be.png
// assets/gemoji/images/emoji/unicode/1f4bf.png
// assets/gemoji/images/emoji/unicode/1f4c0.png
// assets/gemoji/images/emoji/unicode/1f4c1.png
// assets/gemoji/images/emoji/unicode/1f4c2.png
// assets/gemoji/images/emoji/unicode/1f4c3.png
// assets/gemoji/images/emoji/unicode/1f4c4.png
// assets/gemoji/images/emoji/unicode/1f4c5.png
// assets/gemoji/images/emoji/unicode/1f4c6.png
// assets/gemoji/images/emoji/unicode/1f4c7.png
// assets/gemoji/images/emoji/unicode/1f4c8.png
// assets/gemoji/images/emoji/unicode/1f4c9.png
// assets/gemoji/images/emoji/unicode/1f4ca.png
// assets/gemoji/images/emoji/unicode/1f4cb.png
// assets/gemoji/images/emoji/unicode/1f4cc.png
// assets/gemoji/images/emoji/unicode/1f4cd.png
// assets/gemoji/images/emoji/unicode/1f4ce.png
// assets/gemoji/images/emoji/unicode/1f4cf.png
// assets/gemoji/images/emoji/unicode/1f4d0.png
// assets/gemoji/images/emoji/unicode/1f4d1.png
// assets/gemoji/images/emoji/unicode/1f4d2.png
// assets/gemoji/images/emoji/unicode/1f4d3.png
// assets/gemoji/images/emoji/unicode/1f4d4.png
// assets/gemoji/images/emoji/unicode/1f4d5.png
// assets/gemoji/images/emoji/unicode/1f4d6.png
// assets/gemoji/images/emoji/unicode/1f4d7.png
// assets/gemoji/images/emoji/unicode/1f4d8.png
// assets/gemoji/images/emoji/unicode/1f4d9.png
// assets/gemoji/images/emoji/unicode/1f4da.png
// assets/gemoji/images/emoji/unicode/1f4db.png
// assets/gemoji/images/emoji/unicode/1f4dc.png
// assets/gemoji/images/emoji/unicode/1f4dd.png
// assets/gemoji/images/emoji/unicode/1f4de.png
// assets/gemoji/images/emoji/unicode/1f4df.png
// assets/gemoji/images/emoji/unicode/1f4e0.png
// assets/gemoji/images/emoji/unicode/1f4e1.png
// assets/gemoji/images/emoji/unicode/1f4e2.png
// assets/gemoji/images/emoji/unicode/1f4e3.png
// assets/gemoji/images/emoji/unicode/1f4e4.png
// assets/gemoji/images/emoji/unicode/1f4e5.png
// assets/gemoji/images/emoji/unicode/1f4e6.png
// assets/gemoji/images/emoji/unicode/1f4e7.png
// assets/gemoji/images/emoji/unicode/1f4e8.png
// assets/gemoji/images/emoji/unicode/1f4e9.png
// assets/gemoji/images/emoji/unicode/1f4ea.png
// assets/gemoji/images/emoji/unicode/1f4eb.png
// assets/gemoji/images/emoji/unicode/1f4ec.png
// assets/gemoji/images/emoji/unicode/1f4ed.png
// assets/gemoji/images/emoji/unicode/1f4ee.png
// assets/gemoji/images/emoji/unicode/1f4ef.png
// assets/gemoji/images/emoji/unicode/1f4f0.png
// assets/gemoji/images/emoji/unicode/1f4f1.png
// assets/gemoji/images/emoji/unicode/1f4f2.png
// assets/gemoji/images/emoji/unicode/1f4f3.png
// assets/gemoji/images/emoji/unicode/1f4f4.png
// assets/gemoji/images/emoji/unicode/1f4f5.png
// assets/gemoji/images/emoji/unicode/1f4f6.png
// assets/gemoji/images/emoji/unicode/1f4f7.png
// assets/gemoji/images/emoji/unicode/1f4f9.png
// assets/gemoji/images/emoji/unicode/1f4fa.png
// assets/gemoji/images/emoji/unicode/1f4fb.png
// assets/gemoji/images/emoji/unicode/1f4fc.png
// assets/gemoji/images/emoji/unicode/1f500.png
// assets/gemoji/images/emoji/unicode/1f501.png
// assets/gemoji/images/emoji/unicode/1f502.png
// assets/gemoji/images/emoji/unicode/1f503.png
// assets/gemoji/images/emoji/unicode/1f504.png
// assets/gemoji/images/emoji/unicode/1f505.png
// assets/gemoji/images/emoji/unicode/1f506.png
// assets/gemoji/images/emoji/unicode/1f507.png
// assets/gemoji/images/emoji/unicode/1f508.png
// assets/gemoji/images/emoji/unicode/1f509.png
// assets/gemoji/images/emoji/unicode/1f50a.png
// assets/gemoji/images/emoji/unicode/1f50b.png
// assets/gemoji/images/emoji/unicode/1f50c.png
// assets/gemoji/images/emoji/unicode/1f50d.png
// assets/gemoji/images/emoji/unicode/1f50e.png
// assets/gemoji/images/emoji/unicode/1f50f.png
// assets/gemoji/images/emoji/unicode/1f510.png
// assets/gemoji/images/emoji/unicode/1f511.png
// assets/gemoji/images/emoji/unicode/1f512.png
// assets/gemoji/images/emoji/unicode/1f513.png
// assets/gemoji/images/emoji/unicode/1f514.png
// assets/gemoji/images/emoji/unicode/1f515.png
// assets/gemoji/images/emoji/unicode/1f516.png
// assets/gemoji/images/emoji/unicode/1f517.png
// assets/gemoji/images/emoji/unicode/1f518.png
// assets/gemoji/images/emoji/unicode/1f519.png
// assets/gemoji/images/emoji/unicode/1f51a.png
// assets/gemoji/images/emoji/unicode/1f51b.png
// assets/gemoji/images/emoji/unicode/1f51c.png
// assets/gemoji/images/emoji/unicode/1f51d.png
// assets/gemoji/images/emoji/unicode/1f51e.png
// assets/gemoji/images/emoji/unicode/1f51f.png
// assets/gemoji/images/emoji/unicode/1f520.png
// assets/gemoji/images/emoji/unicode/1f521.png
// assets/gemoji/images/emoji/unicode/1f522.png
// assets/gemoji/images/emoji/unicode/1f523.png
// assets/gemoji/images/emoji/unicode/1f524.png
// assets/gemoji/images/emoji/unicode/1f525.png
// assets/gemoji/images/emoji/unicode/1f526.png
// assets/gemoji/images/emoji/unicode/1f527.png
// assets/gemoji/images/emoji/unicode/1f528.png
// assets/gemoji/images/emoji/unicode/1f529.png
// assets/gemoji/images/emoji/unicode/1f52a.png
// assets/gemoji/images/emoji/unicode/1f52b.png
// assets/gemoji/images/emoji/unicode/1f52c.png
// assets/gemoji/images/emoji/unicode/1f52d.png
// assets/gemoji/images/emoji/unicode/1f52e.png
// assets/gemoji/images/emoji/unicode/1f52f.png
// assets/gemoji/images/emoji/unicode/1f530.png
// assets/gemoji/images/emoji/unicode/1f531.png
// assets/gemoji/images/emoji/unicode/1f532.png
// assets/gemoji/images/emoji/unicode/1f533.png
// assets/gemoji/images/emoji/unicode/1f534.png
// assets/gemoji/images/emoji/unicode/1f535.png
// assets/gemoji/images/emoji/unicode/1f536.png
// assets/gemoji/images/emoji/unicode/1f537.png
// assets/gemoji/images/emoji/unicode/1f538.png
// assets/gemoji/images/emoji/unicode/1f539.png
// assets/gemoji/images/emoji/unicode/1f53a.png
// assets/gemoji/images/emoji/unicode/1f53b.png
// assets/gemoji/images/emoji/unicode/1f53c.png
// assets/gemoji/images/emoji/unicode/1f53d.png
// assets/gemoji/images/emoji/unicode/1f550.png
// assets/gemoji/images/emoji/unicode/1f551.png
// assets/gemoji/images/emoji/unicode/1f552.png
// assets/gemoji/images/emoji/unicode/1f553.png
// assets/gemoji/images/emoji/unicode/1f554.png
// assets/gemoji/images/emoji/unicode/1f555.png
// assets/gemoji/images/emoji/unicode/1f556.png
// assets/gemoji/images/emoji/unicode/1f557.png
// assets/gemoji/images/emoji/unicode/1f558.png
// assets/gemoji/images/emoji/unicode/1f559.png
// assets/gemoji/images/emoji/unicode/1f55a.png
// assets/gemoji/images/emoji/unicode/1f55b.png
// assets/gemoji/images/emoji/unicode/1f55c.png
// assets/gemoji/images/emoji/unicode/1f55d.png
// assets/gemoji/images/emoji/unicode/1f55e.png
// assets/gemoji/images/emoji/unicode/1f55f.png
// assets/gemoji/images/emoji/unicode/1f560.png
// assets/gemoji/images/emoji/unicode/1f561.png
// assets/gemoji/images/emoji/unicode/1f562.png
// assets/gemoji/images/emoji/unicode/1f563.png
// assets/gemoji/images/emoji/unicode/1f564.png
// assets/gemoji/images/emoji/unicode/1f565.png
// assets/gemoji/images/emoji/unicode/1f566.png
// assets/gemoji/images/emoji/unicode/1f567.png
// assets/gemoji/images/emoji/unicode/1f5fb.png
// assets/gemoji/images/emoji/unicode/1f5fc.png
// assets/gemoji/images/emoji/unicode/1f5fd.png
// assets/gemoji/images/emoji/unicode/1f5fe.png
// assets/gemoji/images/emoji/unicode/1f5ff.png
// assets/gemoji/images/emoji/unicode/1f600.png
// assets/gemoji/images/emoji/unicode/1f601.png
// assets/gemoji/images/emoji/unicode/1f602.png
// assets/gemoji/images/emoji/unicode/1f603.png
// assets/gemoji/images/emoji/unicode/1f604.png
// assets/gemoji/images/emoji/unicode/1f605.png
// assets/gemoji/images/emoji/unicode/1f606.png
// assets/gemoji/images/emoji/unicode/1f607.png
// assets/gemoji/images/emoji/unicode/1f608.png
// assets/gemoji/images/emoji/unicode/1f609.png
// assets/gemoji/images/emoji/unicode/1f60a.png
// assets/gemoji/images/emoji/unicode/1f60b.png
// assets/gemoji/images/emoji/unicode/1f60c.png
// assets/gemoji/images/emoji/unicode/1f60d.png
// assets/gemoji/images/emoji/unicode/1f60e.png
// assets/gemoji/images/emoji/unicode/1f60f.png
// assets/gemoji/images/emoji/unicode/1f610.png
// assets/gemoji/images/emoji/unicode/1f611.png
// assets/gemoji/images/emoji/unicode/1f612.png
// assets/gemoji/images/emoji/unicode/1f613.png
// assets/gemoji/images/emoji/unicode/1f614.png
// assets/gemoji/images/emoji/unicode/1f615.png
// assets/gemoji/images/emoji/unicode/1f616.png
// assets/gemoji/images/emoji/unicode/1f617.png
// assets/gemoji/images/emoji/unicode/1f618.png
// assets/gemoji/images/emoji/unicode/1f619.png
// assets/gemoji/images/emoji/unicode/1f61a.png
// assets/gemoji/images/emoji/unicode/1f61b.png
// assets/gemoji/images/emoji/unicode/1f61c.png
// assets/gemoji/images/emoji/unicode/1f61d.png
// assets/gemoji/images/emoji/unicode/1f61e.png
// assets/gemoji/images/emoji/unicode/1f61f.png
// assets/gemoji/images/emoji/unicode/1f620.png
// assets/gemoji/images/emoji/unicode/1f621.png
// assets/gemoji/images/emoji/unicode/1f622.png
// assets/gemoji/images/emoji/unicode/1f623.png
// assets/gemoji/images/emoji/unicode/1f624.png
// assets/gemoji/images/emoji/unicode/1f625.png
// assets/gemoji/images/emoji/unicode/1f626.png
// assets/gemoji/images/emoji/unicode/1f627.png
// assets/gemoji/images/emoji/unicode/1f628.png
// assets/gemoji/images/emoji/unicode/1f629.png
// assets/gemoji/images/emoji/unicode/1f62a.png
// assets/gemoji/images/emoji/unicode/1f62b.png
// assets/gemoji/images/emoji/unicode/1f62c.png
// assets/gemoji/images/emoji/unicode/1f62d.png
// assets/gemoji/images/emoji/unicode/1f62e.png
// assets/gemoji/images/emoji/unicode/1f62f.png
// assets/gemoji/images/emoji/unicode/1f630.png
// assets/gemoji/images/emoji/unicode/1f631.png
// assets/gemoji/images/emoji/unicode/1f632.png
// assets/gemoji/images/emoji/unicode/1f633.png
// assets/gemoji/images/emoji/unicode/1f634.png
// assets/gemoji/images/emoji/unicode/1f635.png
// assets/gemoji/images/emoji/unicode/1f636.png
// assets/gemoji/images/emoji/unicode/1f637.png
// assets/gemoji/images/emoji/unicode/1f638.png
// assets/gemoji/images/emoji/unicode/1f639.png
// assets/gemoji/images/emoji/unicode/1f63a.png
// assets/gemoji/images/emoji/unicode/1f63b.png
// assets/gemoji/images/emoji/unicode/1f63c.png
// assets/gemoji/images/emoji/unicode/1f63d.png
// assets/gemoji/images/emoji/unicode/1f63e.png
// assets/gemoji/images/emoji/unicode/1f63f.png
// assets/gemoji/images/emoji/unicode/1f640.png
// assets/gemoji/images/emoji/unicode/1f645.png
// assets/gemoji/images/emoji/unicode/1f646.png
// assets/gemoji/images/emoji/unicode/1f647.png
// assets/gemoji/images/emoji/unicode/1f648.png
// assets/gemoji/images/emoji/unicode/1f649.png
// assets/gemoji/images/emoji/unicode/1f64a.png
// assets/gemoji/images/emoji/unicode/1f64b.png
// assets/gemoji/images/emoji/unicode/1f64c.png
// assets/gemoji/images/emoji/unicode/1f64d.png
// assets/gemoji/images/emoji/unicode/1f64e.png
// assets/gemoji/images/emoji/unicode/1f64f.png
// assets/gemoji/images/emoji/unicode/1f680.png
// assets/gemoji/images/emoji/unicode/1f681.png
// assets/gemoji/images/emoji/unicode/1f682.png
// assets/gemoji/images/emoji/unicode/1f683.png
// assets/gemoji/images/emoji/unicode/1f684.png
// assets/gemoji/images/emoji/unicode/1f685.png
// assets/gemoji/images/emoji/unicode/1f686.png
// assets/gemoji/images/emoji/unicode/1f687.png
// assets/gemoji/images/emoji/unicode/1f688.png
// assets/gemoji/images/emoji/unicode/1f689.png
// assets/gemoji/images/emoji/unicode/1f68a.png
// assets/gemoji/images/emoji/unicode/1f68b.png
// assets/gemoji/images/emoji/unicode/1f68c.png
// assets/gemoji/images/emoji/unicode/1f68d.png
// assets/gemoji/images/emoji/unicode/1f68e.png
// assets/gemoji/images/emoji/unicode/1f68f.png
// assets/gemoji/images/emoji/unicode/1f690.png
// assets/gemoji/images/emoji/unicode/1f691.png
// assets/gemoji/images/emoji/unicode/1f692.png
// assets/gemoji/images/emoji/unicode/1f693.png
// assets/gemoji/images/emoji/unicode/1f694.png
// assets/gemoji/images/emoji/unicode/1f695.png
// assets/gemoji/images/emoji/unicode/1f696.png
// assets/gemoji/images/emoji/unicode/1f697.png
// assets/gemoji/images/emoji/unicode/1f698.png
// assets/gemoji/images/emoji/unicode/1f699.png
// assets/gemoji/images/emoji/unicode/1f69a.png
// assets/gemoji/images/emoji/unicode/1f69b.png
// assets/gemoji/images/emoji/unicode/1f69c.png
// assets/gemoji/images/emoji/unicode/1f69d.png
// assets/gemoji/images/emoji/unicode/1f69e.png
// assets/gemoji/images/emoji/unicode/1f69f.png
// assets/gemoji/images/emoji/unicode/1f6a0.png
// assets/gemoji/images/emoji/unicode/1f6a1.png
// assets/gemoji/images/emoji/unicode/1f6a2.png
// assets/gemoji/images/emoji/unicode/1f6a3.png
// assets/gemoji/images/emoji/unicode/1f6a4.png
// assets/gemoji/images/emoji/unicode/1f6a5.png
// assets/gemoji/images/emoji/unicode/1f6a6.png
// assets/gemoji/images/emoji/unicode/1f6a7.png
// assets/gemoji/images/emoji/unicode/1f6a8.png
// assets/gemoji/images/emoji/unicode/1f6a9.png
// assets/gemoji/images/emoji/unicode/1f6aa.png
// assets/gemoji/images/emoji/unicode/1f6ab.png
// assets/gemoji/images/emoji/unicode/1f6ac.png
// assets/gemoji/images/emoji/unicode/1f6ad.png
// assets/gemoji/images/emoji/unicode/1f6ae.png
// assets/gemoji/images/emoji/unicode/1f6af.png
// assets/gemoji/images/emoji/unicode/1f6b0.png
// assets/gemoji/images/emoji/unicode/1f6b1.png
// assets/gemoji/images/emoji/unicode/1f6b2.png
// assets/gemoji/images/emoji/unicode/1f6b3.png
// assets/gemoji/images/emoji/unicode/1f6b4.png
// assets/gemoji/images/emoji/unicode/1f6b5.png
// assets/gemoji/images/emoji/unicode/1f6b6.png
// assets/gemoji/images/emoji/unicode/1f6b7.png
// assets/gemoji/images/emoji/unicode/1f6b8.png
// assets/gemoji/images/emoji/unicode/1f6b9.png
// assets/gemoji/images/emoji/unicode/1f6ba.png
// assets/gemoji/images/emoji/unicode/1f6bb.png
// assets/gemoji/images/emoji/unicode/1f6bc.png
// assets/gemoji/images/emoji/unicode/1f6bd.png
// assets/gemoji/images/emoji/unicode/1f6be.png
// assets/gemoji/images/emoji/unicode/1f6bf.png
// assets/gemoji/images/emoji/unicode/1f6c0.png
// assets/gemoji/images/emoji/unicode/1f6c1.png
// assets/gemoji/images/emoji/unicode/1f6c2.png
// assets/gemoji/images/emoji/unicode/1f6c3.png
// assets/gemoji/images/emoji/unicode/1f6c4.png
// assets/gemoji/images/emoji/unicode/1f6c5.png
// assets/gemoji/images/emoji/unicode/203c.png
// assets/gemoji/images/emoji/unicode/2049.png
// assets/gemoji/images/emoji/unicode/2122.png
// assets/gemoji/images/emoji/unicode/2139.png
// assets/gemoji/images/emoji/unicode/2194.png
// assets/gemoji/images/emoji/unicode/2195.png
// assets/gemoji/images/emoji/unicode/2196.png
// assets/gemoji/images/emoji/unicode/2197.png
// assets/gemoji/images/emoji/unicode/2198.png
// assets/gemoji/images/emoji/unicode/2199.png
// assets/gemoji/images/emoji/unicode/21a9.png
// assets/gemoji/images/emoji/unicode/21aa.png
// assets/gemoji/images/emoji/unicode/231a.png
// assets/gemoji/images/emoji/unicode/231b.png
// assets/gemoji/images/emoji/unicode/23e9.png
// assets/gemoji/images/emoji/unicode/23ea.png
// assets/gemoji/images/emoji/unicode/23eb.png
// assets/gemoji/images/emoji/unicode/23ec.png
// assets/gemoji/images/emoji/unicode/23f0.png
// assets/gemoji/images/emoji/unicode/23f3.png
// assets/gemoji/images/emoji/unicode/24c2.png
// assets/gemoji/images/emoji/unicode/25aa.png
// assets/gemoji/images/emoji/unicode/25ab.png
// assets/gemoji/images/emoji/unicode/25b6.png
// assets/gemoji/images/emoji/unicode/25c0.png
// assets/gemoji/images/emoji/unicode/25fb.png
// assets/gemoji/images/emoji/unicode/25fc.png
// assets/gemoji/images/emoji/unicode/25fd.png
// assets/gemoji/images/emoji/unicode/25fe.png
// assets/gemoji/images/emoji/unicode/2600.png
// assets/gemoji/images/emoji/unicode/2601.png
// assets/gemoji/images/emoji/unicode/260e.png
// assets/gemoji/images/emoji/unicode/2611.png
// assets/gemoji/images/emoji/unicode/2614.png
// assets/gemoji/images/emoji/unicode/2615.png
// assets/gemoji/images/emoji/unicode/261d.png
// assets/gemoji/images/emoji/unicode/263a.png
// assets/gemoji/images/emoji/unicode/2648.png
// assets/gemoji/images/emoji/unicode/2649.png
// assets/gemoji/images/emoji/unicode/264a.png
// assets/gemoji/images/emoji/unicode/264b.png
// assets/gemoji/images/emoji/unicode/264c.png
// assets/gemoji/images/emoji/unicode/264d.png
// assets/gemoji/images/emoji/unicode/264e.png
// assets/gemoji/images/emoji/unicode/264f.png
// assets/gemoji/images/emoji/unicode/2650.png
// assets/gemoji/images/emoji/unicode/2651.png
// assets/gemoji/images/emoji/unicode/2652.png
// assets/gemoji/images/emoji/unicode/2653.png
// assets/gemoji/images/emoji/unicode/2660.png
// assets/gemoji/images/emoji/unicode/2663.png
// assets/gemoji/images/emoji/unicode/2665.png
// assets/gemoji/images/emoji/unicode/2666.png
// assets/gemoji/images/emoji/unicode/2668.png
// assets/gemoji/images/emoji/unicode/267b.png
// assets/gemoji/images/emoji/unicode/267f.png
// assets/gemoji/images/emoji/unicode/2693.png
// assets/gemoji/images/emoji/unicode/26a0.png
// assets/gemoji/images/emoji/unicode/26a1.png
// assets/gemoji/images/emoji/unicode/26aa.png
// assets/gemoji/images/emoji/unicode/26ab.png
// assets/gemoji/images/emoji/unicode/26bd.png
// assets/gemoji/images/emoji/unicode/26be.png
// assets/gemoji/images/emoji/unicode/26c4.png
// assets/gemoji/images/emoji/unicode/26c5.png
// assets/gemoji/images/emoji/unicode/26ce.png
// assets/gemoji/images/emoji/unicode/26d4.png
// assets/gemoji/images/emoji/unicode/26ea.png
// assets/gemoji/images/emoji/unicode/26f2.png
// assets/gemoji/images/emoji/unicode/26f3.png
// assets/gemoji/images/emoji/unicode/26f5.png
// assets/gemoji/images/emoji/unicode/26fa.png
// assets/gemoji/images/emoji/unicode/26fd.png
// assets/gemoji/images/emoji/unicode/2702.png
// assets/gemoji/images/emoji/unicode/2705.png
// assets/gemoji/images/emoji/unicode/2708.png
// assets/gemoji/images/emoji/unicode/2709.png
// assets/gemoji/images/emoji/unicode/270a.png
// assets/gemoji/images/emoji/unicode/270b.png
// assets/gemoji/images/emoji/unicode/270c.png
// assets/gemoji/images/emoji/unicode/270f.png
// assets/gemoji/images/emoji/unicode/2712.png
// assets/gemoji/images/emoji/unicode/2714.png
// assets/gemoji/images/emoji/unicode/2716.png
// assets/gemoji/images/emoji/unicode/2728.png
// assets/gemoji/images/emoji/unicode/2733.png
// assets/gemoji/images/emoji/unicode/2734.png
// assets/gemoji/images/emoji/unicode/2744.png
// assets/gemoji/images/emoji/unicode/2747.png
// assets/gemoji/images/emoji/unicode/274c.png
// assets/gemoji/images/emoji/unicode/274e.png
// assets/gemoji/images/emoji/unicode/2753.png
// assets/gemoji/images/emoji/unicode/2754.png
// assets/gemoji/images/emoji/unicode/2755.png
// assets/gemoji/images/emoji/unicode/2757.png
// assets/gemoji/images/emoji/unicode/2764.png
// assets/gemoji/images/emoji/unicode/2795.png
// assets/gemoji/images/emoji/unicode/2796.png
// assets/gemoji/images/emoji/unicode/2797.png
// assets/gemoji/images/emoji/unicode/27a1.png
// assets/gemoji/images/emoji/unicode/27b0.png
// assets/gemoji/images/emoji/unicode/27bf.png
// assets/gemoji/images/emoji/unicode/2934.png
// assets/gemoji/images/emoji/unicode/2935.png
// assets/gemoji/images/emoji/unicode/2b05.png
// assets/gemoji/images/emoji/unicode/2b06.png
// assets/gemoji/images/emoji/unicode/2b07.png
// assets/gemoji/images/emoji/unicode/2b1b.png
// assets/gemoji/images/emoji/unicode/2b1c.png
// assets/gemoji/images/emoji/unicode/2b50.png
// assets/gemoji/images/emoji/unicode/2b55.png
// assets/gemoji/images/emoji/unicode/3030.png
// assets/gemoji/images/emoji/unicode/303d.png
// assets/gemoji/images/emoji/unicode/3297.png
// assets/gemoji/images/emoji/unicode/3299.png
// DO NOT EDIT!

package main

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
)

// bindataRead reads the given file from disk. It returns an error on failure.
func bindataRead(path, name string) ([]byte, error) {
	buf, err := ioutil.ReadFile(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset %s at %s: %v", name, path, err)
	}
	return buf, err
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

// assetsIndexHtml reads file data from disk. It returns an error on failure.
func assetsIndexHtml() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/index.html"
	name := "assets/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssPrintPaperCss reads file data from disk. It returns an error on failure.
func assetsRevealCssPrintPaperCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/print/paper.css"
	name := "assets/reveal/css/print/paper.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssPrintPdfCss reads file data from disk. It returns an error on failure.
func assetsRevealCssPrintPdfCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/print/pdf.css"
	name := "assets/reveal/css/print/pdf.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssRevealCss reads file data from disk. It returns an error on failure.
func assetsRevealCssRevealCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/reveal.css"
	name := "assets/reveal/css/reveal.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssRevealScss reads file data from disk. It returns an error on failure.
func assetsRevealCssRevealScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/reveal.scss"
	name := "assets/reveal/css/reveal.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeReadmeMd reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeReadmeMd() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/README.md"
	name := "assets/reveal/css/theme/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeBeigeCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeBeigeCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/beige.css"
	name := "assets/reveal/css/theme/beige.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeBlackCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeBlackCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/black.css"
	name := "assets/reveal/css/theme/black.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeBloodCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeBloodCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/blood.css"
	name := "assets/reveal/css/theme/blood.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeLeagueCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeLeagueCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/league.css"
	name := "assets/reveal/css/theme/league.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeMoonCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeMoonCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/moon.css"
	name := "assets/reveal/css/theme/moon.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeNightCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeNightCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/night.css"
	name := "assets/reveal/css/theme/night.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSerifCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSerifCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/serif.css"
	name := "assets/reveal/css/theme/serif.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSimpleCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSimpleCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/simple.css"
	name := "assets/reveal/css/theme/simple.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSkyCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSkyCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/sky.css"
	name := "assets/reveal/css/theme/sky.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSolarizedCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSolarizedCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/solarized.css"
	name := "assets/reveal/css/theme/solarized.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceBeigeScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceBeigeScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/beige.scss"
	name := "assets/reveal/css/theme/source/beige.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceBlackScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceBlackScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/black.scss"
	name := "assets/reveal/css/theme/source/black.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceBloodScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceBloodScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/blood.scss"
	name := "assets/reveal/css/theme/source/blood.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceLeagueScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceLeagueScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/league.scss"
	name := "assets/reveal/css/theme/source/league.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceMoonScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceMoonScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/moon.scss"
	name := "assets/reveal/css/theme/source/moon.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceNightScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceNightScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/night.scss"
	name := "assets/reveal/css/theme/source/night.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceSerifScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceSerifScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/serif.scss"
	name := "assets/reveal/css/theme/source/serif.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceSimpleScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceSimpleScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/simple.scss"
	name := "assets/reveal/css/theme/source/simple.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceSkyScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceSkyScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/sky.scss"
	name := "assets/reveal/css/theme/source/sky.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceSolarizedScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceSolarizedScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/solarized.scss"
	name := "assets/reveal/css/theme/source/solarized.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeSourceWhiteScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeSourceWhiteScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/source/white.scss"
	name := "assets/reveal/css/theme/source/white.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeTemplateMixinsScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeTemplateMixinsScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/template/mixins.scss"
	name := "assets/reveal/css/theme/template/mixins.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeTemplateSettingsScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeTemplateSettingsScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/template/settings.scss"
	name := "assets/reveal/css/theme/template/settings.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeTemplateThemeScss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeTemplateThemeScss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/template/theme.scss"
	name := "assets/reveal/css/theme/template/theme.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealCssThemeWhiteCss reads file data from disk. It returns an error on failure.
func assetsRevealCssThemeWhiteCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/css/theme/white.css"
	name := "assets/reveal/css/theme/white.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealJsRevealJs reads file data from disk. It returns an error on failure.
func assetsRevealJsRevealJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/js/reveal.js"
	name := "assets/reveal/js/reveal.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibCssZenburnCss reads file data from disk. It returns an error on failure.
func assetsRevealLibCssZenburnCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/css/zenburn.css"
	name := "assets/reveal/lib/css/zenburn.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontLeagueGothicLicense reads file data from disk. It returns an error on failure.
func assetsRevealLibFontLeagueGothicLicense() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/league-gothic/LICENSE"
	name := "assets/reveal/lib/font/league-gothic/LICENSE"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontLeagueGothicLeagueGothicCss reads file data from disk. It returns an error on failure.
func assetsRevealLibFontLeagueGothicLeagueGothicCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/league-gothic/league-gothic.css"
	name := "assets/reveal/lib/font/league-gothic/league-gothic.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontLeagueGothicLeagueGothicEot reads file data from disk. It returns an error on failure.
func assetsRevealLibFontLeagueGothicLeagueGothicEot() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/league-gothic/league-gothic.eot"
	name := "assets/reveal/lib/font/league-gothic/league-gothic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontLeagueGothicLeagueGothicTtf reads file data from disk. It returns an error on failure.
func assetsRevealLibFontLeagueGothicLeagueGothicTtf() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/league-gothic/league-gothic.ttf"
	name := "assets/reveal/lib/font/league-gothic/league-gothic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontLeagueGothicLeagueGothicWoff reads file data from disk. It returns an error on failure.
func assetsRevealLibFontLeagueGothicLeagueGothicWoff() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/league-gothic/league-gothic.woff"
	name := "assets/reveal/lib/font/league-gothic/league-gothic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProLicense reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProLicense() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/LICENSE"
	name := "assets/reveal/lib/font/source-sans-pro/LICENSE"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProItalicEot reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProItalicEot() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.eot"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProItalicTtf reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProItalicTtf() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.ttf"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProItalicWoff reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProItalicWoff() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.woff"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProRegularEot reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProRegularEot() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.eot"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProRegularTtf reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProRegularTtf() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.ttf"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProRegularWoff reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProRegularWoff() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.woff"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProSemiboldEot reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProSemiboldEot() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.eot"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProSemiboldTtf reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProSemiboldTtf() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.ttf"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProSemiboldWoff reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProSemiboldWoff() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.woff"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProSemibolditalicEot reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProSemibolditalicEot() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.eot"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProSemibolditalicTtf reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProSemibolditalicTtf() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.ttf"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProSemibolditalicWoff reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProSemibolditalicWoff() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.woff"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibFontSourceSansProSourceSansProCss reads file data from disk. It returns an error on failure.
func assetsRevealLibFontSourceSansProSourceSansProCss() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/font/source-sans-pro/source-sans-pro.css"
	name := "assets/reveal/lib/font/source-sans-pro/source-sans-pro.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibJsClasslistJs reads file data from disk. It returns an error on failure.
func assetsRevealLibJsClasslistJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/js/classList.js"
	name := "assets/reveal/lib/js/classList.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibJsHeadMinJs reads file data from disk. It returns an error on failure.
func assetsRevealLibJsHeadMinJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/js/head.min.js"
	name := "assets/reveal/lib/js/head.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealLibJsHtml5shivJs reads file data from disk. It returns an error on failure.
func assetsRevealLibJsHtml5shivJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/lib/js/html5shiv.js"
	name := "assets/reveal/lib/js/html5shiv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginHighlightHighlightJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginHighlightHighlightJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/highlight/highlight.js"
	name := "assets/reveal/plugin/highlight/highlight.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginMarkdownExampleHtml reads file data from disk. It returns an error on failure.
func assetsRevealPluginMarkdownExampleHtml() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/markdown/example.html"
	name := "assets/reveal/plugin/markdown/example.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginMarkdownExampleMd reads file data from disk. It returns an error on failure.
func assetsRevealPluginMarkdownExampleMd() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/markdown/example.md"
	name := "assets/reveal/plugin/markdown/example.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginMarkdownMarkdownJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginMarkdownMarkdownJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/markdown/markdown.js"
	name := "assets/reveal/plugin/markdown/markdown.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginMarkdownMarkedJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginMarkdownMarkedJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/markdown/marked.js"
	name := "assets/reveal/plugin/markdown/marked.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginMathMathJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginMathMathJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/math/math.js"
	name := "assets/reveal/plugin/math/math.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginMultiplexClientJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginMultiplexClientJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/multiplex/client.js"
	name := "assets/reveal/plugin/multiplex/client.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginMultiplexIndexJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginMultiplexIndexJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/multiplex/index.js"
	name := "assets/reveal/plugin/multiplex/index.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginMultiplexMasterJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginMultiplexMasterJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/multiplex/master.js"
	name := "assets/reveal/plugin/multiplex/master.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginMultiplexPackageJson reads file data from disk. It returns an error on failure.
func assetsRevealPluginMultiplexPackageJson() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/multiplex/package.json"
	name := "assets/reveal/plugin/multiplex/package.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginNotesNotesHtml reads file data from disk. It returns an error on failure.
func assetsRevealPluginNotesNotesHtml() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/notes/notes.html"
	name := "assets/reveal/plugin/notes/notes.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginNotesNotesJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginNotesNotesJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/notes/notes.js"
	name := "assets/reveal/plugin/notes/notes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginNotesServerClientJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginNotesServerClientJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/notes-server/client.js"
	name := "assets/reveal/plugin/notes-server/client.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginNotesServerIndexJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginNotesServerIndexJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/notes-server/index.js"
	name := "assets/reveal/plugin/notes-server/index.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginNotesServerNotesHtml reads file data from disk. It returns an error on failure.
func assetsRevealPluginNotesServerNotesHtml() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/notes-server/notes.html"
	name := "assets/reveal/plugin/notes-server/notes.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginPrintPdfPrintPdfJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginPrintPdfPrintPdfJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/print-pdf/print-pdf.js"
	name := "assets/reveal/plugin/print-pdf/print-pdf.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginSearchSearchJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginSearchSearchJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/search/search.js"
	name := "assets/reveal/plugin/search/search.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsRevealPluginZoomJsZoomJs reads file data from disk. It returns an error on failure.
func assetsRevealPluginZoomJsZoomJs() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/reveal/plugin/zoom-js/zoom.js"
	name := "assets/reveal/plugin/zoom-js/zoom.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiDbEmojiJson reads file data from disk. It returns an error on failure.
func assetsGemojiDbEmojiJson() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/db/emoji.json"
	name := "assets/gemoji/db/emoji.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiBasecampPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiBasecampPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/basecamp.png"
	name := "assets/gemoji/images/emoji/basecamp.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiBasecampyPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiBasecampyPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/basecampy.png"
	name := "assets/gemoji/images/emoji/basecampy.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiBowtiePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiBowtiePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/bowtie.png"
	name := "assets/gemoji/images/emoji/bowtie.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiFeelsgoodPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiFeelsgoodPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/feelsgood.png"
	name := "assets/gemoji/images/emoji/feelsgood.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiFinnadiePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiFinnadiePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/finnadie.png"
	name := "assets/gemoji/images/emoji/finnadie.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiFuPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiFuPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/fu.png"
	name := "assets/gemoji/images/emoji/fu.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiGoberserkPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiGoberserkPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/goberserk.png"
	name := "assets/gemoji/images/emoji/goberserk.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiGodmodePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiGodmodePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/godmode.png"
	name := "assets/gemoji/images/emoji/godmode.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiHurtrealbadPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiHurtrealbadPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/hurtrealbad.png"
	name := "assets/gemoji/images/emoji/hurtrealbad.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiMetalPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiMetalPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/metal.png"
	name := "assets/gemoji/images/emoji/metal.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiNeckbeardPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiNeckbeardPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/neckbeard.png"
	name := "assets/gemoji/images/emoji/neckbeard.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiOctocatPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiOctocatPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/octocat.png"
	name := "assets/gemoji/images/emoji/octocat.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiRage1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiRage1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/rage1.png"
	name := "assets/gemoji/images/emoji/rage1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiRage2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiRage2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/rage2.png"
	name := "assets/gemoji/images/emoji/rage2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiRage3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiRage3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/rage3.png"
	name := "assets/gemoji/images/emoji/rage3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiRage4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiRage4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/rage4.png"
	name := "assets/gemoji/images/emoji/rage4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiShipitPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiShipitPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/shipit.png"
	name := "assets/gemoji/images/emoji/shipit.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiSuspectPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiSuspectPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/suspect.png"
	name := "assets/gemoji/images/emoji/suspect.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiTacoPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiTacoPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/taco.png"
	name := "assets/gemoji/images/emoji/taco.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiTrollfacePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiTrollfacePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/trollface.png"
	name := "assets/gemoji/images/emoji/trollface.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode002320e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode002320e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0023-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0023-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003020e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003020e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0030-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0030-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003120e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003120e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0031-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0031-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003220e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003220e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0032-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0032-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003320e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003320e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0033-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0033-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003420e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003420e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0034-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0034-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003520e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003520e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0035-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0035-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003620e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003620e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0036-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0036-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003720e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003720e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0037-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0037-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003820e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003820e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0038-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0038-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode003920e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode003920e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/0039-20e3.png"
	name := "assets/gemoji/images/emoji/unicode/0039-20e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode00a9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode00a9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/00a9.png"
	name := "assets/gemoji/images/emoji/unicode/00a9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode00aePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode00aePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/00ae.png"
	name := "assets/gemoji/images/emoji/unicode/00ae.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f004Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f004Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f004.png"
	name := "assets/gemoji/images/emoji/unicode/1f004.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f0cfPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f0cfPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f0cf.png"
	name := "assets/gemoji/images/emoji/unicode/1f0cf.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f170Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f170Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f170.png"
	name := "assets/gemoji/images/emoji/unicode/1f170.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f171Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f171Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f171.png"
	name := "assets/gemoji/images/emoji/unicode/1f171.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f17ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f17ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f17e.png"
	name := "assets/gemoji/images/emoji/unicode/1f17e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f17fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f17fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f17f.png"
	name := "assets/gemoji/images/emoji/unicode/1f17f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f18ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f18ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f18e.png"
	name := "assets/gemoji/images/emoji/unicode/1f18e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f191Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f191Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f191.png"
	name := "assets/gemoji/images/emoji/unicode/1f191.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f192Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f192Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f192.png"
	name := "assets/gemoji/images/emoji/unicode/1f192.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f193Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f193Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f193.png"
	name := "assets/gemoji/images/emoji/unicode/1f193.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f194Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f194Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f194.png"
	name := "assets/gemoji/images/emoji/unicode/1f194.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f195Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f195Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f195.png"
	name := "assets/gemoji/images/emoji/unicode/1f195.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f196Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f196Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f196.png"
	name := "assets/gemoji/images/emoji/unicode/1f196.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f197Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f197Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f197.png"
	name := "assets/gemoji/images/emoji/unicode/1f197.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f198Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f198Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f198.png"
	name := "assets/gemoji/images/emoji/unicode/1f198.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f199Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f199Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f199.png"
	name := "assets/gemoji/images/emoji/unicode/1f199.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f19aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f19aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f19a.png"
	name := "assets/gemoji/images/emoji/unicode/1f19a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1e81f1f3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1e81f1f3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1e8-1f1f3.png"
	name := "assets/gemoji/images/emoji/unicode/1f1e8-1f1f3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1e91f1eaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1e91f1eaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1e9-1f1ea.png"
	name := "assets/gemoji/images/emoji/unicode/1f1e9-1f1ea.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1ea1f1f8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1ea1f1f8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1ea-1f1f8.png"
	name := "assets/gemoji/images/emoji/unicode/1f1ea-1f1f8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1eb1f1f7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1eb1f1f7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1eb-1f1f7.png"
	name := "assets/gemoji/images/emoji/unicode/1f1eb-1f1f7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1ec1f1e7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1ec1f1e7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1ec-1f1e7.png"
	name := "assets/gemoji/images/emoji/unicode/1f1ec-1f1e7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1ee1f1f9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1ee1f1f9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1ee-1f1f9.png"
	name := "assets/gemoji/images/emoji/unicode/1f1ee-1f1f9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1ef1f1f5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1ef1f1f5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1ef-1f1f5.png"
	name := "assets/gemoji/images/emoji/unicode/1f1ef-1f1f5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1f01f1f7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1f01f1f7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1f0-1f1f7.png"
	name := "assets/gemoji/images/emoji/unicode/1f1f0-1f1f7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1f71f1faPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1f71f1faPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1f7-1f1fa.png"
	name := "assets/gemoji/images/emoji/unicode/1f1f7-1f1fa.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f1fa1f1f8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f1fa1f1f8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f1fa-1f1f8.png"
	name := "assets/gemoji/images/emoji/unicode/1f1fa-1f1f8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f201Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f201Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f201.png"
	name := "assets/gemoji/images/emoji/unicode/1f201.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f202Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f202Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f202.png"
	name := "assets/gemoji/images/emoji/unicode/1f202.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f21aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f21aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f21a.png"
	name := "assets/gemoji/images/emoji/unicode/1f21a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f22fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f22fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f22f.png"
	name := "assets/gemoji/images/emoji/unicode/1f22f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f232Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f232Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f232.png"
	name := "assets/gemoji/images/emoji/unicode/1f232.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f233Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f233Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f233.png"
	name := "assets/gemoji/images/emoji/unicode/1f233.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f234Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f234Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f234.png"
	name := "assets/gemoji/images/emoji/unicode/1f234.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f235Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f235Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f235.png"
	name := "assets/gemoji/images/emoji/unicode/1f235.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f236Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f236Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f236.png"
	name := "assets/gemoji/images/emoji/unicode/1f236.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f237Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f237Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f237.png"
	name := "assets/gemoji/images/emoji/unicode/1f237.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f238Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f238Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f238.png"
	name := "assets/gemoji/images/emoji/unicode/1f238.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f239Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f239Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f239.png"
	name := "assets/gemoji/images/emoji/unicode/1f239.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f23aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f23aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f23a.png"
	name := "assets/gemoji/images/emoji/unicode/1f23a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f250Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f250Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f250.png"
	name := "assets/gemoji/images/emoji/unicode/1f250.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f251Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f251Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f251.png"
	name := "assets/gemoji/images/emoji/unicode/1f251.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f300Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f300Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f300.png"
	name := "assets/gemoji/images/emoji/unicode/1f300.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f301Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f301Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f301.png"
	name := "assets/gemoji/images/emoji/unicode/1f301.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f302Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f302Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f302.png"
	name := "assets/gemoji/images/emoji/unicode/1f302.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f303Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f303Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f303.png"
	name := "assets/gemoji/images/emoji/unicode/1f303.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f304Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f304Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f304.png"
	name := "assets/gemoji/images/emoji/unicode/1f304.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f305Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f305Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f305.png"
	name := "assets/gemoji/images/emoji/unicode/1f305.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f306Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f306Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f306.png"
	name := "assets/gemoji/images/emoji/unicode/1f306.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f307Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f307Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f307.png"
	name := "assets/gemoji/images/emoji/unicode/1f307.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f308Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f308Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f308.png"
	name := "assets/gemoji/images/emoji/unicode/1f308.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f309Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f309Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f309.png"
	name := "assets/gemoji/images/emoji/unicode/1f309.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f30aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f30aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f30a.png"
	name := "assets/gemoji/images/emoji/unicode/1f30a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f30bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f30bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f30b.png"
	name := "assets/gemoji/images/emoji/unicode/1f30b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f30cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f30cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f30c.png"
	name := "assets/gemoji/images/emoji/unicode/1f30c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f30dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f30dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f30d.png"
	name := "assets/gemoji/images/emoji/unicode/1f30d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f30ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f30ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f30e.png"
	name := "assets/gemoji/images/emoji/unicode/1f30e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f30fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f30fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f30f.png"
	name := "assets/gemoji/images/emoji/unicode/1f30f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f310Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f310Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f310.png"
	name := "assets/gemoji/images/emoji/unicode/1f310.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f311Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f311Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f311.png"
	name := "assets/gemoji/images/emoji/unicode/1f311.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f312Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f312Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f312.png"
	name := "assets/gemoji/images/emoji/unicode/1f312.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f313Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f313Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f313.png"
	name := "assets/gemoji/images/emoji/unicode/1f313.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f314Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f314Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f314.png"
	name := "assets/gemoji/images/emoji/unicode/1f314.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f315Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f315Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f315.png"
	name := "assets/gemoji/images/emoji/unicode/1f315.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f316Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f316Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f316.png"
	name := "assets/gemoji/images/emoji/unicode/1f316.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f317Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f317Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f317.png"
	name := "assets/gemoji/images/emoji/unicode/1f317.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f318Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f318Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f318.png"
	name := "assets/gemoji/images/emoji/unicode/1f318.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f319Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f319Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f319.png"
	name := "assets/gemoji/images/emoji/unicode/1f319.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f31aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f31aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f31a.png"
	name := "assets/gemoji/images/emoji/unicode/1f31a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f31bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f31bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f31b.png"
	name := "assets/gemoji/images/emoji/unicode/1f31b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f31cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f31cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f31c.png"
	name := "assets/gemoji/images/emoji/unicode/1f31c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f31dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f31dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f31d.png"
	name := "assets/gemoji/images/emoji/unicode/1f31d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f31ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f31ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f31e.png"
	name := "assets/gemoji/images/emoji/unicode/1f31e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f31fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f31fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f31f.png"
	name := "assets/gemoji/images/emoji/unicode/1f31f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f320Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f320Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f320.png"
	name := "assets/gemoji/images/emoji/unicode/1f320.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f330Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f330Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f330.png"
	name := "assets/gemoji/images/emoji/unicode/1f330.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f331Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f331Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f331.png"
	name := "assets/gemoji/images/emoji/unicode/1f331.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f332Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f332Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f332.png"
	name := "assets/gemoji/images/emoji/unicode/1f332.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f333Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f333Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f333.png"
	name := "assets/gemoji/images/emoji/unicode/1f333.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f334Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f334Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f334.png"
	name := "assets/gemoji/images/emoji/unicode/1f334.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f335Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f335Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f335.png"
	name := "assets/gemoji/images/emoji/unicode/1f335.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f337Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f337Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f337.png"
	name := "assets/gemoji/images/emoji/unicode/1f337.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f338Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f338Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f338.png"
	name := "assets/gemoji/images/emoji/unicode/1f338.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f339Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f339Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f339.png"
	name := "assets/gemoji/images/emoji/unicode/1f339.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f33aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f33aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f33a.png"
	name := "assets/gemoji/images/emoji/unicode/1f33a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f33bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f33bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f33b.png"
	name := "assets/gemoji/images/emoji/unicode/1f33b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f33cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f33cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f33c.png"
	name := "assets/gemoji/images/emoji/unicode/1f33c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f33dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f33dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f33d.png"
	name := "assets/gemoji/images/emoji/unicode/1f33d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f33ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f33ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f33e.png"
	name := "assets/gemoji/images/emoji/unicode/1f33e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f33fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f33fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f33f.png"
	name := "assets/gemoji/images/emoji/unicode/1f33f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f340Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f340Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f340.png"
	name := "assets/gemoji/images/emoji/unicode/1f340.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f341Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f341Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f341.png"
	name := "assets/gemoji/images/emoji/unicode/1f341.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f342Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f342Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f342.png"
	name := "assets/gemoji/images/emoji/unicode/1f342.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f343Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f343Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f343.png"
	name := "assets/gemoji/images/emoji/unicode/1f343.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f344Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f344Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f344.png"
	name := "assets/gemoji/images/emoji/unicode/1f344.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f345Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f345Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f345.png"
	name := "assets/gemoji/images/emoji/unicode/1f345.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f346Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f346Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f346.png"
	name := "assets/gemoji/images/emoji/unicode/1f346.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f347Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f347Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f347.png"
	name := "assets/gemoji/images/emoji/unicode/1f347.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f348Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f348Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f348.png"
	name := "assets/gemoji/images/emoji/unicode/1f348.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f349Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f349Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f349.png"
	name := "assets/gemoji/images/emoji/unicode/1f349.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f34aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f34aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f34a.png"
	name := "assets/gemoji/images/emoji/unicode/1f34a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f34bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f34bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f34b.png"
	name := "assets/gemoji/images/emoji/unicode/1f34b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f34cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f34cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f34c.png"
	name := "assets/gemoji/images/emoji/unicode/1f34c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f34dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f34dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f34d.png"
	name := "assets/gemoji/images/emoji/unicode/1f34d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f34ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f34ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f34e.png"
	name := "assets/gemoji/images/emoji/unicode/1f34e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f34fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f34fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f34f.png"
	name := "assets/gemoji/images/emoji/unicode/1f34f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f350Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f350Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f350.png"
	name := "assets/gemoji/images/emoji/unicode/1f350.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f351Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f351Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f351.png"
	name := "assets/gemoji/images/emoji/unicode/1f351.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f352Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f352Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f352.png"
	name := "assets/gemoji/images/emoji/unicode/1f352.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f353Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f353Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f353.png"
	name := "assets/gemoji/images/emoji/unicode/1f353.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f354Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f354Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f354.png"
	name := "assets/gemoji/images/emoji/unicode/1f354.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f355Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f355Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f355.png"
	name := "assets/gemoji/images/emoji/unicode/1f355.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f356Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f356Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f356.png"
	name := "assets/gemoji/images/emoji/unicode/1f356.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f357Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f357Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f357.png"
	name := "assets/gemoji/images/emoji/unicode/1f357.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f358Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f358Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f358.png"
	name := "assets/gemoji/images/emoji/unicode/1f358.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f359Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f359Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f359.png"
	name := "assets/gemoji/images/emoji/unicode/1f359.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f35aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f35aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f35a.png"
	name := "assets/gemoji/images/emoji/unicode/1f35a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f35bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f35bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f35b.png"
	name := "assets/gemoji/images/emoji/unicode/1f35b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f35cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f35cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f35c.png"
	name := "assets/gemoji/images/emoji/unicode/1f35c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f35dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f35dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f35d.png"
	name := "assets/gemoji/images/emoji/unicode/1f35d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f35ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f35ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f35e.png"
	name := "assets/gemoji/images/emoji/unicode/1f35e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f35fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f35fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f35f.png"
	name := "assets/gemoji/images/emoji/unicode/1f35f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f360Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f360Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f360.png"
	name := "assets/gemoji/images/emoji/unicode/1f360.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f361Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f361Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f361.png"
	name := "assets/gemoji/images/emoji/unicode/1f361.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f362Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f362Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f362.png"
	name := "assets/gemoji/images/emoji/unicode/1f362.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f363Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f363Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f363.png"
	name := "assets/gemoji/images/emoji/unicode/1f363.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f364Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f364Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f364.png"
	name := "assets/gemoji/images/emoji/unicode/1f364.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f365Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f365Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f365.png"
	name := "assets/gemoji/images/emoji/unicode/1f365.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f366Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f366Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f366.png"
	name := "assets/gemoji/images/emoji/unicode/1f366.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f367Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f367Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f367.png"
	name := "assets/gemoji/images/emoji/unicode/1f367.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f368Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f368Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f368.png"
	name := "assets/gemoji/images/emoji/unicode/1f368.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f369Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f369Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f369.png"
	name := "assets/gemoji/images/emoji/unicode/1f369.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f36aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f36aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f36a.png"
	name := "assets/gemoji/images/emoji/unicode/1f36a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f36bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f36bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f36b.png"
	name := "assets/gemoji/images/emoji/unicode/1f36b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f36cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f36cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f36c.png"
	name := "assets/gemoji/images/emoji/unicode/1f36c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f36dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f36dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f36d.png"
	name := "assets/gemoji/images/emoji/unicode/1f36d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f36ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f36ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f36e.png"
	name := "assets/gemoji/images/emoji/unicode/1f36e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f36fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f36fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f36f.png"
	name := "assets/gemoji/images/emoji/unicode/1f36f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f370Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f370Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f370.png"
	name := "assets/gemoji/images/emoji/unicode/1f370.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f371Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f371Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f371.png"
	name := "assets/gemoji/images/emoji/unicode/1f371.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f372Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f372Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f372.png"
	name := "assets/gemoji/images/emoji/unicode/1f372.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f373Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f373Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f373.png"
	name := "assets/gemoji/images/emoji/unicode/1f373.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f374Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f374Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f374.png"
	name := "assets/gemoji/images/emoji/unicode/1f374.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f375Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f375Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f375.png"
	name := "assets/gemoji/images/emoji/unicode/1f375.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f376Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f376Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f376.png"
	name := "assets/gemoji/images/emoji/unicode/1f376.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f377Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f377Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f377.png"
	name := "assets/gemoji/images/emoji/unicode/1f377.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f378Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f378Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f378.png"
	name := "assets/gemoji/images/emoji/unicode/1f378.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f379Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f379Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f379.png"
	name := "assets/gemoji/images/emoji/unicode/1f379.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f37aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f37aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f37a.png"
	name := "assets/gemoji/images/emoji/unicode/1f37a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f37bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f37bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f37b.png"
	name := "assets/gemoji/images/emoji/unicode/1f37b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f37cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f37cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f37c.png"
	name := "assets/gemoji/images/emoji/unicode/1f37c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f380Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f380Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f380.png"
	name := "assets/gemoji/images/emoji/unicode/1f380.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f381Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f381Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f381.png"
	name := "assets/gemoji/images/emoji/unicode/1f381.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f382Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f382Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f382.png"
	name := "assets/gemoji/images/emoji/unicode/1f382.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f383Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f383Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f383.png"
	name := "assets/gemoji/images/emoji/unicode/1f383.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f384Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f384Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f384.png"
	name := "assets/gemoji/images/emoji/unicode/1f384.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f385Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f385Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f385.png"
	name := "assets/gemoji/images/emoji/unicode/1f385.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f386Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f386Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f386.png"
	name := "assets/gemoji/images/emoji/unicode/1f386.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f387Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f387Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f387.png"
	name := "assets/gemoji/images/emoji/unicode/1f387.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f388Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f388Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f388.png"
	name := "assets/gemoji/images/emoji/unicode/1f388.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f389Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f389Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f389.png"
	name := "assets/gemoji/images/emoji/unicode/1f389.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f38aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f38aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f38a.png"
	name := "assets/gemoji/images/emoji/unicode/1f38a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f38bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f38bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f38b.png"
	name := "assets/gemoji/images/emoji/unicode/1f38b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f38cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f38cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f38c.png"
	name := "assets/gemoji/images/emoji/unicode/1f38c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f38dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f38dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f38d.png"
	name := "assets/gemoji/images/emoji/unicode/1f38d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f38ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f38ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f38e.png"
	name := "assets/gemoji/images/emoji/unicode/1f38e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f38fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f38fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f38f.png"
	name := "assets/gemoji/images/emoji/unicode/1f38f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f390Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f390Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f390.png"
	name := "assets/gemoji/images/emoji/unicode/1f390.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f391Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f391Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f391.png"
	name := "assets/gemoji/images/emoji/unicode/1f391.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f392Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f392Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f392.png"
	name := "assets/gemoji/images/emoji/unicode/1f392.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f393Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f393Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f393.png"
	name := "assets/gemoji/images/emoji/unicode/1f393.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a0.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a1.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a2.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a3.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a4.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a5.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a6.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a7.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a8.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3a9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3a9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3a9.png"
	name := "assets/gemoji/images/emoji/unicode/1f3a9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3aaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3aaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3aa.png"
	name := "assets/gemoji/images/emoji/unicode/1f3aa.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3abPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3abPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ab.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ab.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3acPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3acPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ac.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ac.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3adPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3adPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ad.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ad.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3aePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3aePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ae.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ae.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3afPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3afPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3af.png"
	name := "assets/gemoji/images/emoji/unicode/1f3af.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b0.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b1.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b2.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b3.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b4.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b5.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b6.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b7.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b8.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3b9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3b9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3b9.png"
	name := "assets/gemoji/images/emoji/unicode/1f3b9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3baPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3baPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ba.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ba.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3bbPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3bbPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3bb.png"
	name := "assets/gemoji/images/emoji/unicode/1f3bb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3bcPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3bcPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3bc.png"
	name := "assets/gemoji/images/emoji/unicode/1f3bc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3bdPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3bdPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3bd.png"
	name := "assets/gemoji/images/emoji/unicode/1f3bd.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3bePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3bePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3be.png"
	name := "assets/gemoji/images/emoji/unicode/1f3be.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3bfPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3bfPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3bf.png"
	name := "assets/gemoji/images/emoji/unicode/1f3bf.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3c0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3c0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3c0.png"
	name := "assets/gemoji/images/emoji/unicode/1f3c0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3c1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3c1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3c1.png"
	name := "assets/gemoji/images/emoji/unicode/1f3c1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3c2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3c2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3c2.png"
	name := "assets/gemoji/images/emoji/unicode/1f3c2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3c3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3c3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3c3.png"
	name := "assets/gemoji/images/emoji/unicode/1f3c3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3c4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3c4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3c4.png"
	name := "assets/gemoji/images/emoji/unicode/1f3c4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3c6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3c6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3c6.png"
	name := "assets/gemoji/images/emoji/unicode/1f3c6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3c7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3c7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3c7.png"
	name := "assets/gemoji/images/emoji/unicode/1f3c7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3c8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3c8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3c8.png"
	name := "assets/gemoji/images/emoji/unicode/1f3c8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3c9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3c9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3c9.png"
	name := "assets/gemoji/images/emoji/unicode/1f3c9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3caPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3caPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ca.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ca.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e0.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e1.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e2.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e3.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e4.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e5.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e6.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e7.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e8.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3e9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3e9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3e9.png"
	name := "assets/gemoji/images/emoji/unicode/1f3e9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3eaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3eaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ea.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ea.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3ebPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3ebPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3eb.png"
	name := "assets/gemoji/images/emoji/unicode/1f3eb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3ecPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3ecPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ec.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ec.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3edPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3edPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ed.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ed.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3eePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3eePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ee.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ee.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3efPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3efPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3ef.png"
	name := "assets/gemoji/images/emoji/unicode/1f3ef.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f3f0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f3f0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f3f0.png"
	name := "assets/gemoji/images/emoji/unicode/1f3f0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f400Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f400Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f400.png"
	name := "assets/gemoji/images/emoji/unicode/1f400.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f401Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f401Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f401.png"
	name := "assets/gemoji/images/emoji/unicode/1f401.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f402Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f402Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f402.png"
	name := "assets/gemoji/images/emoji/unicode/1f402.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f403Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f403Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f403.png"
	name := "assets/gemoji/images/emoji/unicode/1f403.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f404Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f404Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f404.png"
	name := "assets/gemoji/images/emoji/unicode/1f404.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f405Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f405Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f405.png"
	name := "assets/gemoji/images/emoji/unicode/1f405.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f406Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f406Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f406.png"
	name := "assets/gemoji/images/emoji/unicode/1f406.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f407Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f407Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f407.png"
	name := "assets/gemoji/images/emoji/unicode/1f407.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f408Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f408Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f408.png"
	name := "assets/gemoji/images/emoji/unicode/1f408.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f409Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f409Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f409.png"
	name := "assets/gemoji/images/emoji/unicode/1f409.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f40aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f40aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f40a.png"
	name := "assets/gemoji/images/emoji/unicode/1f40a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f40bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f40bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f40b.png"
	name := "assets/gemoji/images/emoji/unicode/1f40b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f40cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f40cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f40c.png"
	name := "assets/gemoji/images/emoji/unicode/1f40c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f40dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f40dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f40d.png"
	name := "assets/gemoji/images/emoji/unicode/1f40d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f40ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f40ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f40e.png"
	name := "assets/gemoji/images/emoji/unicode/1f40e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f40fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f40fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f40f.png"
	name := "assets/gemoji/images/emoji/unicode/1f40f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f410Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f410Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f410.png"
	name := "assets/gemoji/images/emoji/unicode/1f410.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f411Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f411Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f411.png"
	name := "assets/gemoji/images/emoji/unicode/1f411.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f412Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f412Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f412.png"
	name := "assets/gemoji/images/emoji/unicode/1f412.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f413Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f413Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f413.png"
	name := "assets/gemoji/images/emoji/unicode/1f413.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f414Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f414Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f414.png"
	name := "assets/gemoji/images/emoji/unicode/1f414.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f415Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f415Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f415.png"
	name := "assets/gemoji/images/emoji/unicode/1f415.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f416Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f416Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f416.png"
	name := "assets/gemoji/images/emoji/unicode/1f416.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f417Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f417Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f417.png"
	name := "assets/gemoji/images/emoji/unicode/1f417.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f418Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f418Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f418.png"
	name := "assets/gemoji/images/emoji/unicode/1f418.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f419Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f419Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f419.png"
	name := "assets/gemoji/images/emoji/unicode/1f419.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f41aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f41aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f41a.png"
	name := "assets/gemoji/images/emoji/unicode/1f41a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f41bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f41bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f41b.png"
	name := "assets/gemoji/images/emoji/unicode/1f41b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f41cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f41cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f41c.png"
	name := "assets/gemoji/images/emoji/unicode/1f41c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f41dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f41dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f41d.png"
	name := "assets/gemoji/images/emoji/unicode/1f41d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f41ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f41ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f41e.png"
	name := "assets/gemoji/images/emoji/unicode/1f41e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f41fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f41fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f41f.png"
	name := "assets/gemoji/images/emoji/unicode/1f41f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f420Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f420Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f420.png"
	name := "assets/gemoji/images/emoji/unicode/1f420.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f421Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f421Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f421.png"
	name := "assets/gemoji/images/emoji/unicode/1f421.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f422Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f422Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f422.png"
	name := "assets/gemoji/images/emoji/unicode/1f422.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f423Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f423Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f423.png"
	name := "assets/gemoji/images/emoji/unicode/1f423.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f424Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f424Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f424.png"
	name := "assets/gemoji/images/emoji/unicode/1f424.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f425Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f425Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f425.png"
	name := "assets/gemoji/images/emoji/unicode/1f425.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f426Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f426Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f426.png"
	name := "assets/gemoji/images/emoji/unicode/1f426.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f427Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f427Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f427.png"
	name := "assets/gemoji/images/emoji/unicode/1f427.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f428Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f428Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f428.png"
	name := "assets/gemoji/images/emoji/unicode/1f428.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f429Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f429Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f429.png"
	name := "assets/gemoji/images/emoji/unicode/1f429.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f42aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f42aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f42a.png"
	name := "assets/gemoji/images/emoji/unicode/1f42a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f42bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f42bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f42b.png"
	name := "assets/gemoji/images/emoji/unicode/1f42b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f42cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f42cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f42c.png"
	name := "assets/gemoji/images/emoji/unicode/1f42c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f42dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f42dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f42d.png"
	name := "assets/gemoji/images/emoji/unicode/1f42d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f42ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f42ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f42e.png"
	name := "assets/gemoji/images/emoji/unicode/1f42e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f42fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f42fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f42f.png"
	name := "assets/gemoji/images/emoji/unicode/1f42f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f430Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f430Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f430.png"
	name := "assets/gemoji/images/emoji/unicode/1f430.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f431Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f431Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f431.png"
	name := "assets/gemoji/images/emoji/unicode/1f431.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f432Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f432Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f432.png"
	name := "assets/gemoji/images/emoji/unicode/1f432.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f433Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f433Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f433.png"
	name := "assets/gemoji/images/emoji/unicode/1f433.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f434Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f434Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f434.png"
	name := "assets/gemoji/images/emoji/unicode/1f434.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f435Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f435Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f435.png"
	name := "assets/gemoji/images/emoji/unicode/1f435.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f436Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f436Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f436.png"
	name := "assets/gemoji/images/emoji/unicode/1f436.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f437Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f437Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f437.png"
	name := "assets/gemoji/images/emoji/unicode/1f437.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f438Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f438Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f438.png"
	name := "assets/gemoji/images/emoji/unicode/1f438.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f439Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f439Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f439.png"
	name := "assets/gemoji/images/emoji/unicode/1f439.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f43aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f43aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f43a.png"
	name := "assets/gemoji/images/emoji/unicode/1f43a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f43bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f43bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f43b.png"
	name := "assets/gemoji/images/emoji/unicode/1f43b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f43cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f43cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f43c.png"
	name := "assets/gemoji/images/emoji/unicode/1f43c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f43dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f43dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f43d.png"
	name := "assets/gemoji/images/emoji/unicode/1f43d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f43ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f43ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f43e.png"
	name := "assets/gemoji/images/emoji/unicode/1f43e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f440Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f440Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f440.png"
	name := "assets/gemoji/images/emoji/unicode/1f440.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f442Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f442Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f442.png"
	name := "assets/gemoji/images/emoji/unicode/1f442.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f443Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f443Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f443.png"
	name := "assets/gemoji/images/emoji/unicode/1f443.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f444Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f444Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f444.png"
	name := "assets/gemoji/images/emoji/unicode/1f444.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f445Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f445Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f445.png"
	name := "assets/gemoji/images/emoji/unicode/1f445.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f446Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f446Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f446.png"
	name := "assets/gemoji/images/emoji/unicode/1f446.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f447Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f447Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f447.png"
	name := "assets/gemoji/images/emoji/unicode/1f447.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f448Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f448Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f448.png"
	name := "assets/gemoji/images/emoji/unicode/1f448.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f449Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f449Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f449.png"
	name := "assets/gemoji/images/emoji/unicode/1f449.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f44aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f44aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f44a.png"
	name := "assets/gemoji/images/emoji/unicode/1f44a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f44bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f44bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f44b.png"
	name := "assets/gemoji/images/emoji/unicode/1f44b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f44cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f44cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f44c.png"
	name := "assets/gemoji/images/emoji/unicode/1f44c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f44dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f44dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f44d.png"
	name := "assets/gemoji/images/emoji/unicode/1f44d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f44ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f44ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f44e.png"
	name := "assets/gemoji/images/emoji/unicode/1f44e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f44fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f44fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f44f.png"
	name := "assets/gemoji/images/emoji/unicode/1f44f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f450Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f450Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f450.png"
	name := "assets/gemoji/images/emoji/unicode/1f450.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f451Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f451Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f451.png"
	name := "assets/gemoji/images/emoji/unicode/1f451.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f452Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f452Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f452.png"
	name := "assets/gemoji/images/emoji/unicode/1f452.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f453Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f453Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f453.png"
	name := "assets/gemoji/images/emoji/unicode/1f453.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f454Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f454Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f454.png"
	name := "assets/gemoji/images/emoji/unicode/1f454.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f455Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f455Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f455.png"
	name := "assets/gemoji/images/emoji/unicode/1f455.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f456Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f456Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f456.png"
	name := "assets/gemoji/images/emoji/unicode/1f456.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f457Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f457Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f457.png"
	name := "assets/gemoji/images/emoji/unicode/1f457.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f458Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f458Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f458.png"
	name := "assets/gemoji/images/emoji/unicode/1f458.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f459Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f459Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f459.png"
	name := "assets/gemoji/images/emoji/unicode/1f459.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f45aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f45aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f45a.png"
	name := "assets/gemoji/images/emoji/unicode/1f45a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f45bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f45bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f45b.png"
	name := "assets/gemoji/images/emoji/unicode/1f45b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f45cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f45cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f45c.png"
	name := "assets/gemoji/images/emoji/unicode/1f45c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f45dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f45dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f45d.png"
	name := "assets/gemoji/images/emoji/unicode/1f45d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f45ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f45ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f45e.png"
	name := "assets/gemoji/images/emoji/unicode/1f45e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f45fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f45fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f45f.png"
	name := "assets/gemoji/images/emoji/unicode/1f45f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f460Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f460Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f460.png"
	name := "assets/gemoji/images/emoji/unicode/1f460.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f461Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f461Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f461.png"
	name := "assets/gemoji/images/emoji/unicode/1f461.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f462Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f462Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f462.png"
	name := "assets/gemoji/images/emoji/unicode/1f462.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f463Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f463Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f463.png"
	name := "assets/gemoji/images/emoji/unicode/1f463.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f464Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f464Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f464.png"
	name := "assets/gemoji/images/emoji/unicode/1f464.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f465Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f465Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f465.png"
	name := "assets/gemoji/images/emoji/unicode/1f465.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f466Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f466Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f466.png"
	name := "assets/gemoji/images/emoji/unicode/1f466.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f467Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f467Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f467.png"
	name := "assets/gemoji/images/emoji/unicode/1f467.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f468Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f468Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f468.png"
	name := "assets/gemoji/images/emoji/unicode/1f468.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f469Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f469Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f469.png"
	name := "assets/gemoji/images/emoji/unicode/1f469.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f46aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f46aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f46a.png"
	name := "assets/gemoji/images/emoji/unicode/1f46a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f46bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f46bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f46b.png"
	name := "assets/gemoji/images/emoji/unicode/1f46b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f46cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f46cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f46c.png"
	name := "assets/gemoji/images/emoji/unicode/1f46c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f46dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f46dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f46d.png"
	name := "assets/gemoji/images/emoji/unicode/1f46d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f46ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f46ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f46e.png"
	name := "assets/gemoji/images/emoji/unicode/1f46e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f46fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f46fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f46f.png"
	name := "assets/gemoji/images/emoji/unicode/1f46f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f470Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f470Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f470.png"
	name := "assets/gemoji/images/emoji/unicode/1f470.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f471Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f471Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f471.png"
	name := "assets/gemoji/images/emoji/unicode/1f471.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f472Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f472Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f472.png"
	name := "assets/gemoji/images/emoji/unicode/1f472.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f473Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f473Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f473.png"
	name := "assets/gemoji/images/emoji/unicode/1f473.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f474Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f474Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f474.png"
	name := "assets/gemoji/images/emoji/unicode/1f474.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f475Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f475Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f475.png"
	name := "assets/gemoji/images/emoji/unicode/1f475.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f476Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f476Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f476.png"
	name := "assets/gemoji/images/emoji/unicode/1f476.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f477Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f477Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f477.png"
	name := "assets/gemoji/images/emoji/unicode/1f477.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f478Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f478Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f478.png"
	name := "assets/gemoji/images/emoji/unicode/1f478.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f479Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f479Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f479.png"
	name := "assets/gemoji/images/emoji/unicode/1f479.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f47aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f47aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f47a.png"
	name := "assets/gemoji/images/emoji/unicode/1f47a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f47bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f47bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f47b.png"
	name := "assets/gemoji/images/emoji/unicode/1f47b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f47cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f47cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f47c.png"
	name := "assets/gemoji/images/emoji/unicode/1f47c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f47dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f47dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f47d.png"
	name := "assets/gemoji/images/emoji/unicode/1f47d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f47ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f47ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f47e.png"
	name := "assets/gemoji/images/emoji/unicode/1f47e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f47fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f47fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f47f.png"
	name := "assets/gemoji/images/emoji/unicode/1f47f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f480Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f480Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f480.png"
	name := "assets/gemoji/images/emoji/unicode/1f480.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f481Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f481Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f481.png"
	name := "assets/gemoji/images/emoji/unicode/1f481.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f482Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f482Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f482.png"
	name := "assets/gemoji/images/emoji/unicode/1f482.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f483Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f483Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f483.png"
	name := "assets/gemoji/images/emoji/unicode/1f483.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f484Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f484Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f484.png"
	name := "assets/gemoji/images/emoji/unicode/1f484.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f485Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f485Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f485.png"
	name := "assets/gemoji/images/emoji/unicode/1f485.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f486Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f486Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f486.png"
	name := "assets/gemoji/images/emoji/unicode/1f486.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f487Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f487Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f487.png"
	name := "assets/gemoji/images/emoji/unicode/1f487.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f488Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f488Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f488.png"
	name := "assets/gemoji/images/emoji/unicode/1f488.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f489Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f489Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f489.png"
	name := "assets/gemoji/images/emoji/unicode/1f489.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f48aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f48aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f48a.png"
	name := "assets/gemoji/images/emoji/unicode/1f48a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f48bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f48bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f48b.png"
	name := "assets/gemoji/images/emoji/unicode/1f48b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f48cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f48cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f48c.png"
	name := "assets/gemoji/images/emoji/unicode/1f48c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f48dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f48dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f48d.png"
	name := "assets/gemoji/images/emoji/unicode/1f48d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f48ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f48ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f48e.png"
	name := "assets/gemoji/images/emoji/unicode/1f48e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f48fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f48fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f48f.png"
	name := "assets/gemoji/images/emoji/unicode/1f48f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f490Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f490Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f490.png"
	name := "assets/gemoji/images/emoji/unicode/1f490.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f491Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f491Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f491.png"
	name := "assets/gemoji/images/emoji/unicode/1f491.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f492Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f492Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f492.png"
	name := "assets/gemoji/images/emoji/unicode/1f492.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f493Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f493Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f493.png"
	name := "assets/gemoji/images/emoji/unicode/1f493.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f494Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f494Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f494.png"
	name := "assets/gemoji/images/emoji/unicode/1f494.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f495Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f495Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f495.png"
	name := "assets/gemoji/images/emoji/unicode/1f495.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f496Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f496Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f496.png"
	name := "assets/gemoji/images/emoji/unicode/1f496.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f497Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f497Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f497.png"
	name := "assets/gemoji/images/emoji/unicode/1f497.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f498Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f498Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f498.png"
	name := "assets/gemoji/images/emoji/unicode/1f498.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f499Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f499Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f499.png"
	name := "assets/gemoji/images/emoji/unicode/1f499.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f49aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f49aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f49a.png"
	name := "assets/gemoji/images/emoji/unicode/1f49a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f49bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f49bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f49b.png"
	name := "assets/gemoji/images/emoji/unicode/1f49b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f49cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f49cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f49c.png"
	name := "assets/gemoji/images/emoji/unicode/1f49c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f49dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f49dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f49d.png"
	name := "assets/gemoji/images/emoji/unicode/1f49d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f49ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f49ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f49e.png"
	name := "assets/gemoji/images/emoji/unicode/1f49e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f49fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f49fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f49f.png"
	name := "assets/gemoji/images/emoji/unicode/1f49f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a0.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a1.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a2.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a3.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a4.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a5.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a6.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a7.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a8.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4a9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4a9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4a9.png"
	name := "assets/gemoji/images/emoji/unicode/1f4a9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4aaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4aaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4aa.png"
	name := "assets/gemoji/images/emoji/unicode/1f4aa.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4abPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4abPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ab.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ab.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4acPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4acPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ac.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ac.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4adPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4adPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ad.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ad.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4aePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4aePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ae.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ae.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4afPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4afPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4af.png"
	name := "assets/gemoji/images/emoji/unicode/1f4af.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b0.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b1.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b2.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b3.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b4.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b5.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b6.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b7.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b8.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4b9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4b9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4b9.png"
	name := "assets/gemoji/images/emoji/unicode/1f4b9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4baPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4baPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ba.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ba.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4bbPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4bbPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4bb.png"
	name := "assets/gemoji/images/emoji/unicode/1f4bb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4bcPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4bcPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4bc.png"
	name := "assets/gemoji/images/emoji/unicode/1f4bc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4bdPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4bdPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4bd.png"
	name := "assets/gemoji/images/emoji/unicode/1f4bd.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4bePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4bePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4be.png"
	name := "assets/gemoji/images/emoji/unicode/1f4be.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4bfPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4bfPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4bf.png"
	name := "assets/gemoji/images/emoji/unicode/1f4bf.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c0.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c1.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c2.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c3.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c4.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c5.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c6.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c7.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c8.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4c9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4c9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4c9.png"
	name := "assets/gemoji/images/emoji/unicode/1f4c9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4caPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4caPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ca.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ca.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4cbPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4cbPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4cb.png"
	name := "assets/gemoji/images/emoji/unicode/1f4cb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4ccPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4ccPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4cc.png"
	name := "assets/gemoji/images/emoji/unicode/1f4cc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4cdPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4cdPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4cd.png"
	name := "assets/gemoji/images/emoji/unicode/1f4cd.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4cePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4cePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ce.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ce.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4cfPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4cfPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4cf.png"
	name := "assets/gemoji/images/emoji/unicode/1f4cf.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d0.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d1.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d2.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d3.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d4.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d5.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d6.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d7.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d8.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4d9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4d9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4d9.png"
	name := "assets/gemoji/images/emoji/unicode/1f4d9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4daPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4daPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4da.png"
	name := "assets/gemoji/images/emoji/unicode/1f4da.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4dbPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4dbPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4db.png"
	name := "assets/gemoji/images/emoji/unicode/1f4db.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4dcPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4dcPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4dc.png"
	name := "assets/gemoji/images/emoji/unicode/1f4dc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4ddPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4ddPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4dd.png"
	name := "assets/gemoji/images/emoji/unicode/1f4dd.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4dePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4dePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4de.png"
	name := "assets/gemoji/images/emoji/unicode/1f4de.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4dfPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4dfPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4df.png"
	name := "assets/gemoji/images/emoji/unicode/1f4df.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e0.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e1.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e2.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e3.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e4.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e5.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e6.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e7.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e8.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4e9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4e9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4e9.png"
	name := "assets/gemoji/images/emoji/unicode/1f4e9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4eaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4eaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ea.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ea.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4ebPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4ebPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4eb.png"
	name := "assets/gemoji/images/emoji/unicode/1f4eb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4ecPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4ecPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ec.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ec.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4edPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4edPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ed.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ed.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4eePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4eePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ee.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ee.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4efPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4efPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4ef.png"
	name := "assets/gemoji/images/emoji/unicode/1f4ef.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4f0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4f0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4f0.png"
	name := "assets/gemoji/images/emoji/unicode/1f4f0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4f1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4f1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4f1.png"
	name := "assets/gemoji/images/emoji/unicode/1f4f1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4f2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4f2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4f2.png"
	name := "assets/gemoji/images/emoji/unicode/1f4f2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4f3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4f3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4f3.png"
	name := "assets/gemoji/images/emoji/unicode/1f4f3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4f4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4f4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4f4.png"
	name := "assets/gemoji/images/emoji/unicode/1f4f4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4f5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4f5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4f5.png"
	name := "assets/gemoji/images/emoji/unicode/1f4f5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4f6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4f6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4f6.png"
	name := "assets/gemoji/images/emoji/unicode/1f4f6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4f7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4f7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4f7.png"
	name := "assets/gemoji/images/emoji/unicode/1f4f7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4f9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4f9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4f9.png"
	name := "assets/gemoji/images/emoji/unicode/1f4f9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4faPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4faPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4fa.png"
	name := "assets/gemoji/images/emoji/unicode/1f4fa.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4fbPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4fbPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4fb.png"
	name := "assets/gemoji/images/emoji/unicode/1f4fb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f4fcPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f4fcPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f4fc.png"
	name := "assets/gemoji/images/emoji/unicode/1f4fc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f500Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f500Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f500.png"
	name := "assets/gemoji/images/emoji/unicode/1f500.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f501Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f501Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f501.png"
	name := "assets/gemoji/images/emoji/unicode/1f501.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f502Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f502Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f502.png"
	name := "assets/gemoji/images/emoji/unicode/1f502.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f503Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f503Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f503.png"
	name := "assets/gemoji/images/emoji/unicode/1f503.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f504Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f504Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f504.png"
	name := "assets/gemoji/images/emoji/unicode/1f504.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f505Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f505Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f505.png"
	name := "assets/gemoji/images/emoji/unicode/1f505.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f506Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f506Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f506.png"
	name := "assets/gemoji/images/emoji/unicode/1f506.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f507Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f507Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f507.png"
	name := "assets/gemoji/images/emoji/unicode/1f507.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f508Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f508Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f508.png"
	name := "assets/gemoji/images/emoji/unicode/1f508.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f509Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f509Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f509.png"
	name := "assets/gemoji/images/emoji/unicode/1f509.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f50aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f50aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f50a.png"
	name := "assets/gemoji/images/emoji/unicode/1f50a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f50bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f50bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f50b.png"
	name := "assets/gemoji/images/emoji/unicode/1f50b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f50cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f50cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f50c.png"
	name := "assets/gemoji/images/emoji/unicode/1f50c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f50dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f50dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f50d.png"
	name := "assets/gemoji/images/emoji/unicode/1f50d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f50ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f50ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f50e.png"
	name := "assets/gemoji/images/emoji/unicode/1f50e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f50fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f50fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f50f.png"
	name := "assets/gemoji/images/emoji/unicode/1f50f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f510Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f510Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f510.png"
	name := "assets/gemoji/images/emoji/unicode/1f510.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f511Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f511Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f511.png"
	name := "assets/gemoji/images/emoji/unicode/1f511.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f512Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f512Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f512.png"
	name := "assets/gemoji/images/emoji/unicode/1f512.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f513Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f513Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f513.png"
	name := "assets/gemoji/images/emoji/unicode/1f513.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f514Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f514Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f514.png"
	name := "assets/gemoji/images/emoji/unicode/1f514.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f515Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f515Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f515.png"
	name := "assets/gemoji/images/emoji/unicode/1f515.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f516Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f516Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f516.png"
	name := "assets/gemoji/images/emoji/unicode/1f516.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f517Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f517Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f517.png"
	name := "assets/gemoji/images/emoji/unicode/1f517.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f518Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f518Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f518.png"
	name := "assets/gemoji/images/emoji/unicode/1f518.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f519Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f519Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f519.png"
	name := "assets/gemoji/images/emoji/unicode/1f519.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f51aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f51aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f51a.png"
	name := "assets/gemoji/images/emoji/unicode/1f51a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f51bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f51bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f51b.png"
	name := "assets/gemoji/images/emoji/unicode/1f51b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f51cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f51cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f51c.png"
	name := "assets/gemoji/images/emoji/unicode/1f51c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f51dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f51dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f51d.png"
	name := "assets/gemoji/images/emoji/unicode/1f51d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f51ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f51ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f51e.png"
	name := "assets/gemoji/images/emoji/unicode/1f51e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f51fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f51fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f51f.png"
	name := "assets/gemoji/images/emoji/unicode/1f51f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f520Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f520Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f520.png"
	name := "assets/gemoji/images/emoji/unicode/1f520.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f521Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f521Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f521.png"
	name := "assets/gemoji/images/emoji/unicode/1f521.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f522Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f522Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f522.png"
	name := "assets/gemoji/images/emoji/unicode/1f522.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f523Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f523Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f523.png"
	name := "assets/gemoji/images/emoji/unicode/1f523.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f524Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f524Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f524.png"
	name := "assets/gemoji/images/emoji/unicode/1f524.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f525Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f525Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f525.png"
	name := "assets/gemoji/images/emoji/unicode/1f525.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f526Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f526Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f526.png"
	name := "assets/gemoji/images/emoji/unicode/1f526.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f527Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f527Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f527.png"
	name := "assets/gemoji/images/emoji/unicode/1f527.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f528Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f528Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f528.png"
	name := "assets/gemoji/images/emoji/unicode/1f528.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f529Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f529Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f529.png"
	name := "assets/gemoji/images/emoji/unicode/1f529.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f52aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f52aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f52a.png"
	name := "assets/gemoji/images/emoji/unicode/1f52a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f52bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f52bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f52b.png"
	name := "assets/gemoji/images/emoji/unicode/1f52b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f52cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f52cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f52c.png"
	name := "assets/gemoji/images/emoji/unicode/1f52c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f52dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f52dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f52d.png"
	name := "assets/gemoji/images/emoji/unicode/1f52d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f52ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f52ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f52e.png"
	name := "assets/gemoji/images/emoji/unicode/1f52e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f52fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f52fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f52f.png"
	name := "assets/gemoji/images/emoji/unicode/1f52f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f530Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f530Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f530.png"
	name := "assets/gemoji/images/emoji/unicode/1f530.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f531Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f531Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f531.png"
	name := "assets/gemoji/images/emoji/unicode/1f531.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f532Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f532Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f532.png"
	name := "assets/gemoji/images/emoji/unicode/1f532.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f533Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f533Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f533.png"
	name := "assets/gemoji/images/emoji/unicode/1f533.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f534Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f534Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f534.png"
	name := "assets/gemoji/images/emoji/unicode/1f534.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f535Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f535Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f535.png"
	name := "assets/gemoji/images/emoji/unicode/1f535.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f536Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f536Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f536.png"
	name := "assets/gemoji/images/emoji/unicode/1f536.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f537Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f537Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f537.png"
	name := "assets/gemoji/images/emoji/unicode/1f537.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f538Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f538Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f538.png"
	name := "assets/gemoji/images/emoji/unicode/1f538.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f539Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f539Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f539.png"
	name := "assets/gemoji/images/emoji/unicode/1f539.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f53aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f53aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f53a.png"
	name := "assets/gemoji/images/emoji/unicode/1f53a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f53bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f53bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f53b.png"
	name := "assets/gemoji/images/emoji/unicode/1f53b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f53cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f53cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f53c.png"
	name := "assets/gemoji/images/emoji/unicode/1f53c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f53dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f53dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f53d.png"
	name := "assets/gemoji/images/emoji/unicode/1f53d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f550Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f550Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f550.png"
	name := "assets/gemoji/images/emoji/unicode/1f550.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f551Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f551Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f551.png"
	name := "assets/gemoji/images/emoji/unicode/1f551.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f552Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f552Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f552.png"
	name := "assets/gemoji/images/emoji/unicode/1f552.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f553Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f553Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f553.png"
	name := "assets/gemoji/images/emoji/unicode/1f553.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f554Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f554Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f554.png"
	name := "assets/gemoji/images/emoji/unicode/1f554.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f555Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f555Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f555.png"
	name := "assets/gemoji/images/emoji/unicode/1f555.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f556Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f556Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f556.png"
	name := "assets/gemoji/images/emoji/unicode/1f556.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f557Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f557Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f557.png"
	name := "assets/gemoji/images/emoji/unicode/1f557.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f558Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f558Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f558.png"
	name := "assets/gemoji/images/emoji/unicode/1f558.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f559Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f559Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f559.png"
	name := "assets/gemoji/images/emoji/unicode/1f559.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f55aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f55aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f55a.png"
	name := "assets/gemoji/images/emoji/unicode/1f55a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f55bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f55bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f55b.png"
	name := "assets/gemoji/images/emoji/unicode/1f55b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f55cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f55cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f55c.png"
	name := "assets/gemoji/images/emoji/unicode/1f55c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f55dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f55dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f55d.png"
	name := "assets/gemoji/images/emoji/unicode/1f55d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f55ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f55ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f55e.png"
	name := "assets/gemoji/images/emoji/unicode/1f55e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f55fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f55fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f55f.png"
	name := "assets/gemoji/images/emoji/unicode/1f55f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f560Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f560Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f560.png"
	name := "assets/gemoji/images/emoji/unicode/1f560.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f561Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f561Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f561.png"
	name := "assets/gemoji/images/emoji/unicode/1f561.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f562Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f562Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f562.png"
	name := "assets/gemoji/images/emoji/unicode/1f562.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f563Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f563Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f563.png"
	name := "assets/gemoji/images/emoji/unicode/1f563.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f564Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f564Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f564.png"
	name := "assets/gemoji/images/emoji/unicode/1f564.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f565Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f565Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f565.png"
	name := "assets/gemoji/images/emoji/unicode/1f565.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f566Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f566Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f566.png"
	name := "assets/gemoji/images/emoji/unicode/1f566.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f567Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f567Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f567.png"
	name := "assets/gemoji/images/emoji/unicode/1f567.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f5fbPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f5fbPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f5fb.png"
	name := "assets/gemoji/images/emoji/unicode/1f5fb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f5fcPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f5fcPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f5fc.png"
	name := "assets/gemoji/images/emoji/unicode/1f5fc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f5fdPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f5fdPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f5fd.png"
	name := "assets/gemoji/images/emoji/unicode/1f5fd.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f5fePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f5fePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f5fe.png"
	name := "assets/gemoji/images/emoji/unicode/1f5fe.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f5ffPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f5ffPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f5ff.png"
	name := "assets/gemoji/images/emoji/unicode/1f5ff.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f600Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f600Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f600.png"
	name := "assets/gemoji/images/emoji/unicode/1f600.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f601Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f601Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f601.png"
	name := "assets/gemoji/images/emoji/unicode/1f601.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f602Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f602Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f602.png"
	name := "assets/gemoji/images/emoji/unicode/1f602.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f603Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f603Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f603.png"
	name := "assets/gemoji/images/emoji/unicode/1f603.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f604Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f604Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f604.png"
	name := "assets/gemoji/images/emoji/unicode/1f604.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f605Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f605Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f605.png"
	name := "assets/gemoji/images/emoji/unicode/1f605.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f606Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f606Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f606.png"
	name := "assets/gemoji/images/emoji/unicode/1f606.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f607Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f607Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f607.png"
	name := "assets/gemoji/images/emoji/unicode/1f607.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f608Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f608Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f608.png"
	name := "assets/gemoji/images/emoji/unicode/1f608.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f609Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f609Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f609.png"
	name := "assets/gemoji/images/emoji/unicode/1f609.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f60aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f60aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f60a.png"
	name := "assets/gemoji/images/emoji/unicode/1f60a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f60bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f60bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f60b.png"
	name := "assets/gemoji/images/emoji/unicode/1f60b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f60cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f60cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f60c.png"
	name := "assets/gemoji/images/emoji/unicode/1f60c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f60dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f60dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f60d.png"
	name := "assets/gemoji/images/emoji/unicode/1f60d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f60ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f60ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f60e.png"
	name := "assets/gemoji/images/emoji/unicode/1f60e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f60fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f60fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f60f.png"
	name := "assets/gemoji/images/emoji/unicode/1f60f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f610Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f610Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f610.png"
	name := "assets/gemoji/images/emoji/unicode/1f610.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f611Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f611Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f611.png"
	name := "assets/gemoji/images/emoji/unicode/1f611.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f612Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f612Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f612.png"
	name := "assets/gemoji/images/emoji/unicode/1f612.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f613Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f613Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f613.png"
	name := "assets/gemoji/images/emoji/unicode/1f613.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f614Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f614Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f614.png"
	name := "assets/gemoji/images/emoji/unicode/1f614.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f615Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f615Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f615.png"
	name := "assets/gemoji/images/emoji/unicode/1f615.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f616Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f616Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f616.png"
	name := "assets/gemoji/images/emoji/unicode/1f616.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f617Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f617Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f617.png"
	name := "assets/gemoji/images/emoji/unicode/1f617.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f618Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f618Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f618.png"
	name := "assets/gemoji/images/emoji/unicode/1f618.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f619Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f619Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f619.png"
	name := "assets/gemoji/images/emoji/unicode/1f619.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f61aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f61aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f61a.png"
	name := "assets/gemoji/images/emoji/unicode/1f61a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f61bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f61bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f61b.png"
	name := "assets/gemoji/images/emoji/unicode/1f61b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f61cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f61cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f61c.png"
	name := "assets/gemoji/images/emoji/unicode/1f61c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f61dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f61dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f61d.png"
	name := "assets/gemoji/images/emoji/unicode/1f61d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f61ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f61ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f61e.png"
	name := "assets/gemoji/images/emoji/unicode/1f61e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f61fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f61fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f61f.png"
	name := "assets/gemoji/images/emoji/unicode/1f61f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f620Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f620Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f620.png"
	name := "assets/gemoji/images/emoji/unicode/1f620.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f621Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f621Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f621.png"
	name := "assets/gemoji/images/emoji/unicode/1f621.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f622Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f622Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f622.png"
	name := "assets/gemoji/images/emoji/unicode/1f622.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f623Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f623Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f623.png"
	name := "assets/gemoji/images/emoji/unicode/1f623.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f624Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f624Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f624.png"
	name := "assets/gemoji/images/emoji/unicode/1f624.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f625Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f625Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f625.png"
	name := "assets/gemoji/images/emoji/unicode/1f625.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f626Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f626Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f626.png"
	name := "assets/gemoji/images/emoji/unicode/1f626.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f627Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f627Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f627.png"
	name := "assets/gemoji/images/emoji/unicode/1f627.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f628Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f628Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f628.png"
	name := "assets/gemoji/images/emoji/unicode/1f628.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f629Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f629Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f629.png"
	name := "assets/gemoji/images/emoji/unicode/1f629.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f62aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f62aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f62a.png"
	name := "assets/gemoji/images/emoji/unicode/1f62a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f62bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f62bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f62b.png"
	name := "assets/gemoji/images/emoji/unicode/1f62b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f62cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f62cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f62c.png"
	name := "assets/gemoji/images/emoji/unicode/1f62c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f62dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f62dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f62d.png"
	name := "assets/gemoji/images/emoji/unicode/1f62d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f62ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f62ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f62e.png"
	name := "assets/gemoji/images/emoji/unicode/1f62e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f62fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f62fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f62f.png"
	name := "assets/gemoji/images/emoji/unicode/1f62f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f630Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f630Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f630.png"
	name := "assets/gemoji/images/emoji/unicode/1f630.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f631Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f631Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f631.png"
	name := "assets/gemoji/images/emoji/unicode/1f631.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f632Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f632Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f632.png"
	name := "assets/gemoji/images/emoji/unicode/1f632.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f633Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f633Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f633.png"
	name := "assets/gemoji/images/emoji/unicode/1f633.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f634Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f634Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f634.png"
	name := "assets/gemoji/images/emoji/unicode/1f634.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f635Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f635Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f635.png"
	name := "assets/gemoji/images/emoji/unicode/1f635.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f636Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f636Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f636.png"
	name := "assets/gemoji/images/emoji/unicode/1f636.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f637Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f637Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f637.png"
	name := "assets/gemoji/images/emoji/unicode/1f637.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f638Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f638Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f638.png"
	name := "assets/gemoji/images/emoji/unicode/1f638.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f639Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f639Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f639.png"
	name := "assets/gemoji/images/emoji/unicode/1f639.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f63aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f63aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f63a.png"
	name := "assets/gemoji/images/emoji/unicode/1f63a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f63bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f63bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f63b.png"
	name := "assets/gemoji/images/emoji/unicode/1f63b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f63cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f63cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f63c.png"
	name := "assets/gemoji/images/emoji/unicode/1f63c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f63dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f63dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f63d.png"
	name := "assets/gemoji/images/emoji/unicode/1f63d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f63ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f63ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f63e.png"
	name := "assets/gemoji/images/emoji/unicode/1f63e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f63fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f63fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f63f.png"
	name := "assets/gemoji/images/emoji/unicode/1f63f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f640Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f640Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f640.png"
	name := "assets/gemoji/images/emoji/unicode/1f640.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f645Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f645Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f645.png"
	name := "assets/gemoji/images/emoji/unicode/1f645.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f646Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f646Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f646.png"
	name := "assets/gemoji/images/emoji/unicode/1f646.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f647Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f647Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f647.png"
	name := "assets/gemoji/images/emoji/unicode/1f647.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f648Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f648Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f648.png"
	name := "assets/gemoji/images/emoji/unicode/1f648.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f649Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f649Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f649.png"
	name := "assets/gemoji/images/emoji/unicode/1f649.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f64aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f64aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f64a.png"
	name := "assets/gemoji/images/emoji/unicode/1f64a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f64bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f64bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f64b.png"
	name := "assets/gemoji/images/emoji/unicode/1f64b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f64cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f64cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f64c.png"
	name := "assets/gemoji/images/emoji/unicode/1f64c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f64dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f64dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f64d.png"
	name := "assets/gemoji/images/emoji/unicode/1f64d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f64ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f64ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f64e.png"
	name := "assets/gemoji/images/emoji/unicode/1f64e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f64fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f64fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f64f.png"
	name := "assets/gemoji/images/emoji/unicode/1f64f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f680Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f680Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f680.png"
	name := "assets/gemoji/images/emoji/unicode/1f680.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f681Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f681Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f681.png"
	name := "assets/gemoji/images/emoji/unicode/1f681.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f682Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f682Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f682.png"
	name := "assets/gemoji/images/emoji/unicode/1f682.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f683Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f683Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f683.png"
	name := "assets/gemoji/images/emoji/unicode/1f683.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f684Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f684Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f684.png"
	name := "assets/gemoji/images/emoji/unicode/1f684.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f685Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f685Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f685.png"
	name := "assets/gemoji/images/emoji/unicode/1f685.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f686Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f686Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f686.png"
	name := "assets/gemoji/images/emoji/unicode/1f686.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f687Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f687Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f687.png"
	name := "assets/gemoji/images/emoji/unicode/1f687.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f688Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f688Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f688.png"
	name := "assets/gemoji/images/emoji/unicode/1f688.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f689Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f689Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f689.png"
	name := "assets/gemoji/images/emoji/unicode/1f689.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f68aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f68aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f68a.png"
	name := "assets/gemoji/images/emoji/unicode/1f68a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f68bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f68bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f68b.png"
	name := "assets/gemoji/images/emoji/unicode/1f68b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f68cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f68cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f68c.png"
	name := "assets/gemoji/images/emoji/unicode/1f68c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f68dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f68dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f68d.png"
	name := "assets/gemoji/images/emoji/unicode/1f68d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f68ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f68ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f68e.png"
	name := "assets/gemoji/images/emoji/unicode/1f68e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f68fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f68fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f68f.png"
	name := "assets/gemoji/images/emoji/unicode/1f68f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f690Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f690Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f690.png"
	name := "assets/gemoji/images/emoji/unicode/1f690.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f691Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f691Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f691.png"
	name := "assets/gemoji/images/emoji/unicode/1f691.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f692Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f692Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f692.png"
	name := "assets/gemoji/images/emoji/unicode/1f692.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f693Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f693Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f693.png"
	name := "assets/gemoji/images/emoji/unicode/1f693.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f694Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f694Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f694.png"
	name := "assets/gemoji/images/emoji/unicode/1f694.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f695Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f695Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f695.png"
	name := "assets/gemoji/images/emoji/unicode/1f695.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f696Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f696Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f696.png"
	name := "assets/gemoji/images/emoji/unicode/1f696.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f697Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f697Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f697.png"
	name := "assets/gemoji/images/emoji/unicode/1f697.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f698Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f698Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f698.png"
	name := "assets/gemoji/images/emoji/unicode/1f698.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f699Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f699Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f699.png"
	name := "assets/gemoji/images/emoji/unicode/1f699.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f69aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f69aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f69a.png"
	name := "assets/gemoji/images/emoji/unicode/1f69a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f69bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f69bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f69b.png"
	name := "assets/gemoji/images/emoji/unicode/1f69b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f69cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f69cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f69c.png"
	name := "assets/gemoji/images/emoji/unicode/1f69c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f69dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f69dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f69d.png"
	name := "assets/gemoji/images/emoji/unicode/1f69d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f69ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f69ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f69e.png"
	name := "assets/gemoji/images/emoji/unicode/1f69e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f69fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f69fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f69f.png"
	name := "assets/gemoji/images/emoji/unicode/1f69f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a0.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a1.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a2.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a3.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a4.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a5.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a6.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a7.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a8.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6a9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6a9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6a9.png"
	name := "assets/gemoji/images/emoji/unicode/1f6a9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6aaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6aaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6aa.png"
	name := "assets/gemoji/images/emoji/unicode/1f6aa.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6abPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6abPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6ab.png"
	name := "assets/gemoji/images/emoji/unicode/1f6ab.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6acPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6acPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6ac.png"
	name := "assets/gemoji/images/emoji/unicode/1f6ac.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6adPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6adPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6ad.png"
	name := "assets/gemoji/images/emoji/unicode/1f6ad.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6aePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6aePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6ae.png"
	name := "assets/gemoji/images/emoji/unicode/1f6ae.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6afPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6afPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6af.png"
	name := "assets/gemoji/images/emoji/unicode/1f6af.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b0.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b1.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b2.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b3.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b4.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b5.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b6.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b7Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b7Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b7.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b7.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b8Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b8Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b8.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b8.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6b9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6b9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6b9.png"
	name := "assets/gemoji/images/emoji/unicode/1f6b9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6baPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6baPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6ba.png"
	name := "assets/gemoji/images/emoji/unicode/1f6ba.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6bbPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6bbPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6bb.png"
	name := "assets/gemoji/images/emoji/unicode/1f6bb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6bcPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6bcPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6bc.png"
	name := "assets/gemoji/images/emoji/unicode/1f6bc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6bdPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6bdPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6bd.png"
	name := "assets/gemoji/images/emoji/unicode/1f6bd.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6bePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6bePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6be.png"
	name := "assets/gemoji/images/emoji/unicode/1f6be.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6bfPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6bfPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6bf.png"
	name := "assets/gemoji/images/emoji/unicode/1f6bf.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6c0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6c0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6c0.png"
	name := "assets/gemoji/images/emoji/unicode/1f6c0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6c1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6c1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6c1.png"
	name := "assets/gemoji/images/emoji/unicode/1f6c1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6c2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6c2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6c2.png"
	name := "assets/gemoji/images/emoji/unicode/1f6c2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6c3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6c3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6c3.png"
	name := "assets/gemoji/images/emoji/unicode/1f6c3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6c4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6c4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6c4.png"
	name := "assets/gemoji/images/emoji/unicode/1f6c4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode1f6c5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode1f6c5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/1f6c5.png"
	name := "assets/gemoji/images/emoji/unicode/1f6c5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode203cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode203cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/203c.png"
	name := "assets/gemoji/images/emoji/unicode/203c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2049Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2049Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2049.png"
	name := "assets/gemoji/images/emoji/unicode/2049.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2122Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2122Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2122.png"
	name := "assets/gemoji/images/emoji/unicode/2122.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2139Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2139Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2139.png"
	name := "assets/gemoji/images/emoji/unicode/2139.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2194Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2194Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2194.png"
	name := "assets/gemoji/images/emoji/unicode/2194.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2195Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2195Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2195.png"
	name := "assets/gemoji/images/emoji/unicode/2195.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2196Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2196Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2196.png"
	name := "assets/gemoji/images/emoji/unicode/2196.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2197Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2197Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2197.png"
	name := "assets/gemoji/images/emoji/unicode/2197.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2198Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2198Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2198.png"
	name := "assets/gemoji/images/emoji/unicode/2198.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2199Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2199Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2199.png"
	name := "assets/gemoji/images/emoji/unicode/2199.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode21a9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode21a9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/21a9.png"
	name := "assets/gemoji/images/emoji/unicode/21a9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode21aaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode21aaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/21aa.png"
	name := "assets/gemoji/images/emoji/unicode/21aa.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode231aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode231aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/231a.png"
	name := "assets/gemoji/images/emoji/unicode/231a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode231bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode231bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/231b.png"
	name := "assets/gemoji/images/emoji/unicode/231b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode23e9Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode23e9Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/23e9.png"
	name := "assets/gemoji/images/emoji/unicode/23e9.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode23eaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode23eaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/23ea.png"
	name := "assets/gemoji/images/emoji/unicode/23ea.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode23ebPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode23ebPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/23eb.png"
	name := "assets/gemoji/images/emoji/unicode/23eb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode23ecPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode23ecPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/23ec.png"
	name := "assets/gemoji/images/emoji/unicode/23ec.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode23f0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode23f0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/23f0.png"
	name := "assets/gemoji/images/emoji/unicode/23f0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode23f3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode23f3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/23f3.png"
	name := "assets/gemoji/images/emoji/unicode/23f3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode24c2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode24c2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/24c2.png"
	name := "assets/gemoji/images/emoji/unicode/24c2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode25aaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode25aaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/25aa.png"
	name := "assets/gemoji/images/emoji/unicode/25aa.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode25abPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode25abPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/25ab.png"
	name := "assets/gemoji/images/emoji/unicode/25ab.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode25b6Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode25b6Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/25b6.png"
	name := "assets/gemoji/images/emoji/unicode/25b6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode25c0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode25c0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/25c0.png"
	name := "assets/gemoji/images/emoji/unicode/25c0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode25fbPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode25fbPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/25fb.png"
	name := "assets/gemoji/images/emoji/unicode/25fb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode25fcPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode25fcPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/25fc.png"
	name := "assets/gemoji/images/emoji/unicode/25fc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode25fdPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode25fdPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/25fd.png"
	name := "assets/gemoji/images/emoji/unicode/25fd.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode25fePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode25fePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/25fe.png"
	name := "assets/gemoji/images/emoji/unicode/25fe.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2600Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2600Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2600.png"
	name := "assets/gemoji/images/emoji/unicode/2600.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2601Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2601Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2601.png"
	name := "assets/gemoji/images/emoji/unicode/2601.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode260ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode260ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/260e.png"
	name := "assets/gemoji/images/emoji/unicode/260e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2611Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2611Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2611.png"
	name := "assets/gemoji/images/emoji/unicode/2611.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2614Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2614Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2614.png"
	name := "assets/gemoji/images/emoji/unicode/2614.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2615Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2615Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2615.png"
	name := "assets/gemoji/images/emoji/unicode/2615.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode261dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode261dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/261d.png"
	name := "assets/gemoji/images/emoji/unicode/261d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode263aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode263aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/263a.png"
	name := "assets/gemoji/images/emoji/unicode/263a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2648Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2648Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2648.png"
	name := "assets/gemoji/images/emoji/unicode/2648.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2649Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2649Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2649.png"
	name := "assets/gemoji/images/emoji/unicode/2649.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode264aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode264aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/264a.png"
	name := "assets/gemoji/images/emoji/unicode/264a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode264bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode264bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/264b.png"
	name := "assets/gemoji/images/emoji/unicode/264b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode264cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode264cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/264c.png"
	name := "assets/gemoji/images/emoji/unicode/264c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode264dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode264dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/264d.png"
	name := "assets/gemoji/images/emoji/unicode/264d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode264ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode264ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/264e.png"
	name := "assets/gemoji/images/emoji/unicode/264e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode264fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode264fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/264f.png"
	name := "assets/gemoji/images/emoji/unicode/264f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2650Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2650Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2650.png"
	name := "assets/gemoji/images/emoji/unicode/2650.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2651Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2651Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2651.png"
	name := "assets/gemoji/images/emoji/unicode/2651.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2652Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2652Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2652.png"
	name := "assets/gemoji/images/emoji/unicode/2652.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2653Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2653Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2653.png"
	name := "assets/gemoji/images/emoji/unicode/2653.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2660Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2660Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2660.png"
	name := "assets/gemoji/images/emoji/unicode/2660.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2663Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2663Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2663.png"
	name := "assets/gemoji/images/emoji/unicode/2663.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2665Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2665Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2665.png"
	name := "assets/gemoji/images/emoji/unicode/2665.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2666Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2666Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2666.png"
	name := "assets/gemoji/images/emoji/unicode/2666.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2668Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2668Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2668.png"
	name := "assets/gemoji/images/emoji/unicode/2668.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode267bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode267bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/267b.png"
	name := "assets/gemoji/images/emoji/unicode/267b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode267fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode267fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/267f.png"
	name := "assets/gemoji/images/emoji/unicode/267f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2693Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2693Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2693.png"
	name := "assets/gemoji/images/emoji/unicode/2693.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26a0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26a0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26a0.png"
	name := "assets/gemoji/images/emoji/unicode/26a0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26a1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26a1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26a1.png"
	name := "assets/gemoji/images/emoji/unicode/26a1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26aaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26aaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26aa.png"
	name := "assets/gemoji/images/emoji/unicode/26aa.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26abPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26abPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26ab.png"
	name := "assets/gemoji/images/emoji/unicode/26ab.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26bdPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26bdPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26bd.png"
	name := "assets/gemoji/images/emoji/unicode/26bd.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26bePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26bePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26be.png"
	name := "assets/gemoji/images/emoji/unicode/26be.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26c4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26c4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26c4.png"
	name := "assets/gemoji/images/emoji/unicode/26c4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26c5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26c5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26c5.png"
	name := "assets/gemoji/images/emoji/unicode/26c5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26cePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26cePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26ce.png"
	name := "assets/gemoji/images/emoji/unicode/26ce.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26d4Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26d4Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26d4.png"
	name := "assets/gemoji/images/emoji/unicode/26d4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26eaPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26eaPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26ea.png"
	name := "assets/gemoji/images/emoji/unicode/26ea.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26f2Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26f2Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26f2.png"
	name := "assets/gemoji/images/emoji/unicode/26f2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26f3Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26f3Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26f3.png"
	name := "assets/gemoji/images/emoji/unicode/26f3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26f5Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26f5Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26f5.png"
	name := "assets/gemoji/images/emoji/unicode/26f5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26faPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26faPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26fa.png"
	name := "assets/gemoji/images/emoji/unicode/26fa.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode26fdPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode26fdPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/26fd.png"
	name := "assets/gemoji/images/emoji/unicode/26fd.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2702Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2702Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2702.png"
	name := "assets/gemoji/images/emoji/unicode/2702.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2705Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2705Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2705.png"
	name := "assets/gemoji/images/emoji/unicode/2705.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2708Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2708Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2708.png"
	name := "assets/gemoji/images/emoji/unicode/2708.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2709Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2709Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2709.png"
	name := "assets/gemoji/images/emoji/unicode/2709.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode270aPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode270aPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/270a.png"
	name := "assets/gemoji/images/emoji/unicode/270a.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode270bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode270bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/270b.png"
	name := "assets/gemoji/images/emoji/unicode/270b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode270cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode270cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/270c.png"
	name := "assets/gemoji/images/emoji/unicode/270c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode270fPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode270fPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/270f.png"
	name := "assets/gemoji/images/emoji/unicode/270f.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2712Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2712Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2712.png"
	name := "assets/gemoji/images/emoji/unicode/2712.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2714Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2714Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2714.png"
	name := "assets/gemoji/images/emoji/unicode/2714.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2716Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2716Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2716.png"
	name := "assets/gemoji/images/emoji/unicode/2716.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2728Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2728Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2728.png"
	name := "assets/gemoji/images/emoji/unicode/2728.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2733Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2733Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2733.png"
	name := "assets/gemoji/images/emoji/unicode/2733.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2734Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2734Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2734.png"
	name := "assets/gemoji/images/emoji/unicode/2734.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2744Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2744Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2744.png"
	name := "assets/gemoji/images/emoji/unicode/2744.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2747Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2747Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2747.png"
	name := "assets/gemoji/images/emoji/unicode/2747.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode274cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode274cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/274c.png"
	name := "assets/gemoji/images/emoji/unicode/274c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode274ePng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode274ePng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/274e.png"
	name := "assets/gemoji/images/emoji/unicode/274e.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2753Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2753Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2753.png"
	name := "assets/gemoji/images/emoji/unicode/2753.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2754Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2754Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2754.png"
	name := "assets/gemoji/images/emoji/unicode/2754.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2755Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2755Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2755.png"
	name := "assets/gemoji/images/emoji/unicode/2755.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2757Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2757Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2757.png"
	name := "assets/gemoji/images/emoji/unicode/2757.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2764Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2764Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2764.png"
	name := "assets/gemoji/images/emoji/unicode/2764.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2795Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2795Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2795.png"
	name := "assets/gemoji/images/emoji/unicode/2795.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2796Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2796Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2796.png"
	name := "assets/gemoji/images/emoji/unicode/2796.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2797Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2797Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2797.png"
	name := "assets/gemoji/images/emoji/unicode/2797.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode27a1Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode27a1Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/27a1.png"
	name := "assets/gemoji/images/emoji/unicode/27a1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode27b0Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode27b0Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/27b0.png"
	name := "assets/gemoji/images/emoji/unicode/27b0.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode27bfPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode27bfPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/27bf.png"
	name := "assets/gemoji/images/emoji/unicode/27bf.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2934Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2934Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2934.png"
	name := "assets/gemoji/images/emoji/unicode/2934.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2935Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2935Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2935.png"
	name := "assets/gemoji/images/emoji/unicode/2935.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2b05Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2b05Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2b05.png"
	name := "assets/gemoji/images/emoji/unicode/2b05.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2b06Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2b06Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2b06.png"
	name := "assets/gemoji/images/emoji/unicode/2b06.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2b07Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2b07Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2b07.png"
	name := "assets/gemoji/images/emoji/unicode/2b07.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2b1bPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2b1bPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2b1b.png"
	name := "assets/gemoji/images/emoji/unicode/2b1b.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2b1cPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2b1cPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2b1c.png"
	name := "assets/gemoji/images/emoji/unicode/2b1c.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2b50Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2b50Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2b50.png"
	name := "assets/gemoji/images/emoji/unicode/2b50.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode2b55Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode2b55Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/2b55.png"
	name := "assets/gemoji/images/emoji/unicode/2b55.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode3030Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode3030Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/3030.png"
	name := "assets/gemoji/images/emoji/unicode/3030.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode303dPng reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode303dPng() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/303d.png"
	name := "assets/gemoji/images/emoji/unicode/303d.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode3297Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode3297Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/3297.png"
	name := "assets/gemoji/images/emoji/unicode/3297.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// assetsGemojiImagesEmojiUnicode3299Png reads file data from disk. It returns an error on failure.
func assetsGemojiImagesEmojiUnicode3299Png() (*asset, error) {
	path := "/Users/shin/.ghq/src/github.com/s-shin/revealer/assets/gemoji/images/emoji/unicode/3299.png"
	name := "assets/gemoji/images/emoji/unicode/3299.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/index.html": assetsIndexHtml,
	"assets/reveal/css/print/paper.css": assetsRevealCssPrintPaperCss,
	"assets/reveal/css/print/pdf.css": assetsRevealCssPrintPdfCss,
	"assets/reveal/css/reveal.css": assetsRevealCssRevealCss,
	"assets/reveal/css/reveal.scss": assetsRevealCssRevealScss,
	"assets/reveal/css/theme/README.md": assetsRevealCssThemeReadmeMd,
	"assets/reveal/css/theme/beige.css": assetsRevealCssThemeBeigeCss,
	"assets/reveal/css/theme/black.css": assetsRevealCssThemeBlackCss,
	"assets/reveal/css/theme/blood.css": assetsRevealCssThemeBloodCss,
	"assets/reveal/css/theme/league.css": assetsRevealCssThemeLeagueCss,
	"assets/reveal/css/theme/moon.css": assetsRevealCssThemeMoonCss,
	"assets/reveal/css/theme/night.css": assetsRevealCssThemeNightCss,
	"assets/reveal/css/theme/serif.css": assetsRevealCssThemeSerifCss,
	"assets/reveal/css/theme/simple.css": assetsRevealCssThemeSimpleCss,
	"assets/reveal/css/theme/sky.css": assetsRevealCssThemeSkyCss,
	"assets/reveal/css/theme/solarized.css": assetsRevealCssThemeSolarizedCss,
	"assets/reveal/css/theme/source/beige.scss": assetsRevealCssThemeSourceBeigeScss,
	"assets/reveal/css/theme/source/black.scss": assetsRevealCssThemeSourceBlackScss,
	"assets/reveal/css/theme/source/blood.scss": assetsRevealCssThemeSourceBloodScss,
	"assets/reveal/css/theme/source/league.scss": assetsRevealCssThemeSourceLeagueScss,
	"assets/reveal/css/theme/source/moon.scss": assetsRevealCssThemeSourceMoonScss,
	"assets/reveal/css/theme/source/night.scss": assetsRevealCssThemeSourceNightScss,
	"assets/reveal/css/theme/source/serif.scss": assetsRevealCssThemeSourceSerifScss,
	"assets/reveal/css/theme/source/simple.scss": assetsRevealCssThemeSourceSimpleScss,
	"assets/reveal/css/theme/source/sky.scss": assetsRevealCssThemeSourceSkyScss,
	"assets/reveal/css/theme/source/solarized.scss": assetsRevealCssThemeSourceSolarizedScss,
	"assets/reveal/css/theme/source/white.scss": assetsRevealCssThemeSourceWhiteScss,
	"assets/reveal/css/theme/template/mixins.scss": assetsRevealCssThemeTemplateMixinsScss,
	"assets/reveal/css/theme/template/settings.scss": assetsRevealCssThemeTemplateSettingsScss,
	"assets/reveal/css/theme/template/theme.scss": assetsRevealCssThemeTemplateThemeScss,
	"assets/reveal/css/theme/white.css": assetsRevealCssThemeWhiteCss,
	"assets/reveal/js/reveal.js": assetsRevealJsRevealJs,
	"assets/reveal/lib/css/zenburn.css": assetsRevealLibCssZenburnCss,
	"assets/reveal/lib/font/league-gothic/LICENSE": assetsRevealLibFontLeagueGothicLicense,
	"assets/reveal/lib/font/league-gothic/league-gothic.css": assetsRevealLibFontLeagueGothicLeagueGothicCss,
	"assets/reveal/lib/font/league-gothic/league-gothic.eot": assetsRevealLibFontLeagueGothicLeagueGothicEot,
	"assets/reveal/lib/font/league-gothic/league-gothic.ttf": assetsRevealLibFontLeagueGothicLeagueGothicTtf,
	"assets/reveal/lib/font/league-gothic/league-gothic.woff": assetsRevealLibFontLeagueGothicLeagueGothicWoff,
	"assets/reveal/lib/font/source-sans-pro/LICENSE": assetsRevealLibFontSourceSansProLicense,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.eot": assetsRevealLibFontSourceSansProSourceSansProItalicEot,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.ttf": assetsRevealLibFontSourceSansProSourceSansProItalicTtf,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-italic.woff": assetsRevealLibFontSourceSansProSourceSansProItalicWoff,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.eot": assetsRevealLibFontSourceSansProSourceSansProRegularEot,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.ttf": assetsRevealLibFontSourceSansProSourceSansProRegularTtf,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-regular.woff": assetsRevealLibFontSourceSansProSourceSansProRegularWoff,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.eot": assetsRevealLibFontSourceSansProSourceSansProSemiboldEot,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.ttf": assetsRevealLibFontSourceSansProSourceSansProSemiboldTtf,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibold.woff": assetsRevealLibFontSourceSansProSourceSansProSemiboldWoff,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.eot": assetsRevealLibFontSourceSansProSourceSansProSemibolditalicEot,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.ttf": assetsRevealLibFontSourceSansProSourceSansProSemibolditalicTtf,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro-semibolditalic.woff": assetsRevealLibFontSourceSansProSourceSansProSemibolditalicWoff,
	"assets/reveal/lib/font/source-sans-pro/source-sans-pro.css": assetsRevealLibFontSourceSansProSourceSansProCss,
	"assets/reveal/lib/js/classList.js": assetsRevealLibJsClasslistJs,
	"assets/reveal/lib/js/head.min.js": assetsRevealLibJsHeadMinJs,
	"assets/reveal/lib/js/html5shiv.js": assetsRevealLibJsHtml5shivJs,
	"assets/reveal/plugin/highlight/highlight.js": assetsRevealPluginHighlightHighlightJs,
	"assets/reveal/plugin/markdown/example.html": assetsRevealPluginMarkdownExampleHtml,
	"assets/reveal/plugin/markdown/example.md": assetsRevealPluginMarkdownExampleMd,
	"assets/reveal/plugin/markdown/markdown.js": assetsRevealPluginMarkdownMarkdownJs,
	"assets/reveal/plugin/markdown/marked.js": assetsRevealPluginMarkdownMarkedJs,
	"assets/reveal/plugin/math/math.js": assetsRevealPluginMathMathJs,
	"assets/reveal/plugin/multiplex/client.js": assetsRevealPluginMultiplexClientJs,
	"assets/reveal/plugin/multiplex/index.js": assetsRevealPluginMultiplexIndexJs,
	"assets/reveal/plugin/multiplex/master.js": assetsRevealPluginMultiplexMasterJs,
	"assets/reveal/plugin/multiplex/package.json": assetsRevealPluginMultiplexPackageJson,
	"assets/reveal/plugin/notes/notes.html": assetsRevealPluginNotesNotesHtml,
	"assets/reveal/plugin/notes/notes.js": assetsRevealPluginNotesNotesJs,
	"assets/reveal/plugin/notes-server/client.js": assetsRevealPluginNotesServerClientJs,
	"assets/reveal/plugin/notes-server/index.js": assetsRevealPluginNotesServerIndexJs,
	"assets/reveal/plugin/notes-server/notes.html": assetsRevealPluginNotesServerNotesHtml,
	"assets/reveal/plugin/print-pdf/print-pdf.js": assetsRevealPluginPrintPdfPrintPdfJs,
	"assets/reveal/plugin/search/search.js": assetsRevealPluginSearchSearchJs,
	"assets/reveal/plugin/zoom-js/zoom.js": assetsRevealPluginZoomJsZoomJs,
	"assets/gemoji/db/emoji.json": assetsGemojiDbEmojiJson,
	"assets/gemoji/images/emoji/basecamp.png": assetsGemojiImagesEmojiBasecampPng,
	"assets/gemoji/images/emoji/basecampy.png": assetsGemojiImagesEmojiBasecampyPng,
	"assets/gemoji/images/emoji/bowtie.png": assetsGemojiImagesEmojiBowtiePng,
	"assets/gemoji/images/emoji/feelsgood.png": assetsGemojiImagesEmojiFeelsgoodPng,
	"assets/gemoji/images/emoji/finnadie.png": assetsGemojiImagesEmojiFinnadiePng,
	"assets/gemoji/images/emoji/fu.png": assetsGemojiImagesEmojiFuPng,
	"assets/gemoji/images/emoji/goberserk.png": assetsGemojiImagesEmojiGoberserkPng,
	"assets/gemoji/images/emoji/godmode.png": assetsGemojiImagesEmojiGodmodePng,
	"assets/gemoji/images/emoji/hurtrealbad.png": assetsGemojiImagesEmojiHurtrealbadPng,
	"assets/gemoji/images/emoji/metal.png": assetsGemojiImagesEmojiMetalPng,
	"assets/gemoji/images/emoji/neckbeard.png": assetsGemojiImagesEmojiNeckbeardPng,
	"assets/gemoji/images/emoji/octocat.png": assetsGemojiImagesEmojiOctocatPng,
	"assets/gemoji/images/emoji/rage1.png": assetsGemojiImagesEmojiRage1Png,
	"assets/gemoji/images/emoji/rage2.png": assetsGemojiImagesEmojiRage2Png,
	"assets/gemoji/images/emoji/rage3.png": assetsGemojiImagesEmojiRage3Png,
	"assets/gemoji/images/emoji/rage4.png": assetsGemojiImagesEmojiRage4Png,
	"assets/gemoji/images/emoji/shipit.png": assetsGemojiImagesEmojiShipitPng,
	"assets/gemoji/images/emoji/suspect.png": assetsGemojiImagesEmojiSuspectPng,
	"assets/gemoji/images/emoji/taco.png": assetsGemojiImagesEmojiTacoPng,
	"assets/gemoji/images/emoji/trollface.png": assetsGemojiImagesEmojiTrollfacePng,
	"assets/gemoji/images/emoji/unicode/0023-20e3.png": assetsGemojiImagesEmojiUnicode002320e3Png,
	"assets/gemoji/images/emoji/unicode/0030-20e3.png": assetsGemojiImagesEmojiUnicode003020e3Png,
	"assets/gemoji/images/emoji/unicode/0031-20e3.png": assetsGemojiImagesEmojiUnicode003120e3Png,
	"assets/gemoji/images/emoji/unicode/0032-20e3.png": assetsGemojiImagesEmojiUnicode003220e3Png,
	"assets/gemoji/images/emoji/unicode/0033-20e3.png": assetsGemojiImagesEmojiUnicode003320e3Png,
	"assets/gemoji/images/emoji/unicode/0034-20e3.png": assetsGemojiImagesEmojiUnicode003420e3Png,
	"assets/gemoji/images/emoji/unicode/0035-20e3.png": assetsGemojiImagesEmojiUnicode003520e3Png,
	"assets/gemoji/images/emoji/unicode/0036-20e3.png": assetsGemojiImagesEmojiUnicode003620e3Png,
	"assets/gemoji/images/emoji/unicode/0037-20e3.png": assetsGemojiImagesEmojiUnicode003720e3Png,
	"assets/gemoji/images/emoji/unicode/0038-20e3.png": assetsGemojiImagesEmojiUnicode003820e3Png,
	"assets/gemoji/images/emoji/unicode/0039-20e3.png": assetsGemojiImagesEmojiUnicode003920e3Png,
	"assets/gemoji/images/emoji/unicode/00a9.png": assetsGemojiImagesEmojiUnicode00a9Png,
	"assets/gemoji/images/emoji/unicode/00ae.png": assetsGemojiImagesEmojiUnicode00aePng,
	"assets/gemoji/images/emoji/unicode/1f004.png": assetsGemojiImagesEmojiUnicode1f004Png,
	"assets/gemoji/images/emoji/unicode/1f0cf.png": assetsGemojiImagesEmojiUnicode1f0cfPng,
	"assets/gemoji/images/emoji/unicode/1f170.png": assetsGemojiImagesEmojiUnicode1f170Png,
	"assets/gemoji/images/emoji/unicode/1f171.png": assetsGemojiImagesEmojiUnicode1f171Png,
	"assets/gemoji/images/emoji/unicode/1f17e.png": assetsGemojiImagesEmojiUnicode1f17ePng,
	"assets/gemoji/images/emoji/unicode/1f17f.png": assetsGemojiImagesEmojiUnicode1f17fPng,
	"assets/gemoji/images/emoji/unicode/1f18e.png": assetsGemojiImagesEmojiUnicode1f18ePng,
	"assets/gemoji/images/emoji/unicode/1f191.png": assetsGemojiImagesEmojiUnicode1f191Png,
	"assets/gemoji/images/emoji/unicode/1f192.png": assetsGemojiImagesEmojiUnicode1f192Png,
	"assets/gemoji/images/emoji/unicode/1f193.png": assetsGemojiImagesEmojiUnicode1f193Png,
	"assets/gemoji/images/emoji/unicode/1f194.png": assetsGemojiImagesEmojiUnicode1f194Png,
	"assets/gemoji/images/emoji/unicode/1f195.png": assetsGemojiImagesEmojiUnicode1f195Png,
	"assets/gemoji/images/emoji/unicode/1f196.png": assetsGemojiImagesEmojiUnicode1f196Png,
	"assets/gemoji/images/emoji/unicode/1f197.png": assetsGemojiImagesEmojiUnicode1f197Png,
	"assets/gemoji/images/emoji/unicode/1f198.png": assetsGemojiImagesEmojiUnicode1f198Png,
	"assets/gemoji/images/emoji/unicode/1f199.png": assetsGemojiImagesEmojiUnicode1f199Png,
	"assets/gemoji/images/emoji/unicode/1f19a.png": assetsGemojiImagesEmojiUnicode1f19aPng,
	"assets/gemoji/images/emoji/unicode/1f1e8-1f1f3.png": assetsGemojiImagesEmojiUnicode1f1e81f1f3Png,
	"assets/gemoji/images/emoji/unicode/1f1e9-1f1ea.png": assetsGemojiImagesEmojiUnicode1f1e91f1eaPng,
	"assets/gemoji/images/emoji/unicode/1f1ea-1f1f8.png": assetsGemojiImagesEmojiUnicode1f1ea1f1f8Png,
	"assets/gemoji/images/emoji/unicode/1f1eb-1f1f7.png": assetsGemojiImagesEmojiUnicode1f1eb1f1f7Png,
	"assets/gemoji/images/emoji/unicode/1f1ec-1f1e7.png": assetsGemojiImagesEmojiUnicode1f1ec1f1e7Png,
	"assets/gemoji/images/emoji/unicode/1f1ee-1f1f9.png": assetsGemojiImagesEmojiUnicode1f1ee1f1f9Png,
	"assets/gemoji/images/emoji/unicode/1f1ef-1f1f5.png": assetsGemojiImagesEmojiUnicode1f1ef1f1f5Png,
	"assets/gemoji/images/emoji/unicode/1f1f0-1f1f7.png": assetsGemojiImagesEmojiUnicode1f1f01f1f7Png,
	"assets/gemoji/images/emoji/unicode/1f1f7-1f1fa.png": assetsGemojiImagesEmojiUnicode1f1f71f1faPng,
	"assets/gemoji/images/emoji/unicode/1f1fa-1f1f8.png": assetsGemojiImagesEmojiUnicode1f1fa1f1f8Png,
	"assets/gemoji/images/emoji/unicode/1f201.png": assetsGemojiImagesEmojiUnicode1f201Png,
	"assets/gemoji/images/emoji/unicode/1f202.png": assetsGemojiImagesEmojiUnicode1f202Png,
	"assets/gemoji/images/emoji/unicode/1f21a.png": assetsGemojiImagesEmojiUnicode1f21aPng,
	"assets/gemoji/images/emoji/unicode/1f22f.png": assetsGemojiImagesEmojiUnicode1f22fPng,
	"assets/gemoji/images/emoji/unicode/1f232.png": assetsGemojiImagesEmojiUnicode1f232Png,
	"assets/gemoji/images/emoji/unicode/1f233.png": assetsGemojiImagesEmojiUnicode1f233Png,
	"assets/gemoji/images/emoji/unicode/1f234.png": assetsGemojiImagesEmojiUnicode1f234Png,
	"assets/gemoji/images/emoji/unicode/1f235.png": assetsGemojiImagesEmojiUnicode1f235Png,
	"assets/gemoji/images/emoji/unicode/1f236.png": assetsGemojiImagesEmojiUnicode1f236Png,
	"assets/gemoji/images/emoji/unicode/1f237.png": assetsGemojiImagesEmojiUnicode1f237Png,
	"assets/gemoji/images/emoji/unicode/1f238.png": assetsGemojiImagesEmojiUnicode1f238Png,
	"assets/gemoji/images/emoji/unicode/1f239.png": assetsGemojiImagesEmojiUnicode1f239Png,
	"assets/gemoji/images/emoji/unicode/1f23a.png": assetsGemojiImagesEmojiUnicode1f23aPng,
	"assets/gemoji/images/emoji/unicode/1f250.png": assetsGemojiImagesEmojiUnicode1f250Png,
	"assets/gemoji/images/emoji/unicode/1f251.png": assetsGemojiImagesEmojiUnicode1f251Png,
	"assets/gemoji/images/emoji/unicode/1f300.png": assetsGemojiImagesEmojiUnicode1f300Png,
	"assets/gemoji/images/emoji/unicode/1f301.png": assetsGemojiImagesEmojiUnicode1f301Png,
	"assets/gemoji/images/emoji/unicode/1f302.png": assetsGemojiImagesEmojiUnicode1f302Png,
	"assets/gemoji/images/emoji/unicode/1f303.png": assetsGemojiImagesEmojiUnicode1f303Png,
	"assets/gemoji/images/emoji/unicode/1f304.png": assetsGemojiImagesEmojiUnicode1f304Png,
	"assets/gemoji/images/emoji/unicode/1f305.png": assetsGemojiImagesEmojiUnicode1f305Png,
	"assets/gemoji/images/emoji/unicode/1f306.png": assetsGemojiImagesEmojiUnicode1f306Png,
	"assets/gemoji/images/emoji/unicode/1f307.png": assetsGemojiImagesEmojiUnicode1f307Png,
	"assets/gemoji/images/emoji/unicode/1f308.png": assetsGemojiImagesEmojiUnicode1f308Png,
	"assets/gemoji/images/emoji/unicode/1f309.png": assetsGemojiImagesEmojiUnicode1f309Png,
	"assets/gemoji/images/emoji/unicode/1f30a.png": assetsGemojiImagesEmojiUnicode1f30aPng,
	"assets/gemoji/images/emoji/unicode/1f30b.png": assetsGemojiImagesEmojiUnicode1f30bPng,
	"assets/gemoji/images/emoji/unicode/1f30c.png": assetsGemojiImagesEmojiUnicode1f30cPng,
	"assets/gemoji/images/emoji/unicode/1f30d.png": assetsGemojiImagesEmojiUnicode1f30dPng,
	"assets/gemoji/images/emoji/unicode/1f30e.png": assetsGemojiImagesEmojiUnicode1f30ePng,
	"assets/gemoji/images/emoji/unicode/1f30f.png": assetsGemojiImagesEmojiUnicode1f30fPng,
	"assets/gemoji/images/emoji/unicode/1f310.png": assetsGemojiImagesEmojiUnicode1f310Png,
	"assets/gemoji/images/emoji/unicode/1f311.png": assetsGemojiImagesEmojiUnicode1f311Png,
	"assets/gemoji/images/emoji/unicode/1f312.png": assetsGemojiImagesEmojiUnicode1f312Png,
	"assets/gemoji/images/emoji/unicode/1f313.png": assetsGemojiImagesEmojiUnicode1f313Png,
	"assets/gemoji/images/emoji/unicode/1f314.png": assetsGemojiImagesEmojiUnicode1f314Png,
	"assets/gemoji/images/emoji/unicode/1f315.png": assetsGemojiImagesEmojiUnicode1f315Png,
	"assets/gemoji/images/emoji/unicode/1f316.png": assetsGemojiImagesEmojiUnicode1f316Png,
	"assets/gemoji/images/emoji/unicode/1f317.png": assetsGemojiImagesEmojiUnicode1f317Png,
	"assets/gemoji/images/emoji/unicode/1f318.png": assetsGemojiImagesEmojiUnicode1f318Png,
	"assets/gemoji/images/emoji/unicode/1f319.png": assetsGemojiImagesEmojiUnicode1f319Png,
	"assets/gemoji/images/emoji/unicode/1f31a.png": assetsGemojiImagesEmojiUnicode1f31aPng,
	"assets/gemoji/images/emoji/unicode/1f31b.png": assetsGemojiImagesEmojiUnicode1f31bPng,
	"assets/gemoji/images/emoji/unicode/1f31c.png": assetsGemojiImagesEmojiUnicode1f31cPng,
	"assets/gemoji/images/emoji/unicode/1f31d.png": assetsGemojiImagesEmojiUnicode1f31dPng,
	"assets/gemoji/images/emoji/unicode/1f31e.png": assetsGemojiImagesEmojiUnicode1f31ePng,
	"assets/gemoji/images/emoji/unicode/1f31f.png": assetsGemojiImagesEmojiUnicode1f31fPng,
	"assets/gemoji/images/emoji/unicode/1f320.png": assetsGemojiImagesEmojiUnicode1f320Png,
	"assets/gemoji/images/emoji/unicode/1f330.png": assetsGemojiImagesEmojiUnicode1f330Png,
	"assets/gemoji/images/emoji/unicode/1f331.png": assetsGemojiImagesEmojiUnicode1f331Png,
	"assets/gemoji/images/emoji/unicode/1f332.png": assetsGemojiImagesEmojiUnicode1f332Png,
	"assets/gemoji/images/emoji/unicode/1f333.png": assetsGemojiImagesEmojiUnicode1f333Png,
	"assets/gemoji/images/emoji/unicode/1f334.png": assetsGemojiImagesEmojiUnicode1f334Png,
	"assets/gemoji/images/emoji/unicode/1f335.png": assetsGemojiImagesEmojiUnicode1f335Png,
	"assets/gemoji/images/emoji/unicode/1f337.png": assetsGemojiImagesEmojiUnicode1f337Png,
	"assets/gemoji/images/emoji/unicode/1f338.png": assetsGemojiImagesEmojiUnicode1f338Png,
	"assets/gemoji/images/emoji/unicode/1f339.png": assetsGemojiImagesEmojiUnicode1f339Png,
	"assets/gemoji/images/emoji/unicode/1f33a.png": assetsGemojiImagesEmojiUnicode1f33aPng,
	"assets/gemoji/images/emoji/unicode/1f33b.png": assetsGemojiImagesEmojiUnicode1f33bPng,
	"assets/gemoji/images/emoji/unicode/1f33c.png": assetsGemojiImagesEmojiUnicode1f33cPng,
	"assets/gemoji/images/emoji/unicode/1f33d.png": assetsGemojiImagesEmojiUnicode1f33dPng,
	"assets/gemoji/images/emoji/unicode/1f33e.png": assetsGemojiImagesEmojiUnicode1f33ePng,
	"assets/gemoji/images/emoji/unicode/1f33f.png": assetsGemojiImagesEmojiUnicode1f33fPng,
	"assets/gemoji/images/emoji/unicode/1f340.png": assetsGemojiImagesEmojiUnicode1f340Png,
	"assets/gemoji/images/emoji/unicode/1f341.png": assetsGemojiImagesEmojiUnicode1f341Png,
	"assets/gemoji/images/emoji/unicode/1f342.png": assetsGemojiImagesEmojiUnicode1f342Png,
	"assets/gemoji/images/emoji/unicode/1f343.png": assetsGemojiImagesEmojiUnicode1f343Png,
	"assets/gemoji/images/emoji/unicode/1f344.png": assetsGemojiImagesEmojiUnicode1f344Png,
	"assets/gemoji/images/emoji/unicode/1f345.png": assetsGemojiImagesEmojiUnicode1f345Png,
	"assets/gemoji/images/emoji/unicode/1f346.png": assetsGemojiImagesEmojiUnicode1f346Png,
	"assets/gemoji/images/emoji/unicode/1f347.png": assetsGemojiImagesEmojiUnicode1f347Png,
	"assets/gemoji/images/emoji/unicode/1f348.png": assetsGemojiImagesEmojiUnicode1f348Png,
	"assets/gemoji/images/emoji/unicode/1f349.png": assetsGemojiImagesEmojiUnicode1f349Png,
	"assets/gemoji/images/emoji/unicode/1f34a.png": assetsGemojiImagesEmojiUnicode1f34aPng,
	"assets/gemoji/images/emoji/unicode/1f34b.png": assetsGemojiImagesEmojiUnicode1f34bPng,
	"assets/gemoji/images/emoji/unicode/1f34c.png": assetsGemojiImagesEmojiUnicode1f34cPng,
	"assets/gemoji/images/emoji/unicode/1f34d.png": assetsGemojiImagesEmojiUnicode1f34dPng,
	"assets/gemoji/images/emoji/unicode/1f34e.png": assetsGemojiImagesEmojiUnicode1f34ePng,
	"assets/gemoji/images/emoji/unicode/1f34f.png": assetsGemojiImagesEmojiUnicode1f34fPng,
	"assets/gemoji/images/emoji/unicode/1f350.png": assetsGemojiImagesEmojiUnicode1f350Png,
	"assets/gemoji/images/emoji/unicode/1f351.png": assetsGemojiImagesEmojiUnicode1f351Png,
	"assets/gemoji/images/emoji/unicode/1f352.png": assetsGemojiImagesEmojiUnicode1f352Png,
	"assets/gemoji/images/emoji/unicode/1f353.png": assetsGemojiImagesEmojiUnicode1f353Png,
	"assets/gemoji/images/emoji/unicode/1f354.png": assetsGemojiImagesEmojiUnicode1f354Png,
	"assets/gemoji/images/emoji/unicode/1f355.png": assetsGemojiImagesEmojiUnicode1f355Png,
	"assets/gemoji/images/emoji/unicode/1f356.png": assetsGemojiImagesEmojiUnicode1f356Png,
	"assets/gemoji/images/emoji/unicode/1f357.png": assetsGemojiImagesEmojiUnicode1f357Png,
	"assets/gemoji/images/emoji/unicode/1f358.png": assetsGemojiImagesEmojiUnicode1f358Png,
	"assets/gemoji/images/emoji/unicode/1f359.png": assetsGemojiImagesEmojiUnicode1f359Png,
	"assets/gemoji/images/emoji/unicode/1f35a.png": assetsGemojiImagesEmojiUnicode1f35aPng,
	"assets/gemoji/images/emoji/unicode/1f35b.png": assetsGemojiImagesEmojiUnicode1f35bPng,
	"assets/gemoji/images/emoji/unicode/1f35c.png": assetsGemojiImagesEmojiUnicode1f35cPng,
	"assets/gemoji/images/emoji/unicode/1f35d.png": assetsGemojiImagesEmojiUnicode1f35dPng,
	"assets/gemoji/images/emoji/unicode/1f35e.png": assetsGemojiImagesEmojiUnicode1f35ePng,
	"assets/gemoji/images/emoji/unicode/1f35f.png": assetsGemojiImagesEmojiUnicode1f35fPng,
	"assets/gemoji/images/emoji/unicode/1f360.png": assetsGemojiImagesEmojiUnicode1f360Png,
	"assets/gemoji/images/emoji/unicode/1f361.png": assetsGemojiImagesEmojiUnicode1f361Png,
	"assets/gemoji/images/emoji/unicode/1f362.png": assetsGemojiImagesEmojiUnicode1f362Png,
	"assets/gemoji/images/emoji/unicode/1f363.png": assetsGemojiImagesEmojiUnicode1f363Png,
	"assets/gemoji/images/emoji/unicode/1f364.png": assetsGemojiImagesEmojiUnicode1f364Png,
	"assets/gemoji/images/emoji/unicode/1f365.png": assetsGemojiImagesEmojiUnicode1f365Png,
	"assets/gemoji/images/emoji/unicode/1f366.png": assetsGemojiImagesEmojiUnicode1f366Png,
	"assets/gemoji/images/emoji/unicode/1f367.png": assetsGemojiImagesEmojiUnicode1f367Png,
	"assets/gemoji/images/emoji/unicode/1f368.png": assetsGemojiImagesEmojiUnicode1f368Png,
	"assets/gemoji/images/emoji/unicode/1f369.png": assetsGemojiImagesEmojiUnicode1f369Png,
	"assets/gemoji/images/emoji/unicode/1f36a.png": assetsGemojiImagesEmojiUnicode1f36aPng,
	"assets/gemoji/images/emoji/unicode/1f36b.png": assetsGemojiImagesEmojiUnicode1f36bPng,
	"assets/gemoji/images/emoji/unicode/1f36c.png": assetsGemojiImagesEmojiUnicode1f36cPng,
	"assets/gemoji/images/emoji/unicode/1f36d.png": assetsGemojiImagesEmojiUnicode1f36dPng,
	"assets/gemoji/images/emoji/unicode/1f36e.png": assetsGemojiImagesEmojiUnicode1f36ePng,
	"assets/gemoji/images/emoji/unicode/1f36f.png": assetsGemojiImagesEmojiUnicode1f36fPng,
	"assets/gemoji/images/emoji/unicode/1f370.png": assetsGemojiImagesEmojiUnicode1f370Png,
	"assets/gemoji/images/emoji/unicode/1f371.png": assetsGemojiImagesEmojiUnicode1f371Png,
	"assets/gemoji/images/emoji/unicode/1f372.png": assetsGemojiImagesEmojiUnicode1f372Png,
	"assets/gemoji/images/emoji/unicode/1f373.png": assetsGemojiImagesEmojiUnicode1f373Png,
	"assets/gemoji/images/emoji/unicode/1f374.png": assetsGemojiImagesEmojiUnicode1f374Png,
	"assets/gemoji/images/emoji/unicode/1f375.png": assetsGemojiImagesEmojiUnicode1f375Png,
	"assets/gemoji/images/emoji/unicode/1f376.png": assetsGemojiImagesEmojiUnicode1f376Png,
	"assets/gemoji/images/emoji/unicode/1f377.png": assetsGemojiImagesEmojiUnicode1f377Png,
	"assets/gemoji/images/emoji/unicode/1f378.png": assetsGemojiImagesEmojiUnicode1f378Png,
	"assets/gemoji/images/emoji/unicode/1f379.png": assetsGemojiImagesEmojiUnicode1f379Png,
	"assets/gemoji/images/emoji/unicode/1f37a.png": assetsGemojiImagesEmojiUnicode1f37aPng,
	"assets/gemoji/images/emoji/unicode/1f37b.png": assetsGemojiImagesEmojiUnicode1f37bPng,
	"assets/gemoji/images/emoji/unicode/1f37c.png": assetsGemojiImagesEmojiUnicode1f37cPng,
	"assets/gemoji/images/emoji/unicode/1f380.png": assetsGemojiImagesEmojiUnicode1f380Png,
	"assets/gemoji/images/emoji/unicode/1f381.png": assetsGemojiImagesEmojiUnicode1f381Png,
	"assets/gemoji/images/emoji/unicode/1f382.png": assetsGemojiImagesEmojiUnicode1f382Png,
	"assets/gemoji/images/emoji/unicode/1f383.png": assetsGemojiImagesEmojiUnicode1f383Png,
	"assets/gemoji/images/emoji/unicode/1f384.png": assetsGemojiImagesEmojiUnicode1f384Png,
	"assets/gemoji/images/emoji/unicode/1f385.png": assetsGemojiImagesEmojiUnicode1f385Png,
	"assets/gemoji/images/emoji/unicode/1f386.png": assetsGemojiImagesEmojiUnicode1f386Png,
	"assets/gemoji/images/emoji/unicode/1f387.png": assetsGemojiImagesEmojiUnicode1f387Png,
	"assets/gemoji/images/emoji/unicode/1f388.png": assetsGemojiImagesEmojiUnicode1f388Png,
	"assets/gemoji/images/emoji/unicode/1f389.png": assetsGemojiImagesEmojiUnicode1f389Png,
	"assets/gemoji/images/emoji/unicode/1f38a.png": assetsGemojiImagesEmojiUnicode1f38aPng,
	"assets/gemoji/images/emoji/unicode/1f38b.png": assetsGemojiImagesEmojiUnicode1f38bPng,
	"assets/gemoji/images/emoji/unicode/1f38c.png": assetsGemojiImagesEmojiUnicode1f38cPng,
	"assets/gemoji/images/emoji/unicode/1f38d.png": assetsGemojiImagesEmojiUnicode1f38dPng,
	"assets/gemoji/images/emoji/unicode/1f38e.png": assetsGemojiImagesEmojiUnicode1f38ePng,
	"assets/gemoji/images/emoji/unicode/1f38f.png": assetsGemojiImagesEmojiUnicode1f38fPng,
	"assets/gemoji/images/emoji/unicode/1f390.png": assetsGemojiImagesEmojiUnicode1f390Png,
	"assets/gemoji/images/emoji/unicode/1f391.png": assetsGemojiImagesEmojiUnicode1f391Png,
	"assets/gemoji/images/emoji/unicode/1f392.png": assetsGemojiImagesEmojiUnicode1f392Png,
	"assets/gemoji/images/emoji/unicode/1f393.png": assetsGemojiImagesEmojiUnicode1f393Png,
	"assets/gemoji/images/emoji/unicode/1f3a0.png": assetsGemojiImagesEmojiUnicode1f3a0Png,
	"assets/gemoji/images/emoji/unicode/1f3a1.png": assetsGemojiImagesEmojiUnicode1f3a1Png,
	"assets/gemoji/images/emoji/unicode/1f3a2.png": assetsGemojiImagesEmojiUnicode1f3a2Png,
	"assets/gemoji/images/emoji/unicode/1f3a3.png": assetsGemojiImagesEmojiUnicode1f3a3Png,
	"assets/gemoji/images/emoji/unicode/1f3a4.png": assetsGemojiImagesEmojiUnicode1f3a4Png,
	"assets/gemoji/images/emoji/unicode/1f3a5.png": assetsGemojiImagesEmojiUnicode1f3a5Png,
	"assets/gemoji/images/emoji/unicode/1f3a6.png": assetsGemojiImagesEmojiUnicode1f3a6Png,
	"assets/gemoji/images/emoji/unicode/1f3a7.png": assetsGemojiImagesEmojiUnicode1f3a7Png,
	"assets/gemoji/images/emoji/unicode/1f3a8.png": assetsGemojiImagesEmojiUnicode1f3a8Png,
	"assets/gemoji/images/emoji/unicode/1f3a9.png": assetsGemojiImagesEmojiUnicode1f3a9Png,
	"assets/gemoji/images/emoji/unicode/1f3aa.png": assetsGemojiImagesEmojiUnicode1f3aaPng,
	"assets/gemoji/images/emoji/unicode/1f3ab.png": assetsGemojiImagesEmojiUnicode1f3abPng,
	"assets/gemoji/images/emoji/unicode/1f3ac.png": assetsGemojiImagesEmojiUnicode1f3acPng,
	"assets/gemoji/images/emoji/unicode/1f3ad.png": assetsGemojiImagesEmojiUnicode1f3adPng,
	"assets/gemoji/images/emoji/unicode/1f3ae.png": assetsGemojiImagesEmojiUnicode1f3aePng,
	"assets/gemoji/images/emoji/unicode/1f3af.png": assetsGemojiImagesEmojiUnicode1f3afPng,
	"assets/gemoji/images/emoji/unicode/1f3b0.png": assetsGemojiImagesEmojiUnicode1f3b0Png,
	"assets/gemoji/images/emoji/unicode/1f3b1.png": assetsGemojiImagesEmojiUnicode1f3b1Png,
	"assets/gemoji/images/emoji/unicode/1f3b2.png": assetsGemojiImagesEmojiUnicode1f3b2Png,
	"assets/gemoji/images/emoji/unicode/1f3b3.png": assetsGemojiImagesEmojiUnicode1f3b3Png,
	"assets/gemoji/images/emoji/unicode/1f3b4.png": assetsGemojiImagesEmojiUnicode1f3b4Png,
	"assets/gemoji/images/emoji/unicode/1f3b5.png": assetsGemojiImagesEmojiUnicode1f3b5Png,
	"assets/gemoji/images/emoji/unicode/1f3b6.png": assetsGemojiImagesEmojiUnicode1f3b6Png,
	"assets/gemoji/images/emoji/unicode/1f3b7.png": assetsGemojiImagesEmojiUnicode1f3b7Png,
	"assets/gemoji/images/emoji/unicode/1f3b8.png": assetsGemojiImagesEmojiUnicode1f3b8Png,
	"assets/gemoji/images/emoji/unicode/1f3b9.png": assetsGemojiImagesEmojiUnicode1f3b9Png,
	"assets/gemoji/images/emoji/unicode/1f3ba.png": assetsGemojiImagesEmojiUnicode1f3baPng,
	"assets/gemoji/images/emoji/unicode/1f3bb.png": assetsGemojiImagesEmojiUnicode1f3bbPng,
	"assets/gemoji/images/emoji/unicode/1f3bc.png": assetsGemojiImagesEmojiUnicode1f3bcPng,
	"assets/gemoji/images/emoji/unicode/1f3bd.png": assetsGemojiImagesEmojiUnicode1f3bdPng,
	"assets/gemoji/images/emoji/unicode/1f3be.png": assetsGemojiImagesEmojiUnicode1f3bePng,
	"assets/gemoji/images/emoji/unicode/1f3bf.png": assetsGemojiImagesEmojiUnicode1f3bfPng,
	"assets/gemoji/images/emoji/unicode/1f3c0.png": assetsGemojiImagesEmojiUnicode1f3c0Png,
	"assets/gemoji/images/emoji/unicode/1f3c1.png": assetsGemojiImagesEmojiUnicode1f3c1Png,
	"assets/gemoji/images/emoji/unicode/1f3c2.png": assetsGemojiImagesEmojiUnicode1f3c2Png,
	"assets/gemoji/images/emoji/unicode/1f3c3.png": assetsGemojiImagesEmojiUnicode1f3c3Png,
	"assets/gemoji/images/emoji/unicode/1f3c4.png": assetsGemojiImagesEmojiUnicode1f3c4Png,
	"assets/gemoji/images/emoji/unicode/1f3c6.png": assetsGemojiImagesEmojiUnicode1f3c6Png,
	"assets/gemoji/images/emoji/unicode/1f3c7.png": assetsGemojiImagesEmojiUnicode1f3c7Png,
	"assets/gemoji/images/emoji/unicode/1f3c8.png": assetsGemojiImagesEmojiUnicode1f3c8Png,
	"assets/gemoji/images/emoji/unicode/1f3c9.png": assetsGemojiImagesEmojiUnicode1f3c9Png,
	"assets/gemoji/images/emoji/unicode/1f3ca.png": assetsGemojiImagesEmojiUnicode1f3caPng,
	"assets/gemoji/images/emoji/unicode/1f3e0.png": assetsGemojiImagesEmojiUnicode1f3e0Png,
	"assets/gemoji/images/emoji/unicode/1f3e1.png": assetsGemojiImagesEmojiUnicode1f3e1Png,
	"assets/gemoji/images/emoji/unicode/1f3e2.png": assetsGemojiImagesEmojiUnicode1f3e2Png,
	"assets/gemoji/images/emoji/unicode/1f3e3.png": assetsGemojiImagesEmojiUnicode1f3e3Png,
	"assets/gemoji/images/emoji/unicode/1f3e4.png": assetsGemojiImagesEmojiUnicode1f3e4Png,
	"assets/gemoji/images/emoji/unicode/1f3e5.png": assetsGemojiImagesEmojiUnicode1f3e5Png,
	"assets/gemoji/images/emoji/unicode/1f3e6.png": assetsGemojiImagesEmojiUnicode1f3e6Png,
	"assets/gemoji/images/emoji/unicode/1f3e7.png": assetsGemojiImagesEmojiUnicode1f3e7Png,
	"assets/gemoji/images/emoji/unicode/1f3e8.png": assetsGemojiImagesEmojiUnicode1f3e8Png,
	"assets/gemoji/images/emoji/unicode/1f3e9.png": assetsGemojiImagesEmojiUnicode1f3e9Png,
	"assets/gemoji/images/emoji/unicode/1f3ea.png": assetsGemojiImagesEmojiUnicode1f3eaPng,
	"assets/gemoji/images/emoji/unicode/1f3eb.png": assetsGemojiImagesEmojiUnicode1f3ebPng,
	"assets/gemoji/images/emoji/unicode/1f3ec.png": assetsGemojiImagesEmojiUnicode1f3ecPng,
	"assets/gemoji/images/emoji/unicode/1f3ed.png": assetsGemojiImagesEmojiUnicode1f3edPng,
	"assets/gemoji/images/emoji/unicode/1f3ee.png": assetsGemojiImagesEmojiUnicode1f3eePng,
	"assets/gemoji/images/emoji/unicode/1f3ef.png": assetsGemojiImagesEmojiUnicode1f3efPng,
	"assets/gemoji/images/emoji/unicode/1f3f0.png": assetsGemojiImagesEmojiUnicode1f3f0Png,
	"assets/gemoji/images/emoji/unicode/1f400.png": assetsGemojiImagesEmojiUnicode1f400Png,
	"assets/gemoji/images/emoji/unicode/1f401.png": assetsGemojiImagesEmojiUnicode1f401Png,
	"assets/gemoji/images/emoji/unicode/1f402.png": assetsGemojiImagesEmojiUnicode1f402Png,
	"assets/gemoji/images/emoji/unicode/1f403.png": assetsGemojiImagesEmojiUnicode1f403Png,
	"assets/gemoji/images/emoji/unicode/1f404.png": assetsGemojiImagesEmojiUnicode1f404Png,
	"assets/gemoji/images/emoji/unicode/1f405.png": assetsGemojiImagesEmojiUnicode1f405Png,
	"assets/gemoji/images/emoji/unicode/1f406.png": assetsGemojiImagesEmojiUnicode1f406Png,
	"assets/gemoji/images/emoji/unicode/1f407.png": assetsGemojiImagesEmojiUnicode1f407Png,
	"assets/gemoji/images/emoji/unicode/1f408.png": assetsGemojiImagesEmojiUnicode1f408Png,
	"assets/gemoji/images/emoji/unicode/1f409.png": assetsGemojiImagesEmojiUnicode1f409Png,
	"assets/gemoji/images/emoji/unicode/1f40a.png": assetsGemojiImagesEmojiUnicode1f40aPng,
	"assets/gemoji/images/emoji/unicode/1f40b.png": assetsGemojiImagesEmojiUnicode1f40bPng,
	"assets/gemoji/images/emoji/unicode/1f40c.png": assetsGemojiImagesEmojiUnicode1f40cPng,
	"assets/gemoji/images/emoji/unicode/1f40d.png": assetsGemojiImagesEmojiUnicode1f40dPng,
	"assets/gemoji/images/emoji/unicode/1f40e.png": assetsGemojiImagesEmojiUnicode1f40ePng,
	"assets/gemoji/images/emoji/unicode/1f40f.png": assetsGemojiImagesEmojiUnicode1f40fPng,
	"assets/gemoji/images/emoji/unicode/1f410.png": assetsGemojiImagesEmojiUnicode1f410Png,
	"assets/gemoji/images/emoji/unicode/1f411.png": assetsGemojiImagesEmojiUnicode1f411Png,
	"assets/gemoji/images/emoji/unicode/1f412.png": assetsGemojiImagesEmojiUnicode1f412Png,
	"assets/gemoji/images/emoji/unicode/1f413.png": assetsGemojiImagesEmojiUnicode1f413Png,
	"assets/gemoji/images/emoji/unicode/1f414.png": assetsGemojiImagesEmojiUnicode1f414Png,
	"assets/gemoji/images/emoji/unicode/1f415.png": assetsGemojiImagesEmojiUnicode1f415Png,
	"assets/gemoji/images/emoji/unicode/1f416.png": assetsGemojiImagesEmojiUnicode1f416Png,
	"assets/gemoji/images/emoji/unicode/1f417.png": assetsGemojiImagesEmojiUnicode1f417Png,
	"assets/gemoji/images/emoji/unicode/1f418.png": assetsGemojiImagesEmojiUnicode1f418Png,
	"assets/gemoji/images/emoji/unicode/1f419.png": assetsGemojiImagesEmojiUnicode1f419Png,
	"assets/gemoji/images/emoji/unicode/1f41a.png": assetsGemojiImagesEmojiUnicode1f41aPng,
	"assets/gemoji/images/emoji/unicode/1f41b.png": assetsGemojiImagesEmojiUnicode1f41bPng,
	"assets/gemoji/images/emoji/unicode/1f41c.png": assetsGemojiImagesEmojiUnicode1f41cPng,
	"assets/gemoji/images/emoji/unicode/1f41d.png": assetsGemojiImagesEmojiUnicode1f41dPng,
	"assets/gemoji/images/emoji/unicode/1f41e.png": assetsGemojiImagesEmojiUnicode1f41ePng,
	"assets/gemoji/images/emoji/unicode/1f41f.png": assetsGemojiImagesEmojiUnicode1f41fPng,
	"assets/gemoji/images/emoji/unicode/1f420.png": assetsGemojiImagesEmojiUnicode1f420Png,
	"assets/gemoji/images/emoji/unicode/1f421.png": assetsGemojiImagesEmojiUnicode1f421Png,
	"assets/gemoji/images/emoji/unicode/1f422.png": assetsGemojiImagesEmojiUnicode1f422Png,
	"assets/gemoji/images/emoji/unicode/1f423.png": assetsGemojiImagesEmojiUnicode1f423Png,
	"assets/gemoji/images/emoji/unicode/1f424.png": assetsGemojiImagesEmojiUnicode1f424Png,
	"assets/gemoji/images/emoji/unicode/1f425.png": assetsGemojiImagesEmojiUnicode1f425Png,
	"assets/gemoji/images/emoji/unicode/1f426.png": assetsGemojiImagesEmojiUnicode1f426Png,
	"assets/gemoji/images/emoji/unicode/1f427.png": assetsGemojiImagesEmojiUnicode1f427Png,
	"assets/gemoji/images/emoji/unicode/1f428.png": assetsGemojiImagesEmojiUnicode1f428Png,
	"assets/gemoji/images/emoji/unicode/1f429.png": assetsGemojiImagesEmojiUnicode1f429Png,
	"assets/gemoji/images/emoji/unicode/1f42a.png": assetsGemojiImagesEmojiUnicode1f42aPng,
	"assets/gemoji/images/emoji/unicode/1f42b.png": assetsGemojiImagesEmojiUnicode1f42bPng,
	"assets/gemoji/images/emoji/unicode/1f42c.png": assetsGemojiImagesEmojiUnicode1f42cPng,
	"assets/gemoji/images/emoji/unicode/1f42d.png": assetsGemojiImagesEmojiUnicode1f42dPng,
	"assets/gemoji/images/emoji/unicode/1f42e.png": assetsGemojiImagesEmojiUnicode1f42ePng,
	"assets/gemoji/images/emoji/unicode/1f42f.png": assetsGemojiImagesEmojiUnicode1f42fPng,
	"assets/gemoji/images/emoji/unicode/1f430.png": assetsGemojiImagesEmojiUnicode1f430Png,
	"assets/gemoji/images/emoji/unicode/1f431.png": assetsGemojiImagesEmojiUnicode1f431Png,
	"assets/gemoji/images/emoji/unicode/1f432.png": assetsGemojiImagesEmojiUnicode1f432Png,
	"assets/gemoji/images/emoji/unicode/1f433.png": assetsGemojiImagesEmojiUnicode1f433Png,
	"assets/gemoji/images/emoji/unicode/1f434.png": assetsGemojiImagesEmojiUnicode1f434Png,
	"assets/gemoji/images/emoji/unicode/1f435.png": assetsGemojiImagesEmojiUnicode1f435Png,
	"assets/gemoji/images/emoji/unicode/1f436.png": assetsGemojiImagesEmojiUnicode1f436Png,
	"assets/gemoji/images/emoji/unicode/1f437.png": assetsGemojiImagesEmojiUnicode1f437Png,
	"assets/gemoji/images/emoji/unicode/1f438.png": assetsGemojiImagesEmojiUnicode1f438Png,
	"assets/gemoji/images/emoji/unicode/1f439.png": assetsGemojiImagesEmojiUnicode1f439Png,
	"assets/gemoji/images/emoji/unicode/1f43a.png": assetsGemojiImagesEmojiUnicode1f43aPng,
	"assets/gemoji/images/emoji/unicode/1f43b.png": assetsGemojiImagesEmojiUnicode1f43bPng,
	"assets/gemoji/images/emoji/unicode/1f43c.png": assetsGemojiImagesEmojiUnicode1f43cPng,
	"assets/gemoji/images/emoji/unicode/1f43d.png": assetsGemojiImagesEmojiUnicode1f43dPng,
	"assets/gemoji/images/emoji/unicode/1f43e.png": assetsGemojiImagesEmojiUnicode1f43ePng,
	"assets/gemoji/images/emoji/unicode/1f440.png": assetsGemojiImagesEmojiUnicode1f440Png,
	"assets/gemoji/images/emoji/unicode/1f442.png": assetsGemojiImagesEmojiUnicode1f442Png,
	"assets/gemoji/images/emoji/unicode/1f443.png": assetsGemojiImagesEmojiUnicode1f443Png,
	"assets/gemoji/images/emoji/unicode/1f444.png": assetsGemojiImagesEmojiUnicode1f444Png,
	"assets/gemoji/images/emoji/unicode/1f445.png": assetsGemojiImagesEmojiUnicode1f445Png,
	"assets/gemoji/images/emoji/unicode/1f446.png": assetsGemojiImagesEmojiUnicode1f446Png,
	"assets/gemoji/images/emoji/unicode/1f447.png": assetsGemojiImagesEmojiUnicode1f447Png,
	"assets/gemoji/images/emoji/unicode/1f448.png": assetsGemojiImagesEmojiUnicode1f448Png,
	"assets/gemoji/images/emoji/unicode/1f449.png": assetsGemojiImagesEmojiUnicode1f449Png,
	"assets/gemoji/images/emoji/unicode/1f44a.png": assetsGemojiImagesEmojiUnicode1f44aPng,
	"assets/gemoji/images/emoji/unicode/1f44b.png": assetsGemojiImagesEmojiUnicode1f44bPng,
	"assets/gemoji/images/emoji/unicode/1f44c.png": assetsGemojiImagesEmojiUnicode1f44cPng,
	"assets/gemoji/images/emoji/unicode/1f44d.png": assetsGemojiImagesEmojiUnicode1f44dPng,
	"assets/gemoji/images/emoji/unicode/1f44e.png": assetsGemojiImagesEmojiUnicode1f44ePng,
	"assets/gemoji/images/emoji/unicode/1f44f.png": assetsGemojiImagesEmojiUnicode1f44fPng,
	"assets/gemoji/images/emoji/unicode/1f450.png": assetsGemojiImagesEmojiUnicode1f450Png,
	"assets/gemoji/images/emoji/unicode/1f451.png": assetsGemojiImagesEmojiUnicode1f451Png,
	"assets/gemoji/images/emoji/unicode/1f452.png": assetsGemojiImagesEmojiUnicode1f452Png,
	"assets/gemoji/images/emoji/unicode/1f453.png": assetsGemojiImagesEmojiUnicode1f453Png,
	"assets/gemoji/images/emoji/unicode/1f454.png": assetsGemojiImagesEmojiUnicode1f454Png,
	"assets/gemoji/images/emoji/unicode/1f455.png": assetsGemojiImagesEmojiUnicode1f455Png,
	"assets/gemoji/images/emoji/unicode/1f456.png": assetsGemojiImagesEmojiUnicode1f456Png,
	"assets/gemoji/images/emoji/unicode/1f457.png": assetsGemojiImagesEmojiUnicode1f457Png,
	"assets/gemoji/images/emoji/unicode/1f458.png": assetsGemojiImagesEmojiUnicode1f458Png,
	"assets/gemoji/images/emoji/unicode/1f459.png": assetsGemojiImagesEmojiUnicode1f459Png,
	"assets/gemoji/images/emoji/unicode/1f45a.png": assetsGemojiImagesEmojiUnicode1f45aPng,
	"assets/gemoji/images/emoji/unicode/1f45b.png": assetsGemojiImagesEmojiUnicode1f45bPng,
	"assets/gemoji/images/emoji/unicode/1f45c.png": assetsGemojiImagesEmojiUnicode1f45cPng,
	"assets/gemoji/images/emoji/unicode/1f45d.png": assetsGemojiImagesEmojiUnicode1f45dPng,
	"assets/gemoji/images/emoji/unicode/1f45e.png": assetsGemojiImagesEmojiUnicode1f45ePng,
	"assets/gemoji/images/emoji/unicode/1f45f.png": assetsGemojiImagesEmojiUnicode1f45fPng,
	"assets/gemoji/images/emoji/unicode/1f460.png": assetsGemojiImagesEmojiUnicode1f460Png,
	"assets/gemoji/images/emoji/unicode/1f461.png": assetsGemojiImagesEmojiUnicode1f461Png,
	"assets/gemoji/images/emoji/unicode/1f462.png": assetsGemojiImagesEmojiUnicode1f462Png,
	"assets/gemoji/images/emoji/unicode/1f463.png": assetsGemojiImagesEmojiUnicode1f463Png,
	"assets/gemoji/images/emoji/unicode/1f464.png": assetsGemojiImagesEmojiUnicode1f464Png,
	"assets/gemoji/images/emoji/unicode/1f465.png": assetsGemojiImagesEmojiUnicode1f465Png,
	"assets/gemoji/images/emoji/unicode/1f466.png": assetsGemojiImagesEmojiUnicode1f466Png,
	"assets/gemoji/images/emoji/unicode/1f467.png": assetsGemojiImagesEmojiUnicode1f467Png,
	"assets/gemoji/images/emoji/unicode/1f468.png": assetsGemojiImagesEmojiUnicode1f468Png,
	"assets/gemoji/images/emoji/unicode/1f469.png": assetsGemojiImagesEmojiUnicode1f469Png,
	"assets/gemoji/images/emoji/unicode/1f46a.png": assetsGemojiImagesEmojiUnicode1f46aPng,
	"assets/gemoji/images/emoji/unicode/1f46b.png": assetsGemojiImagesEmojiUnicode1f46bPng,
	"assets/gemoji/images/emoji/unicode/1f46c.png": assetsGemojiImagesEmojiUnicode1f46cPng,
	"assets/gemoji/images/emoji/unicode/1f46d.png": assetsGemojiImagesEmojiUnicode1f46dPng,
	"assets/gemoji/images/emoji/unicode/1f46e.png": assetsGemojiImagesEmojiUnicode1f46ePng,
	"assets/gemoji/images/emoji/unicode/1f46f.png": assetsGemojiImagesEmojiUnicode1f46fPng,
	"assets/gemoji/images/emoji/unicode/1f470.png": assetsGemojiImagesEmojiUnicode1f470Png,
	"assets/gemoji/images/emoji/unicode/1f471.png": assetsGemojiImagesEmojiUnicode1f471Png,
	"assets/gemoji/images/emoji/unicode/1f472.png": assetsGemojiImagesEmojiUnicode1f472Png,
	"assets/gemoji/images/emoji/unicode/1f473.png": assetsGemojiImagesEmojiUnicode1f473Png,
	"assets/gemoji/images/emoji/unicode/1f474.png": assetsGemojiImagesEmojiUnicode1f474Png,
	"assets/gemoji/images/emoji/unicode/1f475.png": assetsGemojiImagesEmojiUnicode1f475Png,
	"assets/gemoji/images/emoji/unicode/1f476.png": assetsGemojiImagesEmojiUnicode1f476Png,
	"assets/gemoji/images/emoji/unicode/1f477.png": assetsGemojiImagesEmojiUnicode1f477Png,
	"assets/gemoji/images/emoji/unicode/1f478.png": assetsGemojiImagesEmojiUnicode1f478Png,
	"assets/gemoji/images/emoji/unicode/1f479.png": assetsGemojiImagesEmojiUnicode1f479Png,
	"assets/gemoji/images/emoji/unicode/1f47a.png": assetsGemojiImagesEmojiUnicode1f47aPng,
	"assets/gemoji/images/emoji/unicode/1f47b.png": assetsGemojiImagesEmojiUnicode1f47bPng,
	"assets/gemoji/images/emoji/unicode/1f47c.png": assetsGemojiImagesEmojiUnicode1f47cPng,
	"assets/gemoji/images/emoji/unicode/1f47d.png": assetsGemojiImagesEmojiUnicode1f47dPng,
	"assets/gemoji/images/emoji/unicode/1f47e.png": assetsGemojiImagesEmojiUnicode1f47ePng,
	"assets/gemoji/images/emoji/unicode/1f47f.png": assetsGemojiImagesEmojiUnicode1f47fPng,
	"assets/gemoji/images/emoji/unicode/1f480.png": assetsGemojiImagesEmojiUnicode1f480Png,
	"assets/gemoji/images/emoji/unicode/1f481.png": assetsGemojiImagesEmojiUnicode1f481Png,
	"assets/gemoji/images/emoji/unicode/1f482.png": assetsGemojiImagesEmojiUnicode1f482Png,
	"assets/gemoji/images/emoji/unicode/1f483.png": assetsGemojiImagesEmojiUnicode1f483Png,
	"assets/gemoji/images/emoji/unicode/1f484.png": assetsGemojiImagesEmojiUnicode1f484Png,
	"assets/gemoji/images/emoji/unicode/1f485.png": assetsGemojiImagesEmojiUnicode1f485Png,
	"assets/gemoji/images/emoji/unicode/1f486.png": assetsGemojiImagesEmojiUnicode1f486Png,
	"assets/gemoji/images/emoji/unicode/1f487.png": assetsGemojiImagesEmojiUnicode1f487Png,
	"assets/gemoji/images/emoji/unicode/1f488.png": assetsGemojiImagesEmojiUnicode1f488Png,
	"assets/gemoji/images/emoji/unicode/1f489.png": assetsGemojiImagesEmojiUnicode1f489Png,
	"assets/gemoji/images/emoji/unicode/1f48a.png": assetsGemojiImagesEmojiUnicode1f48aPng,
	"assets/gemoji/images/emoji/unicode/1f48b.png": assetsGemojiImagesEmojiUnicode1f48bPng,
	"assets/gemoji/images/emoji/unicode/1f48c.png": assetsGemojiImagesEmojiUnicode1f48cPng,
	"assets/gemoji/images/emoji/unicode/1f48d.png": assetsGemojiImagesEmojiUnicode1f48dPng,
	"assets/gemoji/images/emoji/unicode/1f48e.png": assetsGemojiImagesEmojiUnicode1f48ePng,
	"assets/gemoji/images/emoji/unicode/1f48f.png": assetsGemojiImagesEmojiUnicode1f48fPng,
	"assets/gemoji/images/emoji/unicode/1f490.png": assetsGemojiImagesEmojiUnicode1f490Png,
	"assets/gemoji/images/emoji/unicode/1f491.png": assetsGemojiImagesEmojiUnicode1f491Png,
	"assets/gemoji/images/emoji/unicode/1f492.png": assetsGemojiImagesEmojiUnicode1f492Png,
	"assets/gemoji/images/emoji/unicode/1f493.png": assetsGemojiImagesEmojiUnicode1f493Png,
	"assets/gemoji/images/emoji/unicode/1f494.png": assetsGemojiImagesEmojiUnicode1f494Png,
	"assets/gemoji/images/emoji/unicode/1f495.png": assetsGemojiImagesEmojiUnicode1f495Png,
	"assets/gemoji/images/emoji/unicode/1f496.png": assetsGemojiImagesEmojiUnicode1f496Png,
	"assets/gemoji/images/emoji/unicode/1f497.png": assetsGemojiImagesEmojiUnicode1f497Png,
	"assets/gemoji/images/emoji/unicode/1f498.png": assetsGemojiImagesEmojiUnicode1f498Png,
	"assets/gemoji/images/emoji/unicode/1f499.png": assetsGemojiImagesEmojiUnicode1f499Png,
	"assets/gemoji/images/emoji/unicode/1f49a.png": assetsGemojiImagesEmojiUnicode1f49aPng,
	"assets/gemoji/images/emoji/unicode/1f49b.png": assetsGemojiImagesEmojiUnicode1f49bPng,
	"assets/gemoji/images/emoji/unicode/1f49c.png": assetsGemojiImagesEmojiUnicode1f49cPng,
	"assets/gemoji/images/emoji/unicode/1f49d.png": assetsGemojiImagesEmojiUnicode1f49dPng,
	"assets/gemoji/images/emoji/unicode/1f49e.png": assetsGemojiImagesEmojiUnicode1f49ePng,
	"assets/gemoji/images/emoji/unicode/1f49f.png": assetsGemojiImagesEmojiUnicode1f49fPng,
	"assets/gemoji/images/emoji/unicode/1f4a0.png": assetsGemojiImagesEmojiUnicode1f4a0Png,
	"assets/gemoji/images/emoji/unicode/1f4a1.png": assetsGemojiImagesEmojiUnicode1f4a1Png,
	"assets/gemoji/images/emoji/unicode/1f4a2.png": assetsGemojiImagesEmojiUnicode1f4a2Png,
	"assets/gemoji/images/emoji/unicode/1f4a3.png": assetsGemojiImagesEmojiUnicode1f4a3Png,
	"assets/gemoji/images/emoji/unicode/1f4a4.png": assetsGemojiImagesEmojiUnicode1f4a4Png,
	"assets/gemoji/images/emoji/unicode/1f4a5.png": assetsGemojiImagesEmojiUnicode1f4a5Png,
	"assets/gemoji/images/emoji/unicode/1f4a6.png": assetsGemojiImagesEmojiUnicode1f4a6Png,
	"assets/gemoji/images/emoji/unicode/1f4a7.png": assetsGemojiImagesEmojiUnicode1f4a7Png,
	"assets/gemoji/images/emoji/unicode/1f4a8.png": assetsGemojiImagesEmojiUnicode1f4a8Png,
	"assets/gemoji/images/emoji/unicode/1f4a9.png": assetsGemojiImagesEmojiUnicode1f4a9Png,
	"assets/gemoji/images/emoji/unicode/1f4aa.png": assetsGemojiImagesEmojiUnicode1f4aaPng,
	"assets/gemoji/images/emoji/unicode/1f4ab.png": assetsGemojiImagesEmojiUnicode1f4abPng,
	"assets/gemoji/images/emoji/unicode/1f4ac.png": assetsGemojiImagesEmojiUnicode1f4acPng,
	"assets/gemoji/images/emoji/unicode/1f4ad.png": assetsGemojiImagesEmojiUnicode1f4adPng,
	"assets/gemoji/images/emoji/unicode/1f4ae.png": assetsGemojiImagesEmojiUnicode1f4aePng,
	"assets/gemoji/images/emoji/unicode/1f4af.png": assetsGemojiImagesEmojiUnicode1f4afPng,
	"assets/gemoji/images/emoji/unicode/1f4b0.png": assetsGemojiImagesEmojiUnicode1f4b0Png,
	"assets/gemoji/images/emoji/unicode/1f4b1.png": assetsGemojiImagesEmojiUnicode1f4b1Png,
	"assets/gemoji/images/emoji/unicode/1f4b2.png": assetsGemojiImagesEmojiUnicode1f4b2Png,
	"assets/gemoji/images/emoji/unicode/1f4b3.png": assetsGemojiImagesEmojiUnicode1f4b3Png,
	"assets/gemoji/images/emoji/unicode/1f4b4.png": assetsGemojiImagesEmojiUnicode1f4b4Png,
	"assets/gemoji/images/emoji/unicode/1f4b5.png": assetsGemojiImagesEmojiUnicode1f4b5Png,
	"assets/gemoji/images/emoji/unicode/1f4b6.png": assetsGemojiImagesEmojiUnicode1f4b6Png,
	"assets/gemoji/images/emoji/unicode/1f4b7.png": assetsGemojiImagesEmojiUnicode1f4b7Png,
	"assets/gemoji/images/emoji/unicode/1f4b8.png": assetsGemojiImagesEmojiUnicode1f4b8Png,
	"assets/gemoji/images/emoji/unicode/1f4b9.png": assetsGemojiImagesEmojiUnicode1f4b9Png,
	"assets/gemoji/images/emoji/unicode/1f4ba.png": assetsGemojiImagesEmojiUnicode1f4baPng,
	"assets/gemoji/images/emoji/unicode/1f4bb.png": assetsGemojiImagesEmojiUnicode1f4bbPng,
	"assets/gemoji/images/emoji/unicode/1f4bc.png": assetsGemojiImagesEmojiUnicode1f4bcPng,
	"assets/gemoji/images/emoji/unicode/1f4bd.png": assetsGemojiImagesEmojiUnicode1f4bdPng,
	"assets/gemoji/images/emoji/unicode/1f4be.png": assetsGemojiImagesEmojiUnicode1f4bePng,
	"assets/gemoji/images/emoji/unicode/1f4bf.png": assetsGemojiImagesEmojiUnicode1f4bfPng,
	"assets/gemoji/images/emoji/unicode/1f4c0.png": assetsGemojiImagesEmojiUnicode1f4c0Png,
	"assets/gemoji/images/emoji/unicode/1f4c1.png": assetsGemojiImagesEmojiUnicode1f4c1Png,
	"assets/gemoji/images/emoji/unicode/1f4c2.png": assetsGemojiImagesEmojiUnicode1f4c2Png,
	"assets/gemoji/images/emoji/unicode/1f4c3.png": assetsGemojiImagesEmojiUnicode1f4c3Png,
	"assets/gemoji/images/emoji/unicode/1f4c4.png": assetsGemojiImagesEmojiUnicode1f4c4Png,
	"assets/gemoji/images/emoji/unicode/1f4c5.png": assetsGemojiImagesEmojiUnicode1f4c5Png,
	"assets/gemoji/images/emoji/unicode/1f4c6.png": assetsGemojiImagesEmojiUnicode1f4c6Png,
	"assets/gemoji/images/emoji/unicode/1f4c7.png": assetsGemojiImagesEmojiUnicode1f4c7Png,
	"assets/gemoji/images/emoji/unicode/1f4c8.png": assetsGemojiImagesEmojiUnicode1f4c8Png,
	"assets/gemoji/images/emoji/unicode/1f4c9.png": assetsGemojiImagesEmojiUnicode1f4c9Png,
	"assets/gemoji/images/emoji/unicode/1f4ca.png": assetsGemojiImagesEmojiUnicode1f4caPng,
	"assets/gemoji/images/emoji/unicode/1f4cb.png": assetsGemojiImagesEmojiUnicode1f4cbPng,
	"assets/gemoji/images/emoji/unicode/1f4cc.png": assetsGemojiImagesEmojiUnicode1f4ccPng,
	"assets/gemoji/images/emoji/unicode/1f4cd.png": assetsGemojiImagesEmojiUnicode1f4cdPng,
	"assets/gemoji/images/emoji/unicode/1f4ce.png": assetsGemojiImagesEmojiUnicode1f4cePng,
	"assets/gemoji/images/emoji/unicode/1f4cf.png": assetsGemojiImagesEmojiUnicode1f4cfPng,
	"assets/gemoji/images/emoji/unicode/1f4d0.png": assetsGemojiImagesEmojiUnicode1f4d0Png,
	"assets/gemoji/images/emoji/unicode/1f4d1.png": assetsGemojiImagesEmojiUnicode1f4d1Png,
	"assets/gemoji/images/emoji/unicode/1f4d2.png": assetsGemojiImagesEmojiUnicode1f4d2Png,
	"assets/gemoji/images/emoji/unicode/1f4d3.png": assetsGemojiImagesEmojiUnicode1f4d3Png,
	"assets/gemoji/images/emoji/unicode/1f4d4.png": assetsGemojiImagesEmojiUnicode1f4d4Png,
	"assets/gemoji/images/emoji/unicode/1f4d5.png": assetsGemojiImagesEmojiUnicode1f4d5Png,
	"assets/gemoji/images/emoji/unicode/1f4d6.png": assetsGemojiImagesEmojiUnicode1f4d6Png,
	"assets/gemoji/images/emoji/unicode/1f4d7.png": assetsGemojiImagesEmojiUnicode1f4d7Png,
	"assets/gemoji/images/emoji/unicode/1f4d8.png": assetsGemojiImagesEmojiUnicode1f4d8Png,
	"assets/gemoji/images/emoji/unicode/1f4d9.png": assetsGemojiImagesEmojiUnicode1f4d9Png,
	"assets/gemoji/images/emoji/unicode/1f4da.png": assetsGemojiImagesEmojiUnicode1f4daPng,
	"assets/gemoji/images/emoji/unicode/1f4db.png": assetsGemojiImagesEmojiUnicode1f4dbPng,
	"assets/gemoji/images/emoji/unicode/1f4dc.png": assetsGemojiImagesEmojiUnicode1f4dcPng,
	"assets/gemoji/images/emoji/unicode/1f4dd.png": assetsGemojiImagesEmojiUnicode1f4ddPng,
	"assets/gemoji/images/emoji/unicode/1f4de.png": assetsGemojiImagesEmojiUnicode1f4dePng,
	"assets/gemoji/images/emoji/unicode/1f4df.png": assetsGemojiImagesEmojiUnicode1f4dfPng,
	"assets/gemoji/images/emoji/unicode/1f4e0.png": assetsGemojiImagesEmojiUnicode1f4e0Png,
	"assets/gemoji/images/emoji/unicode/1f4e1.png": assetsGemojiImagesEmojiUnicode1f4e1Png,
	"assets/gemoji/images/emoji/unicode/1f4e2.png": assetsGemojiImagesEmojiUnicode1f4e2Png,
	"assets/gemoji/images/emoji/unicode/1f4e3.png": assetsGemojiImagesEmojiUnicode1f4e3Png,
	"assets/gemoji/images/emoji/unicode/1f4e4.png": assetsGemojiImagesEmojiUnicode1f4e4Png,
	"assets/gemoji/images/emoji/unicode/1f4e5.png": assetsGemojiImagesEmojiUnicode1f4e5Png,
	"assets/gemoji/images/emoji/unicode/1f4e6.png": assetsGemojiImagesEmojiUnicode1f4e6Png,
	"assets/gemoji/images/emoji/unicode/1f4e7.png": assetsGemojiImagesEmojiUnicode1f4e7Png,
	"assets/gemoji/images/emoji/unicode/1f4e8.png": assetsGemojiImagesEmojiUnicode1f4e8Png,
	"assets/gemoji/images/emoji/unicode/1f4e9.png": assetsGemojiImagesEmojiUnicode1f4e9Png,
	"assets/gemoji/images/emoji/unicode/1f4ea.png": assetsGemojiImagesEmojiUnicode1f4eaPng,
	"assets/gemoji/images/emoji/unicode/1f4eb.png": assetsGemojiImagesEmojiUnicode1f4ebPng,
	"assets/gemoji/images/emoji/unicode/1f4ec.png": assetsGemojiImagesEmojiUnicode1f4ecPng,
	"assets/gemoji/images/emoji/unicode/1f4ed.png": assetsGemojiImagesEmojiUnicode1f4edPng,
	"assets/gemoji/images/emoji/unicode/1f4ee.png": assetsGemojiImagesEmojiUnicode1f4eePng,
	"assets/gemoji/images/emoji/unicode/1f4ef.png": assetsGemojiImagesEmojiUnicode1f4efPng,
	"assets/gemoji/images/emoji/unicode/1f4f0.png": assetsGemojiImagesEmojiUnicode1f4f0Png,
	"assets/gemoji/images/emoji/unicode/1f4f1.png": assetsGemojiImagesEmojiUnicode1f4f1Png,
	"assets/gemoji/images/emoji/unicode/1f4f2.png": assetsGemojiImagesEmojiUnicode1f4f2Png,
	"assets/gemoji/images/emoji/unicode/1f4f3.png": assetsGemojiImagesEmojiUnicode1f4f3Png,
	"assets/gemoji/images/emoji/unicode/1f4f4.png": assetsGemojiImagesEmojiUnicode1f4f4Png,
	"assets/gemoji/images/emoji/unicode/1f4f5.png": assetsGemojiImagesEmojiUnicode1f4f5Png,
	"assets/gemoji/images/emoji/unicode/1f4f6.png": assetsGemojiImagesEmojiUnicode1f4f6Png,
	"assets/gemoji/images/emoji/unicode/1f4f7.png": assetsGemojiImagesEmojiUnicode1f4f7Png,
	"assets/gemoji/images/emoji/unicode/1f4f9.png": assetsGemojiImagesEmojiUnicode1f4f9Png,
	"assets/gemoji/images/emoji/unicode/1f4fa.png": assetsGemojiImagesEmojiUnicode1f4faPng,
	"assets/gemoji/images/emoji/unicode/1f4fb.png": assetsGemojiImagesEmojiUnicode1f4fbPng,
	"assets/gemoji/images/emoji/unicode/1f4fc.png": assetsGemojiImagesEmojiUnicode1f4fcPng,
	"assets/gemoji/images/emoji/unicode/1f500.png": assetsGemojiImagesEmojiUnicode1f500Png,
	"assets/gemoji/images/emoji/unicode/1f501.png": assetsGemojiImagesEmojiUnicode1f501Png,
	"assets/gemoji/images/emoji/unicode/1f502.png": assetsGemojiImagesEmojiUnicode1f502Png,
	"assets/gemoji/images/emoji/unicode/1f503.png": assetsGemojiImagesEmojiUnicode1f503Png,
	"assets/gemoji/images/emoji/unicode/1f504.png": assetsGemojiImagesEmojiUnicode1f504Png,
	"assets/gemoji/images/emoji/unicode/1f505.png": assetsGemojiImagesEmojiUnicode1f505Png,
	"assets/gemoji/images/emoji/unicode/1f506.png": assetsGemojiImagesEmojiUnicode1f506Png,
	"assets/gemoji/images/emoji/unicode/1f507.png": assetsGemojiImagesEmojiUnicode1f507Png,
	"assets/gemoji/images/emoji/unicode/1f508.png": assetsGemojiImagesEmojiUnicode1f508Png,
	"assets/gemoji/images/emoji/unicode/1f509.png": assetsGemojiImagesEmojiUnicode1f509Png,
	"assets/gemoji/images/emoji/unicode/1f50a.png": assetsGemojiImagesEmojiUnicode1f50aPng,
	"assets/gemoji/images/emoji/unicode/1f50b.png": assetsGemojiImagesEmojiUnicode1f50bPng,
	"assets/gemoji/images/emoji/unicode/1f50c.png": assetsGemojiImagesEmojiUnicode1f50cPng,
	"assets/gemoji/images/emoji/unicode/1f50d.png": assetsGemojiImagesEmojiUnicode1f50dPng,
	"assets/gemoji/images/emoji/unicode/1f50e.png": assetsGemojiImagesEmojiUnicode1f50ePng,
	"assets/gemoji/images/emoji/unicode/1f50f.png": assetsGemojiImagesEmojiUnicode1f50fPng,
	"assets/gemoji/images/emoji/unicode/1f510.png": assetsGemojiImagesEmojiUnicode1f510Png,
	"assets/gemoji/images/emoji/unicode/1f511.png": assetsGemojiImagesEmojiUnicode1f511Png,
	"assets/gemoji/images/emoji/unicode/1f512.png": assetsGemojiImagesEmojiUnicode1f512Png,
	"assets/gemoji/images/emoji/unicode/1f513.png": assetsGemojiImagesEmojiUnicode1f513Png,
	"assets/gemoji/images/emoji/unicode/1f514.png": assetsGemojiImagesEmojiUnicode1f514Png,
	"assets/gemoji/images/emoji/unicode/1f515.png": assetsGemojiImagesEmojiUnicode1f515Png,
	"assets/gemoji/images/emoji/unicode/1f516.png": assetsGemojiImagesEmojiUnicode1f516Png,
	"assets/gemoji/images/emoji/unicode/1f517.png": assetsGemojiImagesEmojiUnicode1f517Png,
	"assets/gemoji/images/emoji/unicode/1f518.png": assetsGemojiImagesEmojiUnicode1f518Png,
	"assets/gemoji/images/emoji/unicode/1f519.png": assetsGemojiImagesEmojiUnicode1f519Png,
	"assets/gemoji/images/emoji/unicode/1f51a.png": assetsGemojiImagesEmojiUnicode1f51aPng,
	"assets/gemoji/images/emoji/unicode/1f51b.png": assetsGemojiImagesEmojiUnicode1f51bPng,
	"assets/gemoji/images/emoji/unicode/1f51c.png": assetsGemojiImagesEmojiUnicode1f51cPng,
	"assets/gemoji/images/emoji/unicode/1f51d.png": assetsGemojiImagesEmojiUnicode1f51dPng,
	"assets/gemoji/images/emoji/unicode/1f51e.png": assetsGemojiImagesEmojiUnicode1f51ePng,
	"assets/gemoji/images/emoji/unicode/1f51f.png": assetsGemojiImagesEmojiUnicode1f51fPng,
	"assets/gemoji/images/emoji/unicode/1f520.png": assetsGemojiImagesEmojiUnicode1f520Png,
	"assets/gemoji/images/emoji/unicode/1f521.png": assetsGemojiImagesEmojiUnicode1f521Png,
	"assets/gemoji/images/emoji/unicode/1f522.png": assetsGemojiImagesEmojiUnicode1f522Png,
	"assets/gemoji/images/emoji/unicode/1f523.png": assetsGemojiImagesEmojiUnicode1f523Png,
	"assets/gemoji/images/emoji/unicode/1f524.png": assetsGemojiImagesEmojiUnicode1f524Png,
	"assets/gemoji/images/emoji/unicode/1f525.png": assetsGemojiImagesEmojiUnicode1f525Png,
	"assets/gemoji/images/emoji/unicode/1f526.png": assetsGemojiImagesEmojiUnicode1f526Png,
	"assets/gemoji/images/emoji/unicode/1f527.png": assetsGemojiImagesEmojiUnicode1f527Png,
	"assets/gemoji/images/emoji/unicode/1f528.png": assetsGemojiImagesEmojiUnicode1f528Png,
	"assets/gemoji/images/emoji/unicode/1f529.png": assetsGemojiImagesEmojiUnicode1f529Png,
	"assets/gemoji/images/emoji/unicode/1f52a.png": assetsGemojiImagesEmojiUnicode1f52aPng,
	"assets/gemoji/images/emoji/unicode/1f52b.png": assetsGemojiImagesEmojiUnicode1f52bPng,
	"assets/gemoji/images/emoji/unicode/1f52c.png": assetsGemojiImagesEmojiUnicode1f52cPng,
	"assets/gemoji/images/emoji/unicode/1f52d.png": assetsGemojiImagesEmojiUnicode1f52dPng,
	"assets/gemoji/images/emoji/unicode/1f52e.png": assetsGemojiImagesEmojiUnicode1f52ePng,
	"assets/gemoji/images/emoji/unicode/1f52f.png": assetsGemojiImagesEmojiUnicode1f52fPng,
	"assets/gemoji/images/emoji/unicode/1f530.png": assetsGemojiImagesEmojiUnicode1f530Png,
	"assets/gemoji/images/emoji/unicode/1f531.png": assetsGemojiImagesEmojiUnicode1f531Png,
	"assets/gemoji/images/emoji/unicode/1f532.png": assetsGemojiImagesEmojiUnicode1f532Png,
	"assets/gemoji/images/emoji/unicode/1f533.png": assetsGemojiImagesEmojiUnicode1f533Png,
	"assets/gemoji/images/emoji/unicode/1f534.png": assetsGemojiImagesEmojiUnicode1f534Png,
	"assets/gemoji/images/emoji/unicode/1f535.png": assetsGemojiImagesEmojiUnicode1f535Png,
	"assets/gemoji/images/emoji/unicode/1f536.png": assetsGemojiImagesEmojiUnicode1f536Png,
	"assets/gemoji/images/emoji/unicode/1f537.png": assetsGemojiImagesEmojiUnicode1f537Png,
	"assets/gemoji/images/emoji/unicode/1f538.png": assetsGemojiImagesEmojiUnicode1f538Png,
	"assets/gemoji/images/emoji/unicode/1f539.png": assetsGemojiImagesEmojiUnicode1f539Png,
	"assets/gemoji/images/emoji/unicode/1f53a.png": assetsGemojiImagesEmojiUnicode1f53aPng,
	"assets/gemoji/images/emoji/unicode/1f53b.png": assetsGemojiImagesEmojiUnicode1f53bPng,
	"assets/gemoji/images/emoji/unicode/1f53c.png": assetsGemojiImagesEmojiUnicode1f53cPng,
	"assets/gemoji/images/emoji/unicode/1f53d.png": assetsGemojiImagesEmojiUnicode1f53dPng,
	"assets/gemoji/images/emoji/unicode/1f550.png": assetsGemojiImagesEmojiUnicode1f550Png,
	"assets/gemoji/images/emoji/unicode/1f551.png": assetsGemojiImagesEmojiUnicode1f551Png,
	"assets/gemoji/images/emoji/unicode/1f552.png": assetsGemojiImagesEmojiUnicode1f552Png,
	"assets/gemoji/images/emoji/unicode/1f553.png": assetsGemojiImagesEmojiUnicode1f553Png,
	"assets/gemoji/images/emoji/unicode/1f554.png": assetsGemojiImagesEmojiUnicode1f554Png,
	"assets/gemoji/images/emoji/unicode/1f555.png": assetsGemojiImagesEmojiUnicode1f555Png,
	"assets/gemoji/images/emoji/unicode/1f556.png": assetsGemojiImagesEmojiUnicode1f556Png,
	"assets/gemoji/images/emoji/unicode/1f557.png": assetsGemojiImagesEmojiUnicode1f557Png,
	"assets/gemoji/images/emoji/unicode/1f558.png": assetsGemojiImagesEmojiUnicode1f558Png,
	"assets/gemoji/images/emoji/unicode/1f559.png": assetsGemojiImagesEmojiUnicode1f559Png,
	"assets/gemoji/images/emoji/unicode/1f55a.png": assetsGemojiImagesEmojiUnicode1f55aPng,
	"assets/gemoji/images/emoji/unicode/1f55b.png": assetsGemojiImagesEmojiUnicode1f55bPng,
	"assets/gemoji/images/emoji/unicode/1f55c.png": assetsGemojiImagesEmojiUnicode1f55cPng,
	"assets/gemoji/images/emoji/unicode/1f55d.png": assetsGemojiImagesEmojiUnicode1f55dPng,
	"assets/gemoji/images/emoji/unicode/1f55e.png": assetsGemojiImagesEmojiUnicode1f55ePng,
	"assets/gemoji/images/emoji/unicode/1f55f.png": assetsGemojiImagesEmojiUnicode1f55fPng,
	"assets/gemoji/images/emoji/unicode/1f560.png": assetsGemojiImagesEmojiUnicode1f560Png,
	"assets/gemoji/images/emoji/unicode/1f561.png": assetsGemojiImagesEmojiUnicode1f561Png,
	"assets/gemoji/images/emoji/unicode/1f562.png": assetsGemojiImagesEmojiUnicode1f562Png,
	"assets/gemoji/images/emoji/unicode/1f563.png": assetsGemojiImagesEmojiUnicode1f563Png,
	"assets/gemoji/images/emoji/unicode/1f564.png": assetsGemojiImagesEmojiUnicode1f564Png,
	"assets/gemoji/images/emoji/unicode/1f565.png": assetsGemojiImagesEmojiUnicode1f565Png,
	"assets/gemoji/images/emoji/unicode/1f566.png": assetsGemojiImagesEmojiUnicode1f566Png,
	"assets/gemoji/images/emoji/unicode/1f567.png": assetsGemojiImagesEmojiUnicode1f567Png,
	"assets/gemoji/images/emoji/unicode/1f5fb.png": assetsGemojiImagesEmojiUnicode1f5fbPng,
	"assets/gemoji/images/emoji/unicode/1f5fc.png": assetsGemojiImagesEmojiUnicode1f5fcPng,
	"assets/gemoji/images/emoji/unicode/1f5fd.png": assetsGemojiImagesEmojiUnicode1f5fdPng,
	"assets/gemoji/images/emoji/unicode/1f5fe.png": assetsGemojiImagesEmojiUnicode1f5fePng,
	"assets/gemoji/images/emoji/unicode/1f5ff.png": assetsGemojiImagesEmojiUnicode1f5ffPng,
	"assets/gemoji/images/emoji/unicode/1f600.png": assetsGemojiImagesEmojiUnicode1f600Png,
	"assets/gemoji/images/emoji/unicode/1f601.png": assetsGemojiImagesEmojiUnicode1f601Png,
	"assets/gemoji/images/emoji/unicode/1f602.png": assetsGemojiImagesEmojiUnicode1f602Png,
	"assets/gemoji/images/emoji/unicode/1f603.png": assetsGemojiImagesEmojiUnicode1f603Png,
	"assets/gemoji/images/emoji/unicode/1f604.png": assetsGemojiImagesEmojiUnicode1f604Png,
	"assets/gemoji/images/emoji/unicode/1f605.png": assetsGemojiImagesEmojiUnicode1f605Png,
	"assets/gemoji/images/emoji/unicode/1f606.png": assetsGemojiImagesEmojiUnicode1f606Png,
	"assets/gemoji/images/emoji/unicode/1f607.png": assetsGemojiImagesEmojiUnicode1f607Png,
	"assets/gemoji/images/emoji/unicode/1f608.png": assetsGemojiImagesEmojiUnicode1f608Png,
	"assets/gemoji/images/emoji/unicode/1f609.png": assetsGemojiImagesEmojiUnicode1f609Png,
	"assets/gemoji/images/emoji/unicode/1f60a.png": assetsGemojiImagesEmojiUnicode1f60aPng,
	"assets/gemoji/images/emoji/unicode/1f60b.png": assetsGemojiImagesEmojiUnicode1f60bPng,
	"assets/gemoji/images/emoji/unicode/1f60c.png": assetsGemojiImagesEmojiUnicode1f60cPng,
	"assets/gemoji/images/emoji/unicode/1f60d.png": assetsGemojiImagesEmojiUnicode1f60dPng,
	"assets/gemoji/images/emoji/unicode/1f60e.png": assetsGemojiImagesEmojiUnicode1f60ePng,
	"assets/gemoji/images/emoji/unicode/1f60f.png": assetsGemojiImagesEmojiUnicode1f60fPng,
	"assets/gemoji/images/emoji/unicode/1f610.png": assetsGemojiImagesEmojiUnicode1f610Png,
	"assets/gemoji/images/emoji/unicode/1f611.png": assetsGemojiImagesEmojiUnicode1f611Png,
	"assets/gemoji/images/emoji/unicode/1f612.png": assetsGemojiImagesEmojiUnicode1f612Png,
	"assets/gemoji/images/emoji/unicode/1f613.png": assetsGemojiImagesEmojiUnicode1f613Png,
	"assets/gemoji/images/emoji/unicode/1f614.png": assetsGemojiImagesEmojiUnicode1f614Png,
	"assets/gemoji/images/emoji/unicode/1f615.png": assetsGemojiImagesEmojiUnicode1f615Png,
	"assets/gemoji/images/emoji/unicode/1f616.png": assetsGemojiImagesEmojiUnicode1f616Png,
	"assets/gemoji/images/emoji/unicode/1f617.png": assetsGemojiImagesEmojiUnicode1f617Png,
	"assets/gemoji/images/emoji/unicode/1f618.png": assetsGemojiImagesEmojiUnicode1f618Png,
	"assets/gemoji/images/emoji/unicode/1f619.png": assetsGemojiImagesEmojiUnicode1f619Png,
	"assets/gemoji/images/emoji/unicode/1f61a.png": assetsGemojiImagesEmojiUnicode1f61aPng,
	"assets/gemoji/images/emoji/unicode/1f61b.png": assetsGemojiImagesEmojiUnicode1f61bPng,
	"assets/gemoji/images/emoji/unicode/1f61c.png": assetsGemojiImagesEmojiUnicode1f61cPng,
	"assets/gemoji/images/emoji/unicode/1f61d.png": assetsGemojiImagesEmojiUnicode1f61dPng,
	"assets/gemoji/images/emoji/unicode/1f61e.png": assetsGemojiImagesEmojiUnicode1f61ePng,
	"assets/gemoji/images/emoji/unicode/1f61f.png": assetsGemojiImagesEmojiUnicode1f61fPng,
	"assets/gemoji/images/emoji/unicode/1f620.png": assetsGemojiImagesEmojiUnicode1f620Png,
	"assets/gemoji/images/emoji/unicode/1f621.png": assetsGemojiImagesEmojiUnicode1f621Png,
	"assets/gemoji/images/emoji/unicode/1f622.png": assetsGemojiImagesEmojiUnicode1f622Png,
	"assets/gemoji/images/emoji/unicode/1f623.png": assetsGemojiImagesEmojiUnicode1f623Png,
	"assets/gemoji/images/emoji/unicode/1f624.png": assetsGemojiImagesEmojiUnicode1f624Png,
	"assets/gemoji/images/emoji/unicode/1f625.png": assetsGemojiImagesEmojiUnicode1f625Png,
	"assets/gemoji/images/emoji/unicode/1f626.png": assetsGemojiImagesEmojiUnicode1f626Png,
	"assets/gemoji/images/emoji/unicode/1f627.png": assetsGemojiImagesEmojiUnicode1f627Png,
	"assets/gemoji/images/emoji/unicode/1f628.png": assetsGemojiImagesEmojiUnicode1f628Png,
	"assets/gemoji/images/emoji/unicode/1f629.png": assetsGemojiImagesEmojiUnicode1f629Png,
	"assets/gemoji/images/emoji/unicode/1f62a.png": assetsGemojiImagesEmojiUnicode1f62aPng,
	"assets/gemoji/images/emoji/unicode/1f62b.png": assetsGemojiImagesEmojiUnicode1f62bPng,
	"assets/gemoji/images/emoji/unicode/1f62c.png": assetsGemojiImagesEmojiUnicode1f62cPng,
	"assets/gemoji/images/emoji/unicode/1f62d.png": assetsGemojiImagesEmojiUnicode1f62dPng,
	"assets/gemoji/images/emoji/unicode/1f62e.png": assetsGemojiImagesEmojiUnicode1f62ePng,
	"assets/gemoji/images/emoji/unicode/1f62f.png": assetsGemojiImagesEmojiUnicode1f62fPng,
	"assets/gemoji/images/emoji/unicode/1f630.png": assetsGemojiImagesEmojiUnicode1f630Png,
	"assets/gemoji/images/emoji/unicode/1f631.png": assetsGemojiImagesEmojiUnicode1f631Png,
	"assets/gemoji/images/emoji/unicode/1f632.png": assetsGemojiImagesEmojiUnicode1f632Png,
	"assets/gemoji/images/emoji/unicode/1f633.png": assetsGemojiImagesEmojiUnicode1f633Png,
	"assets/gemoji/images/emoji/unicode/1f634.png": assetsGemojiImagesEmojiUnicode1f634Png,
	"assets/gemoji/images/emoji/unicode/1f635.png": assetsGemojiImagesEmojiUnicode1f635Png,
	"assets/gemoji/images/emoji/unicode/1f636.png": assetsGemojiImagesEmojiUnicode1f636Png,
	"assets/gemoji/images/emoji/unicode/1f637.png": assetsGemojiImagesEmojiUnicode1f637Png,
	"assets/gemoji/images/emoji/unicode/1f638.png": assetsGemojiImagesEmojiUnicode1f638Png,
	"assets/gemoji/images/emoji/unicode/1f639.png": assetsGemojiImagesEmojiUnicode1f639Png,
	"assets/gemoji/images/emoji/unicode/1f63a.png": assetsGemojiImagesEmojiUnicode1f63aPng,
	"assets/gemoji/images/emoji/unicode/1f63b.png": assetsGemojiImagesEmojiUnicode1f63bPng,
	"assets/gemoji/images/emoji/unicode/1f63c.png": assetsGemojiImagesEmojiUnicode1f63cPng,
	"assets/gemoji/images/emoji/unicode/1f63d.png": assetsGemojiImagesEmojiUnicode1f63dPng,
	"assets/gemoji/images/emoji/unicode/1f63e.png": assetsGemojiImagesEmojiUnicode1f63ePng,
	"assets/gemoji/images/emoji/unicode/1f63f.png": assetsGemojiImagesEmojiUnicode1f63fPng,
	"assets/gemoji/images/emoji/unicode/1f640.png": assetsGemojiImagesEmojiUnicode1f640Png,
	"assets/gemoji/images/emoji/unicode/1f645.png": assetsGemojiImagesEmojiUnicode1f645Png,
	"assets/gemoji/images/emoji/unicode/1f646.png": assetsGemojiImagesEmojiUnicode1f646Png,
	"assets/gemoji/images/emoji/unicode/1f647.png": assetsGemojiImagesEmojiUnicode1f647Png,
	"assets/gemoji/images/emoji/unicode/1f648.png": assetsGemojiImagesEmojiUnicode1f648Png,
	"assets/gemoji/images/emoji/unicode/1f649.png": assetsGemojiImagesEmojiUnicode1f649Png,
	"assets/gemoji/images/emoji/unicode/1f64a.png": assetsGemojiImagesEmojiUnicode1f64aPng,
	"assets/gemoji/images/emoji/unicode/1f64b.png": assetsGemojiImagesEmojiUnicode1f64bPng,
	"assets/gemoji/images/emoji/unicode/1f64c.png": assetsGemojiImagesEmojiUnicode1f64cPng,
	"assets/gemoji/images/emoji/unicode/1f64d.png": assetsGemojiImagesEmojiUnicode1f64dPng,
	"assets/gemoji/images/emoji/unicode/1f64e.png": assetsGemojiImagesEmojiUnicode1f64ePng,
	"assets/gemoji/images/emoji/unicode/1f64f.png": assetsGemojiImagesEmojiUnicode1f64fPng,
	"assets/gemoji/images/emoji/unicode/1f680.png": assetsGemojiImagesEmojiUnicode1f680Png,
	"assets/gemoji/images/emoji/unicode/1f681.png": assetsGemojiImagesEmojiUnicode1f681Png,
	"assets/gemoji/images/emoji/unicode/1f682.png": assetsGemojiImagesEmojiUnicode1f682Png,
	"assets/gemoji/images/emoji/unicode/1f683.png": assetsGemojiImagesEmojiUnicode1f683Png,
	"assets/gemoji/images/emoji/unicode/1f684.png": assetsGemojiImagesEmojiUnicode1f684Png,
	"assets/gemoji/images/emoji/unicode/1f685.png": assetsGemojiImagesEmojiUnicode1f685Png,
	"assets/gemoji/images/emoji/unicode/1f686.png": assetsGemojiImagesEmojiUnicode1f686Png,
	"assets/gemoji/images/emoji/unicode/1f687.png": assetsGemojiImagesEmojiUnicode1f687Png,
	"assets/gemoji/images/emoji/unicode/1f688.png": assetsGemojiImagesEmojiUnicode1f688Png,
	"assets/gemoji/images/emoji/unicode/1f689.png": assetsGemojiImagesEmojiUnicode1f689Png,
	"assets/gemoji/images/emoji/unicode/1f68a.png": assetsGemojiImagesEmojiUnicode1f68aPng,
	"assets/gemoji/images/emoji/unicode/1f68b.png": assetsGemojiImagesEmojiUnicode1f68bPng,
	"assets/gemoji/images/emoji/unicode/1f68c.png": assetsGemojiImagesEmojiUnicode1f68cPng,
	"assets/gemoji/images/emoji/unicode/1f68d.png": assetsGemojiImagesEmojiUnicode1f68dPng,
	"assets/gemoji/images/emoji/unicode/1f68e.png": assetsGemojiImagesEmojiUnicode1f68ePng,
	"assets/gemoji/images/emoji/unicode/1f68f.png": assetsGemojiImagesEmojiUnicode1f68fPng,
	"assets/gemoji/images/emoji/unicode/1f690.png": assetsGemojiImagesEmojiUnicode1f690Png,
	"assets/gemoji/images/emoji/unicode/1f691.png": assetsGemojiImagesEmojiUnicode1f691Png,
	"assets/gemoji/images/emoji/unicode/1f692.png": assetsGemojiImagesEmojiUnicode1f692Png,
	"assets/gemoji/images/emoji/unicode/1f693.png": assetsGemojiImagesEmojiUnicode1f693Png,
	"assets/gemoji/images/emoji/unicode/1f694.png": assetsGemojiImagesEmojiUnicode1f694Png,
	"assets/gemoji/images/emoji/unicode/1f695.png": assetsGemojiImagesEmojiUnicode1f695Png,
	"assets/gemoji/images/emoji/unicode/1f696.png": assetsGemojiImagesEmojiUnicode1f696Png,
	"assets/gemoji/images/emoji/unicode/1f697.png": assetsGemojiImagesEmojiUnicode1f697Png,
	"assets/gemoji/images/emoji/unicode/1f698.png": assetsGemojiImagesEmojiUnicode1f698Png,
	"assets/gemoji/images/emoji/unicode/1f699.png": assetsGemojiImagesEmojiUnicode1f699Png,
	"assets/gemoji/images/emoji/unicode/1f69a.png": assetsGemojiImagesEmojiUnicode1f69aPng,
	"assets/gemoji/images/emoji/unicode/1f69b.png": assetsGemojiImagesEmojiUnicode1f69bPng,
	"assets/gemoji/images/emoji/unicode/1f69c.png": assetsGemojiImagesEmojiUnicode1f69cPng,
	"assets/gemoji/images/emoji/unicode/1f69d.png": assetsGemojiImagesEmojiUnicode1f69dPng,
	"assets/gemoji/images/emoji/unicode/1f69e.png": assetsGemojiImagesEmojiUnicode1f69ePng,
	"assets/gemoji/images/emoji/unicode/1f69f.png": assetsGemojiImagesEmojiUnicode1f69fPng,
	"assets/gemoji/images/emoji/unicode/1f6a0.png": assetsGemojiImagesEmojiUnicode1f6a0Png,
	"assets/gemoji/images/emoji/unicode/1f6a1.png": assetsGemojiImagesEmojiUnicode1f6a1Png,
	"assets/gemoji/images/emoji/unicode/1f6a2.png": assetsGemojiImagesEmojiUnicode1f6a2Png,
	"assets/gemoji/images/emoji/unicode/1f6a3.png": assetsGemojiImagesEmojiUnicode1f6a3Png,
	"assets/gemoji/images/emoji/unicode/1f6a4.png": assetsGemojiImagesEmojiUnicode1f6a4Png,
	"assets/gemoji/images/emoji/unicode/1f6a5.png": assetsGemojiImagesEmojiUnicode1f6a5Png,
	"assets/gemoji/images/emoji/unicode/1f6a6.png": assetsGemojiImagesEmojiUnicode1f6a6Png,
	"assets/gemoji/images/emoji/unicode/1f6a7.png": assetsGemojiImagesEmojiUnicode1f6a7Png,
	"assets/gemoji/images/emoji/unicode/1f6a8.png": assetsGemojiImagesEmojiUnicode1f6a8Png,
	"assets/gemoji/images/emoji/unicode/1f6a9.png": assetsGemojiImagesEmojiUnicode1f6a9Png,
	"assets/gemoji/images/emoji/unicode/1f6aa.png": assetsGemojiImagesEmojiUnicode1f6aaPng,
	"assets/gemoji/images/emoji/unicode/1f6ab.png": assetsGemojiImagesEmojiUnicode1f6abPng,
	"assets/gemoji/images/emoji/unicode/1f6ac.png": assetsGemojiImagesEmojiUnicode1f6acPng,
	"assets/gemoji/images/emoji/unicode/1f6ad.png": assetsGemojiImagesEmojiUnicode1f6adPng,
	"assets/gemoji/images/emoji/unicode/1f6ae.png": assetsGemojiImagesEmojiUnicode1f6aePng,
	"assets/gemoji/images/emoji/unicode/1f6af.png": assetsGemojiImagesEmojiUnicode1f6afPng,
	"assets/gemoji/images/emoji/unicode/1f6b0.png": assetsGemojiImagesEmojiUnicode1f6b0Png,
	"assets/gemoji/images/emoji/unicode/1f6b1.png": assetsGemojiImagesEmojiUnicode1f6b1Png,
	"assets/gemoji/images/emoji/unicode/1f6b2.png": assetsGemojiImagesEmojiUnicode1f6b2Png,
	"assets/gemoji/images/emoji/unicode/1f6b3.png": assetsGemojiImagesEmojiUnicode1f6b3Png,
	"assets/gemoji/images/emoji/unicode/1f6b4.png": assetsGemojiImagesEmojiUnicode1f6b4Png,
	"assets/gemoji/images/emoji/unicode/1f6b5.png": assetsGemojiImagesEmojiUnicode1f6b5Png,
	"assets/gemoji/images/emoji/unicode/1f6b6.png": assetsGemojiImagesEmojiUnicode1f6b6Png,
	"assets/gemoji/images/emoji/unicode/1f6b7.png": assetsGemojiImagesEmojiUnicode1f6b7Png,
	"assets/gemoji/images/emoji/unicode/1f6b8.png": assetsGemojiImagesEmojiUnicode1f6b8Png,
	"assets/gemoji/images/emoji/unicode/1f6b9.png": assetsGemojiImagesEmojiUnicode1f6b9Png,
	"assets/gemoji/images/emoji/unicode/1f6ba.png": assetsGemojiImagesEmojiUnicode1f6baPng,
	"assets/gemoji/images/emoji/unicode/1f6bb.png": assetsGemojiImagesEmojiUnicode1f6bbPng,
	"assets/gemoji/images/emoji/unicode/1f6bc.png": assetsGemojiImagesEmojiUnicode1f6bcPng,
	"assets/gemoji/images/emoji/unicode/1f6bd.png": assetsGemojiImagesEmojiUnicode1f6bdPng,
	"assets/gemoji/images/emoji/unicode/1f6be.png": assetsGemojiImagesEmojiUnicode1f6bePng,
	"assets/gemoji/images/emoji/unicode/1f6bf.png": assetsGemojiImagesEmojiUnicode1f6bfPng,
	"assets/gemoji/images/emoji/unicode/1f6c0.png": assetsGemojiImagesEmojiUnicode1f6c0Png,
	"assets/gemoji/images/emoji/unicode/1f6c1.png": assetsGemojiImagesEmojiUnicode1f6c1Png,
	"assets/gemoji/images/emoji/unicode/1f6c2.png": assetsGemojiImagesEmojiUnicode1f6c2Png,
	"assets/gemoji/images/emoji/unicode/1f6c3.png": assetsGemojiImagesEmojiUnicode1f6c3Png,
	"assets/gemoji/images/emoji/unicode/1f6c4.png": assetsGemojiImagesEmojiUnicode1f6c4Png,
	"assets/gemoji/images/emoji/unicode/1f6c5.png": assetsGemojiImagesEmojiUnicode1f6c5Png,
	"assets/gemoji/images/emoji/unicode/203c.png": assetsGemojiImagesEmojiUnicode203cPng,
	"assets/gemoji/images/emoji/unicode/2049.png": assetsGemojiImagesEmojiUnicode2049Png,
	"assets/gemoji/images/emoji/unicode/2122.png": assetsGemojiImagesEmojiUnicode2122Png,
	"assets/gemoji/images/emoji/unicode/2139.png": assetsGemojiImagesEmojiUnicode2139Png,
	"assets/gemoji/images/emoji/unicode/2194.png": assetsGemojiImagesEmojiUnicode2194Png,
	"assets/gemoji/images/emoji/unicode/2195.png": assetsGemojiImagesEmojiUnicode2195Png,
	"assets/gemoji/images/emoji/unicode/2196.png": assetsGemojiImagesEmojiUnicode2196Png,
	"assets/gemoji/images/emoji/unicode/2197.png": assetsGemojiImagesEmojiUnicode2197Png,
	"assets/gemoji/images/emoji/unicode/2198.png": assetsGemojiImagesEmojiUnicode2198Png,
	"assets/gemoji/images/emoji/unicode/2199.png": assetsGemojiImagesEmojiUnicode2199Png,
	"assets/gemoji/images/emoji/unicode/21a9.png": assetsGemojiImagesEmojiUnicode21a9Png,
	"assets/gemoji/images/emoji/unicode/21aa.png": assetsGemojiImagesEmojiUnicode21aaPng,
	"assets/gemoji/images/emoji/unicode/231a.png": assetsGemojiImagesEmojiUnicode231aPng,
	"assets/gemoji/images/emoji/unicode/231b.png": assetsGemojiImagesEmojiUnicode231bPng,
	"assets/gemoji/images/emoji/unicode/23e9.png": assetsGemojiImagesEmojiUnicode23e9Png,
	"assets/gemoji/images/emoji/unicode/23ea.png": assetsGemojiImagesEmojiUnicode23eaPng,
	"assets/gemoji/images/emoji/unicode/23eb.png": assetsGemojiImagesEmojiUnicode23ebPng,
	"assets/gemoji/images/emoji/unicode/23ec.png": assetsGemojiImagesEmojiUnicode23ecPng,
	"assets/gemoji/images/emoji/unicode/23f0.png": assetsGemojiImagesEmojiUnicode23f0Png,
	"assets/gemoji/images/emoji/unicode/23f3.png": assetsGemojiImagesEmojiUnicode23f3Png,
	"assets/gemoji/images/emoji/unicode/24c2.png": assetsGemojiImagesEmojiUnicode24c2Png,
	"assets/gemoji/images/emoji/unicode/25aa.png": assetsGemojiImagesEmojiUnicode25aaPng,
	"assets/gemoji/images/emoji/unicode/25ab.png": assetsGemojiImagesEmojiUnicode25abPng,
	"assets/gemoji/images/emoji/unicode/25b6.png": assetsGemojiImagesEmojiUnicode25b6Png,
	"assets/gemoji/images/emoji/unicode/25c0.png": assetsGemojiImagesEmojiUnicode25c0Png,
	"assets/gemoji/images/emoji/unicode/25fb.png": assetsGemojiImagesEmojiUnicode25fbPng,
	"assets/gemoji/images/emoji/unicode/25fc.png": assetsGemojiImagesEmojiUnicode25fcPng,
	"assets/gemoji/images/emoji/unicode/25fd.png": assetsGemojiImagesEmojiUnicode25fdPng,
	"assets/gemoji/images/emoji/unicode/25fe.png": assetsGemojiImagesEmojiUnicode25fePng,
	"assets/gemoji/images/emoji/unicode/2600.png": assetsGemojiImagesEmojiUnicode2600Png,
	"assets/gemoji/images/emoji/unicode/2601.png": assetsGemojiImagesEmojiUnicode2601Png,
	"assets/gemoji/images/emoji/unicode/260e.png": assetsGemojiImagesEmojiUnicode260ePng,
	"assets/gemoji/images/emoji/unicode/2611.png": assetsGemojiImagesEmojiUnicode2611Png,
	"assets/gemoji/images/emoji/unicode/2614.png": assetsGemojiImagesEmojiUnicode2614Png,
	"assets/gemoji/images/emoji/unicode/2615.png": assetsGemojiImagesEmojiUnicode2615Png,
	"assets/gemoji/images/emoji/unicode/261d.png": assetsGemojiImagesEmojiUnicode261dPng,
	"assets/gemoji/images/emoji/unicode/263a.png": assetsGemojiImagesEmojiUnicode263aPng,
	"assets/gemoji/images/emoji/unicode/2648.png": assetsGemojiImagesEmojiUnicode2648Png,
	"assets/gemoji/images/emoji/unicode/2649.png": assetsGemojiImagesEmojiUnicode2649Png,
	"assets/gemoji/images/emoji/unicode/264a.png": assetsGemojiImagesEmojiUnicode264aPng,
	"assets/gemoji/images/emoji/unicode/264b.png": assetsGemojiImagesEmojiUnicode264bPng,
	"assets/gemoji/images/emoji/unicode/264c.png": assetsGemojiImagesEmojiUnicode264cPng,
	"assets/gemoji/images/emoji/unicode/264d.png": assetsGemojiImagesEmojiUnicode264dPng,
	"assets/gemoji/images/emoji/unicode/264e.png": assetsGemojiImagesEmojiUnicode264ePng,
	"assets/gemoji/images/emoji/unicode/264f.png": assetsGemojiImagesEmojiUnicode264fPng,
	"assets/gemoji/images/emoji/unicode/2650.png": assetsGemojiImagesEmojiUnicode2650Png,
	"assets/gemoji/images/emoji/unicode/2651.png": assetsGemojiImagesEmojiUnicode2651Png,
	"assets/gemoji/images/emoji/unicode/2652.png": assetsGemojiImagesEmojiUnicode2652Png,
	"assets/gemoji/images/emoji/unicode/2653.png": assetsGemojiImagesEmojiUnicode2653Png,
	"assets/gemoji/images/emoji/unicode/2660.png": assetsGemojiImagesEmojiUnicode2660Png,
	"assets/gemoji/images/emoji/unicode/2663.png": assetsGemojiImagesEmojiUnicode2663Png,
	"assets/gemoji/images/emoji/unicode/2665.png": assetsGemojiImagesEmojiUnicode2665Png,
	"assets/gemoji/images/emoji/unicode/2666.png": assetsGemojiImagesEmojiUnicode2666Png,
	"assets/gemoji/images/emoji/unicode/2668.png": assetsGemojiImagesEmojiUnicode2668Png,
	"assets/gemoji/images/emoji/unicode/267b.png": assetsGemojiImagesEmojiUnicode267bPng,
	"assets/gemoji/images/emoji/unicode/267f.png": assetsGemojiImagesEmojiUnicode267fPng,
	"assets/gemoji/images/emoji/unicode/2693.png": assetsGemojiImagesEmojiUnicode2693Png,
	"assets/gemoji/images/emoji/unicode/26a0.png": assetsGemojiImagesEmojiUnicode26a0Png,
	"assets/gemoji/images/emoji/unicode/26a1.png": assetsGemojiImagesEmojiUnicode26a1Png,
	"assets/gemoji/images/emoji/unicode/26aa.png": assetsGemojiImagesEmojiUnicode26aaPng,
	"assets/gemoji/images/emoji/unicode/26ab.png": assetsGemojiImagesEmojiUnicode26abPng,
	"assets/gemoji/images/emoji/unicode/26bd.png": assetsGemojiImagesEmojiUnicode26bdPng,
	"assets/gemoji/images/emoji/unicode/26be.png": assetsGemojiImagesEmojiUnicode26bePng,
	"assets/gemoji/images/emoji/unicode/26c4.png": assetsGemojiImagesEmojiUnicode26c4Png,
	"assets/gemoji/images/emoji/unicode/26c5.png": assetsGemojiImagesEmojiUnicode26c5Png,
	"assets/gemoji/images/emoji/unicode/26ce.png": assetsGemojiImagesEmojiUnicode26cePng,
	"assets/gemoji/images/emoji/unicode/26d4.png": assetsGemojiImagesEmojiUnicode26d4Png,
	"assets/gemoji/images/emoji/unicode/26ea.png": assetsGemojiImagesEmojiUnicode26eaPng,
	"assets/gemoji/images/emoji/unicode/26f2.png": assetsGemojiImagesEmojiUnicode26f2Png,
	"assets/gemoji/images/emoji/unicode/26f3.png": assetsGemojiImagesEmojiUnicode26f3Png,
	"assets/gemoji/images/emoji/unicode/26f5.png": assetsGemojiImagesEmojiUnicode26f5Png,
	"assets/gemoji/images/emoji/unicode/26fa.png": assetsGemojiImagesEmojiUnicode26faPng,
	"assets/gemoji/images/emoji/unicode/26fd.png": assetsGemojiImagesEmojiUnicode26fdPng,
	"assets/gemoji/images/emoji/unicode/2702.png": assetsGemojiImagesEmojiUnicode2702Png,
	"assets/gemoji/images/emoji/unicode/2705.png": assetsGemojiImagesEmojiUnicode2705Png,
	"assets/gemoji/images/emoji/unicode/2708.png": assetsGemojiImagesEmojiUnicode2708Png,
	"assets/gemoji/images/emoji/unicode/2709.png": assetsGemojiImagesEmojiUnicode2709Png,
	"assets/gemoji/images/emoji/unicode/270a.png": assetsGemojiImagesEmojiUnicode270aPng,
	"assets/gemoji/images/emoji/unicode/270b.png": assetsGemojiImagesEmojiUnicode270bPng,
	"assets/gemoji/images/emoji/unicode/270c.png": assetsGemojiImagesEmojiUnicode270cPng,
	"assets/gemoji/images/emoji/unicode/270f.png": assetsGemojiImagesEmojiUnicode270fPng,
	"assets/gemoji/images/emoji/unicode/2712.png": assetsGemojiImagesEmojiUnicode2712Png,
	"assets/gemoji/images/emoji/unicode/2714.png": assetsGemojiImagesEmojiUnicode2714Png,
	"assets/gemoji/images/emoji/unicode/2716.png": assetsGemojiImagesEmojiUnicode2716Png,
	"assets/gemoji/images/emoji/unicode/2728.png": assetsGemojiImagesEmojiUnicode2728Png,
	"assets/gemoji/images/emoji/unicode/2733.png": assetsGemojiImagesEmojiUnicode2733Png,
	"assets/gemoji/images/emoji/unicode/2734.png": assetsGemojiImagesEmojiUnicode2734Png,
	"assets/gemoji/images/emoji/unicode/2744.png": assetsGemojiImagesEmojiUnicode2744Png,
	"assets/gemoji/images/emoji/unicode/2747.png": assetsGemojiImagesEmojiUnicode2747Png,
	"assets/gemoji/images/emoji/unicode/274c.png": assetsGemojiImagesEmojiUnicode274cPng,
	"assets/gemoji/images/emoji/unicode/274e.png": assetsGemojiImagesEmojiUnicode274ePng,
	"assets/gemoji/images/emoji/unicode/2753.png": assetsGemojiImagesEmojiUnicode2753Png,
	"assets/gemoji/images/emoji/unicode/2754.png": assetsGemojiImagesEmojiUnicode2754Png,
	"assets/gemoji/images/emoji/unicode/2755.png": assetsGemojiImagesEmojiUnicode2755Png,
	"assets/gemoji/images/emoji/unicode/2757.png": assetsGemojiImagesEmojiUnicode2757Png,
	"assets/gemoji/images/emoji/unicode/2764.png": assetsGemojiImagesEmojiUnicode2764Png,
	"assets/gemoji/images/emoji/unicode/2795.png": assetsGemojiImagesEmojiUnicode2795Png,
	"assets/gemoji/images/emoji/unicode/2796.png": assetsGemojiImagesEmojiUnicode2796Png,
	"assets/gemoji/images/emoji/unicode/2797.png": assetsGemojiImagesEmojiUnicode2797Png,
	"assets/gemoji/images/emoji/unicode/27a1.png": assetsGemojiImagesEmojiUnicode27a1Png,
	"assets/gemoji/images/emoji/unicode/27b0.png": assetsGemojiImagesEmojiUnicode27b0Png,
	"assets/gemoji/images/emoji/unicode/27bf.png": assetsGemojiImagesEmojiUnicode27bfPng,
	"assets/gemoji/images/emoji/unicode/2934.png": assetsGemojiImagesEmojiUnicode2934Png,
	"assets/gemoji/images/emoji/unicode/2935.png": assetsGemojiImagesEmojiUnicode2935Png,
	"assets/gemoji/images/emoji/unicode/2b05.png": assetsGemojiImagesEmojiUnicode2b05Png,
	"assets/gemoji/images/emoji/unicode/2b06.png": assetsGemojiImagesEmojiUnicode2b06Png,
	"assets/gemoji/images/emoji/unicode/2b07.png": assetsGemojiImagesEmojiUnicode2b07Png,
	"assets/gemoji/images/emoji/unicode/2b1b.png": assetsGemojiImagesEmojiUnicode2b1bPng,
	"assets/gemoji/images/emoji/unicode/2b1c.png": assetsGemojiImagesEmojiUnicode2b1cPng,
	"assets/gemoji/images/emoji/unicode/2b50.png": assetsGemojiImagesEmojiUnicode2b50Png,
	"assets/gemoji/images/emoji/unicode/2b55.png": assetsGemojiImagesEmojiUnicode2b55Png,
	"assets/gemoji/images/emoji/unicode/3030.png": assetsGemojiImagesEmojiUnicode3030Png,
	"assets/gemoji/images/emoji/unicode/303d.png": assetsGemojiImagesEmojiUnicode303dPng,
	"assets/gemoji/images/emoji/unicode/3297.png": assetsGemojiImagesEmojiUnicode3297Png,
	"assets/gemoji/images/emoji/unicode/3299.png": assetsGemojiImagesEmojiUnicode3299Png,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"gemoji": &bintree{nil, map[string]*bintree{
			"db": &bintree{nil, map[string]*bintree{
				"emoji.json": &bintree{assetsGemojiDbEmojiJson, map[string]*bintree{}},
			}},
			"images": &bintree{nil, map[string]*bintree{
				"emoji": &bintree{nil, map[string]*bintree{
					"basecamp.png": &bintree{assetsGemojiImagesEmojiBasecampPng, map[string]*bintree{}},
					"basecampy.png": &bintree{assetsGemojiImagesEmojiBasecampyPng, map[string]*bintree{}},
					"bowtie.png": &bintree{assetsGemojiImagesEmojiBowtiePng, map[string]*bintree{}},
					"feelsgood.png": &bintree{assetsGemojiImagesEmojiFeelsgoodPng, map[string]*bintree{}},
					"finnadie.png": &bintree{assetsGemojiImagesEmojiFinnadiePng, map[string]*bintree{}},
					"fu.png": &bintree{assetsGemojiImagesEmojiFuPng, map[string]*bintree{}},
					"goberserk.png": &bintree{assetsGemojiImagesEmojiGoberserkPng, map[string]*bintree{}},
					"godmode.png": &bintree{assetsGemojiImagesEmojiGodmodePng, map[string]*bintree{}},
					"hurtrealbad.png": &bintree{assetsGemojiImagesEmojiHurtrealbadPng, map[string]*bintree{}},
					"metal.png": &bintree{assetsGemojiImagesEmojiMetalPng, map[string]*bintree{}},
					"neckbeard.png": &bintree{assetsGemojiImagesEmojiNeckbeardPng, map[string]*bintree{}},
					"octocat.png": &bintree{assetsGemojiImagesEmojiOctocatPng, map[string]*bintree{}},
					"rage1.png": &bintree{assetsGemojiImagesEmojiRage1Png, map[string]*bintree{}},
					"rage2.png": &bintree{assetsGemojiImagesEmojiRage2Png, map[string]*bintree{}},
					"rage3.png": &bintree{assetsGemojiImagesEmojiRage3Png, map[string]*bintree{}},
					"rage4.png": &bintree{assetsGemojiImagesEmojiRage4Png, map[string]*bintree{}},
					"shipit.png": &bintree{assetsGemojiImagesEmojiShipitPng, map[string]*bintree{}},
					"suspect.png": &bintree{assetsGemojiImagesEmojiSuspectPng, map[string]*bintree{}},
					"taco.png": &bintree{assetsGemojiImagesEmojiTacoPng, map[string]*bintree{}},
					"trollface.png": &bintree{assetsGemojiImagesEmojiTrollfacePng, map[string]*bintree{}},
					"unicode": &bintree{nil, map[string]*bintree{
						"0023-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode002320e3Png, map[string]*bintree{}},
						"0030-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003020e3Png, map[string]*bintree{}},
						"0031-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003120e3Png, map[string]*bintree{}},
						"0032-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003220e3Png, map[string]*bintree{}},
						"0033-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003320e3Png, map[string]*bintree{}},
						"0034-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003420e3Png, map[string]*bintree{}},
						"0035-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003520e3Png, map[string]*bintree{}},
						"0036-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003620e3Png, map[string]*bintree{}},
						"0037-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003720e3Png, map[string]*bintree{}},
						"0038-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003820e3Png, map[string]*bintree{}},
						"0039-20e3.png": &bintree{assetsGemojiImagesEmojiUnicode003920e3Png, map[string]*bintree{}},
						"00a9.png": &bintree{assetsGemojiImagesEmojiUnicode00a9Png, map[string]*bintree{}},
						"00ae.png": &bintree{assetsGemojiImagesEmojiUnicode00aePng, map[string]*bintree{}},
						"1f004.png": &bintree{assetsGemojiImagesEmojiUnicode1f004Png, map[string]*bintree{}},
						"1f0cf.png": &bintree{assetsGemojiImagesEmojiUnicode1f0cfPng, map[string]*bintree{}},
						"1f170.png": &bintree{assetsGemojiImagesEmojiUnicode1f170Png, map[string]*bintree{}},
						"1f171.png": &bintree{assetsGemojiImagesEmojiUnicode1f171Png, map[string]*bintree{}},
						"1f17e.png": &bintree{assetsGemojiImagesEmojiUnicode1f17ePng, map[string]*bintree{}},
						"1f17f.png": &bintree{assetsGemojiImagesEmojiUnicode1f17fPng, map[string]*bintree{}},
						"1f18e.png": &bintree{assetsGemojiImagesEmojiUnicode1f18ePng, map[string]*bintree{}},
						"1f191.png": &bintree{assetsGemojiImagesEmojiUnicode1f191Png, map[string]*bintree{}},
						"1f192.png": &bintree{assetsGemojiImagesEmojiUnicode1f192Png, map[string]*bintree{}},
						"1f193.png": &bintree{assetsGemojiImagesEmojiUnicode1f193Png, map[string]*bintree{}},
						"1f194.png": &bintree{assetsGemojiImagesEmojiUnicode1f194Png, map[string]*bintree{}},
						"1f195.png": &bintree{assetsGemojiImagesEmojiUnicode1f195Png, map[string]*bintree{}},
						"1f196.png": &bintree{assetsGemojiImagesEmojiUnicode1f196Png, map[string]*bintree{}},
						"1f197.png": &bintree{assetsGemojiImagesEmojiUnicode1f197Png, map[string]*bintree{}},
						"1f198.png": &bintree{assetsGemojiImagesEmojiUnicode1f198Png, map[string]*bintree{}},
						"1f199.png": &bintree{assetsGemojiImagesEmojiUnicode1f199Png, map[string]*bintree{}},
						"1f19a.png": &bintree{assetsGemojiImagesEmojiUnicode1f19aPng, map[string]*bintree{}},
						"1f1e8-1f1f3.png": &bintree{assetsGemojiImagesEmojiUnicode1f1e81f1f3Png, map[string]*bintree{}},
						"1f1e9-1f1ea.png": &bintree{assetsGemojiImagesEmojiUnicode1f1e91f1eaPng, map[string]*bintree{}},
						"1f1ea-1f1f8.png": &bintree{assetsGemojiImagesEmojiUnicode1f1ea1f1f8Png, map[string]*bintree{}},
						"1f1eb-1f1f7.png": &bintree{assetsGemojiImagesEmojiUnicode1f1eb1f1f7Png, map[string]*bintree{}},
						"1f1ec-1f1e7.png": &bintree{assetsGemojiImagesEmojiUnicode1f1ec1f1e7Png, map[string]*bintree{}},
						"1f1ee-1f1f9.png": &bintree{assetsGemojiImagesEmojiUnicode1f1ee1f1f9Png, map[string]*bintree{}},
						"1f1ef-1f1f5.png": &bintree{assetsGemojiImagesEmojiUnicode1f1ef1f1f5Png, map[string]*bintree{}},
						"1f1f0-1f1f7.png": &bintree{assetsGemojiImagesEmojiUnicode1f1f01f1f7Png, map[string]*bintree{}},
						"1f1f7-1f1fa.png": &bintree{assetsGemojiImagesEmojiUnicode1f1f71f1faPng, map[string]*bintree{}},
						"1f1fa-1f1f8.png": &bintree{assetsGemojiImagesEmojiUnicode1f1fa1f1f8Png, map[string]*bintree{}},
						"1f201.png": &bintree{assetsGemojiImagesEmojiUnicode1f201Png, map[string]*bintree{}},
						"1f202.png": &bintree{assetsGemojiImagesEmojiUnicode1f202Png, map[string]*bintree{}},
						"1f21a.png": &bintree{assetsGemojiImagesEmojiUnicode1f21aPng, map[string]*bintree{}},
						"1f22f.png": &bintree{assetsGemojiImagesEmojiUnicode1f22fPng, map[string]*bintree{}},
						"1f232.png": &bintree{assetsGemojiImagesEmojiUnicode1f232Png, map[string]*bintree{}},
						"1f233.png": &bintree{assetsGemojiImagesEmojiUnicode1f233Png, map[string]*bintree{}},
						"1f234.png": &bintree{assetsGemojiImagesEmojiUnicode1f234Png, map[string]*bintree{}},
						"1f235.png": &bintree{assetsGemojiImagesEmojiUnicode1f235Png, map[string]*bintree{}},
						"1f236.png": &bintree{assetsGemojiImagesEmojiUnicode1f236Png, map[string]*bintree{}},
						"1f237.png": &bintree{assetsGemojiImagesEmojiUnicode1f237Png, map[string]*bintree{}},
						"1f238.png": &bintree{assetsGemojiImagesEmojiUnicode1f238Png, map[string]*bintree{}},
						"1f239.png": &bintree{assetsGemojiImagesEmojiUnicode1f239Png, map[string]*bintree{}},
						"1f23a.png": &bintree{assetsGemojiImagesEmojiUnicode1f23aPng, map[string]*bintree{}},
						"1f250.png": &bintree{assetsGemojiImagesEmojiUnicode1f250Png, map[string]*bintree{}},
						"1f251.png": &bintree{assetsGemojiImagesEmojiUnicode1f251Png, map[string]*bintree{}},
						"1f300.png": &bintree{assetsGemojiImagesEmojiUnicode1f300Png, map[string]*bintree{}},
						"1f301.png": &bintree{assetsGemojiImagesEmojiUnicode1f301Png, map[string]*bintree{}},
						"1f302.png": &bintree{assetsGemojiImagesEmojiUnicode1f302Png, map[string]*bintree{}},
						"1f303.png": &bintree{assetsGemojiImagesEmojiUnicode1f303Png, map[string]*bintree{}},
						"1f304.png": &bintree{assetsGemojiImagesEmojiUnicode1f304Png, map[string]*bintree{}},
						"1f305.png": &bintree{assetsGemojiImagesEmojiUnicode1f305Png, map[string]*bintree{}},
						"1f306.png": &bintree{assetsGemojiImagesEmojiUnicode1f306Png, map[string]*bintree{}},
						"1f307.png": &bintree{assetsGemojiImagesEmojiUnicode1f307Png, map[string]*bintree{}},
						"1f308.png": &bintree{assetsGemojiImagesEmojiUnicode1f308Png, map[string]*bintree{}},
						"1f309.png": &bintree{assetsGemojiImagesEmojiUnicode1f309Png, map[string]*bintree{}},
						"1f30a.png": &bintree{assetsGemojiImagesEmojiUnicode1f30aPng, map[string]*bintree{}},
						"1f30b.png": &bintree{assetsGemojiImagesEmojiUnicode1f30bPng, map[string]*bintree{}},
						"1f30c.png": &bintree{assetsGemojiImagesEmojiUnicode1f30cPng, map[string]*bintree{}},
						"1f30d.png": &bintree{assetsGemojiImagesEmojiUnicode1f30dPng, map[string]*bintree{}},
						"1f30e.png": &bintree{assetsGemojiImagesEmojiUnicode1f30ePng, map[string]*bintree{}},
						"1f30f.png": &bintree{assetsGemojiImagesEmojiUnicode1f30fPng, map[string]*bintree{}},
						"1f310.png": &bintree{assetsGemojiImagesEmojiUnicode1f310Png, map[string]*bintree{}},
						"1f311.png": &bintree{assetsGemojiImagesEmojiUnicode1f311Png, map[string]*bintree{}},
						"1f312.png": &bintree{assetsGemojiImagesEmojiUnicode1f312Png, map[string]*bintree{}},
						"1f313.png": &bintree{assetsGemojiImagesEmojiUnicode1f313Png, map[string]*bintree{}},
						"1f314.png": &bintree{assetsGemojiImagesEmojiUnicode1f314Png, map[string]*bintree{}},
						"1f315.png": &bintree{assetsGemojiImagesEmojiUnicode1f315Png, map[string]*bintree{}},
						"1f316.png": &bintree{assetsGemojiImagesEmojiUnicode1f316Png, map[string]*bintree{}},
						"1f317.png": &bintree{assetsGemojiImagesEmojiUnicode1f317Png, map[string]*bintree{}},
						"1f318.png": &bintree{assetsGemojiImagesEmojiUnicode1f318Png, map[string]*bintree{}},
						"1f319.png": &bintree{assetsGemojiImagesEmojiUnicode1f319Png, map[string]*bintree{}},
						"1f31a.png": &bintree{assetsGemojiImagesEmojiUnicode1f31aPng, map[string]*bintree{}},
						"1f31b.png": &bintree{assetsGemojiImagesEmojiUnicode1f31bPng, map[string]*bintree{}},
						"1f31c.png": &bintree{assetsGemojiImagesEmojiUnicode1f31cPng, map[string]*bintree{}},
						"1f31d.png": &bintree{assetsGemojiImagesEmojiUnicode1f31dPng, map[string]*bintree{}},
						"1f31e.png": &bintree{assetsGemojiImagesEmojiUnicode1f31ePng, map[string]*bintree{}},
						"1f31f.png": &bintree{assetsGemojiImagesEmojiUnicode1f31fPng, map[string]*bintree{}},
						"1f320.png": &bintree{assetsGemojiImagesEmojiUnicode1f320Png, map[string]*bintree{}},
						"1f330.png": &bintree{assetsGemojiImagesEmojiUnicode1f330Png, map[string]*bintree{}},
						"1f331.png": &bintree{assetsGemojiImagesEmojiUnicode1f331Png, map[string]*bintree{}},
						"1f332.png": &bintree{assetsGemojiImagesEmojiUnicode1f332Png, map[string]*bintree{}},
						"1f333.png": &bintree{assetsGemojiImagesEmojiUnicode1f333Png, map[string]*bintree{}},
						"1f334.png": &bintree{assetsGemojiImagesEmojiUnicode1f334Png, map[string]*bintree{}},
						"1f335.png": &bintree{assetsGemojiImagesEmojiUnicode1f335Png, map[string]*bintree{}},
						"1f337.png": &bintree{assetsGemojiImagesEmojiUnicode1f337Png, map[string]*bintree{}},
						"1f338.png": &bintree{assetsGemojiImagesEmojiUnicode1f338Png, map[string]*bintree{}},
						"1f339.png": &bintree{assetsGemojiImagesEmojiUnicode1f339Png, map[string]*bintree{}},
						"1f33a.png": &bintree{assetsGemojiImagesEmojiUnicode1f33aPng, map[string]*bintree{}},
						"1f33b.png": &bintree{assetsGemojiImagesEmojiUnicode1f33bPng, map[string]*bintree{}},
						"1f33c.png": &bintree{assetsGemojiImagesEmojiUnicode1f33cPng, map[string]*bintree{}},
						"1f33d.png": &bintree{assetsGemojiImagesEmojiUnicode1f33dPng, map[string]*bintree{}},
						"1f33e.png": &bintree{assetsGemojiImagesEmojiUnicode1f33ePng, map[string]*bintree{}},
						"1f33f.png": &bintree{assetsGemojiImagesEmojiUnicode1f33fPng, map[string]*bintree{}},
						"1f340.png": &bintree{assetsGemojiImagesEmojiUnicode1f340Png, map[string]*bintree{}},
						"1f341.png": &bintree{assetsGemojiImagesEmojiUnicode1f341Png, map[string]*bintree{}},
						"1f342.png": &bintree{assetsGemojiImagesEmojiUnicode1f342Png, map[string]*bintree{}},
						"1f343.png": &bintree{assetsGemojiImagesEmojiUnicode1f343Png, map[string]*bintree{}},
						"1f344.png": &bintree{assetsGemojiImagesEmojiUnicode1f344Png, map[string]*bintree{}},
						"1f345.png": &bintree{assetsGemojiImagesEmojiUnicode1f345Png, map[string]*bintree{}},
						"1f346.png": &bintree{assetsGemojiImagesEmojiUnicode1f346Png, map[string]*bintree{}},
						"1f347.png": &bintree{assetsGemojiImagesEmojiUnicode1f347Png, map[string]*bintree{}},
						"1f348.png": &bintree{assetsGemojiImagesEmojiUnicode1f348Png, map[string]*bintree{}},
						"1f349.png": &bintree{assetsGemojiImagesEmojiUnicode1f349Png, map[string]*bintree{}},
						"1f34a.png": &bintree{assetsGemojiImagesEmojiUnicode1f34aPng, map[string]*bintree{}},
						"1f34b.png": &bintree{assetsGemojiImagesEmojiUnicode1f34bPng, map[string]*bintree{}},
						"1f34c.png": &bintree{assetsGemojiImagesEmojiUnicode1f34cPng, map[string]*bintree{}},
						"1f34d.png": &bintree{assetsGemojiImagesEmojiUnicode1f34dPng, map[string]*bintree{}},
						"1f34e.png": &bintree{assetsGemojiImagesEmojiUnicode1f34ePng, map[string]*bintree{}},
						"1f34f.png": &bintree{assetsGemojiImagesEmojiUnicode1f34fPng, map[string]*bintree{}},
						"1f350.png": &bintree{assetsGemojiImagesEmojiUnicode1f350Png, map[string]*bintree{}},
						"1f351.png": &bintree{assetsGemojiImagesEmojiUnicode1f351Png, map[string]*bintree{}},
						"1f352.png": &bintree{assetsGemojiImagesEmojiUnicode1f352Png, map[string]*bintree{}},
						"1f353.png": &bintree{assetsGemojiImagesEmojiUnicode1f353Png, map[string]*bintree{}},
						"1f354.png": &bintree{assetsGemojiImagesEmojiUnicode1f354Png, map[string]*bintree{}},
						"1f355.png": &bintree{assetsGemojiImagesEmojiUnicode1f355Png, map[string]*bintree{}},
						"1f356.png": &bintree{assetsGemojiImagesEmojiUnicode1f356Png, map[string]*bintree{}},
						"1f357.png": &bintree{assetsGemojiImagesEmojiUnicode1f357Png, map[string]*bintree{}},
						"1f358.png": &bintree{assetsGemojiImagesEmojiUnicode1f358Png, map[string]*bintree{}},
						"1f359.png": &bintree{assetsGemojiImagesEmojiUnicode1f359Png, map[string]*bintree{}},
						"1f35a.png": &bintree{assetsGemojiImagesEmojiUnicode1f35aPng, map[string]*bintree{}},
						"1f35b.png": &bintree{assetsGemojiImagesEmojiUnicode1f35bPng, map[string]*bintree{}},
						"1f35c.png": &bintree{assetsGemojiImagesEmojiUnicode1f35cPng, map[string]*bintree{}},
						"1f35d.png": &bintree{assetsGemojiImagesEmojiUnicode1f35dPng, map[string]*bintree{}},
						"1f35e.png": &bintree{assetsGemojiImagesEmojiUnicode1f35ePng, map[string]*bintree{}},
						"1f35f.png": &bintree{assetsGemojiImagesEmojiUnicode1f35fPng, map[string]*bintree{}},
						"1f360.png": &bintree{assetsGemojiImagesEmojiUnicode1f360Png, map[string]*bintree{}},
						"1f361.png": &bintree{assetsGemojiImagesEmojiUnicode1f361Png, map[string]*bintree{}},
						"1f362.png": &bintree{assetsGemojiImagesEmojiUnicode1f362Png, map[string]*bintree{}},
						"1f363.png": &bintree{assetsGemojiImagesEmojiUnicode1f363Png, map[string]*bintree{}},
						"1f364.png": &bintree{assetsGemojiImagesEmojiUnicode1f364Png, map[string]*bintree{}},
						"1f365.png": &bintree{assetsGemojiImagesEmojiUnicode1f365Png, map[string]*bintree{}},
						"1f366.png": &bintree{assetsGemojiImagesEmojiUnicode1f366Png, map[string]*bintree{}},
						"1f367.png": &bintree{assetsGemojiImagesEmojiUnicode1f367Png, map[string]*bintree{}},
						"1f368.png": &bintree{assetsGemojiImagesEmojiUnicode1f368Png, map[string]*bintree{}},
						"1f369.png": &bintree{assetsGemojiImagesEmojiUnicode1f369Png, map[string]*bintree{}},
						"1f36a.png": &bintree{assetsGemojiImagesEmojiUnicode1f36aPng, map[string]*bintree{}},
						"1f36b.png": &bintree{assetsGemojiImagesEmojiUnicode1f36bPng, map[string]*bintree{}},
						"1f36c.png": &bintree{assetsGemojiImagesEmojiUnicode1f36cPng, map[string]*bintree{}},
						"1f36d.png": &bintree{assetsGemojiImagesEmojiUnicode1f36dPng, map[string]*bintree{}},
						"1f36e.png": &bintree{assetsGemojiImagesEmojiUnicode1f36ePng, map[string]*bintree{}},
						"1f36f.png": &bintree{assetsGemojiImagesEmojiUnicode1f36fPng, map[string]*bintree{}},
						"1f370.png": &bintree{assetsGemojiImagesEmojiUnicode1f370Png, map[string]*bintree{}},
						"1f371.png": &bintree{assetsGemojiImagesEmojiUnicode1f371Png, map[string]*bintree{}},
						"1f372.png": &bintree{assetsGemojiImagesEmojiUnicode1f372Png, map[string]*bintree{}},
						"1f373.png": &bintree{assetsGemojiImagesEmojiUnicode1f373Png, map[string]*bintree{}},
						"1f374.png": &bintree{assetsGemojiImagesEmojiUnicode1f374Png, map[string]*bintree{}},
						"1f375.png": &bintree{assetsGemojiImagesEmojiUnicode1f375Png, map[string]*bintree{}},
						"1f376.png": &bintree{assetsGemojiImagesEmojiUnicode1f376Png, map[string]*bintree{}},
						"1f377.png": &bintree{assetsGemojiImagesEmojiUnicode1f377Png, map[string]*bintree{}},
						"1f378.png": &bintree{assetsGemojiImagesEmojiUnicode1f378Png, map[string]*bintree{}},
						"1f379.png": &bintree{assetsGemojiImagesEmojiUnicode1f379Png, map[string]*bintree{}},
						"1f37a.png": &bintree{assetsGemojiImagesEmojiUnicode1f37aPng, map[string]*bintree{}},
						"1f37b.png": &bintree{assetsGemojiImagesEmojiUnicode1f37bPng, map[string]*bintree{}},
						"1f37c.png": &bintree{assetsGemojiImagesEmojiUnicode1f37cPng, map[string]*bintree{}},
						"1f380.png": &bintree{assetsGemojiImagesEmojiUnicode1f380Png, map[string]*bintree{}},
						"1f381.png": &bintree{assetsGemojiImagesEmojiUnicode1f381Png, map[string]*bintree{}},
						"1f382.png": &bintree{assetsGemojiImagesEmojiUnicode1f382Png, map[string]*bintree{}},
						"1f383.png": &bintree{assetsGemojiImagesEmojiUnicode1f383Png, map[string]*bintree{}},
						"1f384.png": &bintree{assetsGemojiImagesEmojiUnicode1f384Png, map[string]*bintree{}},
						"1f385.png": &bintree{assetsGemojiImagesEmojiUnicode1f385Png, map[string]*bintree{}},
						"1f386.png": &bintree{assetsGemojiImagesEmojiUnicode1f386Png, map[string]*bintree{}},
						"1f387.png": &bintree{assetsGemojiImagesEmojiUnicode1f387Png, map[string]*bintree{}},
						"1f388.png": &bintree{assetsGemojiImagesEmojiUnicode1f388Png, map[string]*bintree{}},
						"1f389.png": &bintree{assetsGemojiImagesEmojiUnicode1f389Png, map[string]*bintree{}},
						"1f38a.png": &bintree{assetsGemojiImagesEmojiUnicode1f38aPng, map[string]*bintree{}},
						"1f38b.png": &bintree{assetsGemojiImagesEmojiUnicode1f38bPng, map[string]*bintree{}},
						"1f38c.png": &bintree{assetsGemojiImagesEmojiUnicode1f38cPng, map[string]*bintree{}},
						"1f38d.png": &bintree{assetsGemojiImagesEmojiUnicode1f38dPng, map[string]*bintree{}},
						"1f38e.png": &bintree{assetsGemojiImagesEmojiUnicode1f38ePng, map[string]*bintree{}},
						"1f38f.png": &bintree{assetsGemojiImagesEmojiUnicode1f38fPng, map[string]*bintree{}},
						"1f390.png": &bintree{assetsGemojiImagesEmojiUnicode1f390Png, map[string]*bintree{}},
						"1f391.png": &bintree{assetsGemojiImagesEmojiUnicode1f391Png, map[string]*bintree{}},
						"1f392.png": &bintree{assetsGemojiImagesEmojiUnicode1f392Png, map[string]*bintree{}},
						"1f393.png": &bintree{assetsGemojiImagesEmojiUnicode1f393Png, map[string]*bintree{}},
						"1f3a0.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a0Png, map[string]*bintree{}},
						"1f3a1.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a1Png, map[string]*bintree{}},
						"1f3a2.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a2Png, map[string]*bintree{}},
						"1f3a3.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a3Png, map[string]*bintree{}},
						"1f3a4.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a4Png, map[string]*bintree{}},
						"1f3a5.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a5Png, map[string]*bintree{}},
						"1f3a6.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a6Png, map[string]*bintree{}},
						"1f3a7.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a7Png, map[string]*bintree{}},
						"1f3a8.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a8Png, map[string]*bintree{}},
						"1f3a9.png": &bintree{assetsGemojiImagesEmojiUnicode1f3a9Png, map[string]*bintree{}},
						"1f3aa.png": &bintree{assetsGemojiImagesEmojiUnicode1f3aaPng, map[string]*bintree{}},
						"1f3ab.png": &bintree{assetsGemojiImagesEmojiUnicode1f3abPng, map[string]*bintree{}},
						"1f3ac.png": &bintree{assetsGemojiImagesEmojiUnicode1f3acPng, map[string]*bintree{}},
						"1f3ad.png": &bintree{assetsGemojiImagesEmojiUnicode1f3adPng, map[string]*bintree{}},
						"1f3ae.png": &bintree{assetsGemojiImagesEmojiUnicode1f3aePng, map[string]*bintree{}},
						"1f3af.png": &bintree{assetsGemojiImagesEmojiUnicode1f3afPng, map[string]*bintree{}},
						"1f3b0.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b0Png, map[string]*bintree{}},
						"1f3b1.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b1Png, map[string]*bintree{}},
						"1f3b2.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b2Png, map[string]*bintree{}},
						"1f3b3.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b3Png, map[string]*bintree{}},
						"1f3b4.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b4Png, map[string]*bintree{}},
						"1f3b5.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b5Png, map[string]*bintree{}},
						"1f3b6.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b6Png, map[string]*bintree{}},
						"1f3b7.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b7Png, map[string]*bintree{}},
						"1f3b8.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b8Png, map[string]*bintree{}},
						"1f3b9.png": &bintree{assetsGemojiImagesEmojiUnicode1f3b9Png, map[string]*bintree{}},
						"1f3ba.png": &bintree{assetsGemojiImagesEmojiUnicode1f3baPng, map[string]*bintree{}},
						"1f3bb.png": &bintree{assetsGemojiImagesEmojiUnicode1f3bbPng, map[string]*bintree{}},
						"1f3bc.png": &bintree{assetsGemojiImagesEmojiUnicode1f3bcPng, map[string]*bintree{}},
						"1f3bd.png": &bintree{assetsGemojiImagesEmojiUnicode1f3bdPng, map[string]*bintree{}},
						"1f3be.png": &bintree{assetsGemojiImagesEmojiUnicode1f3bePng, map[string]*bintree{}},
						"1f3bf.png": &bintree{assetsGemojiImagesEmojiUnicode1f3bfPng, map[string]*bintree{}},
						"1f3c0.png": &bintree{assetsGemojiImagesEmojiUnicode1f3c0Png, map[string]*bintree{}},
						"1f3c1.png": &bintree{assetsGemojiImagesEmojiUnicode1f3c1Png, map[string]*bintree{}},
						"1f3c2.png": &bintree{assetsGemojiImagesEmojiUnicode1f3c2Png, map[string]*bintree{}},
						"1f3c3.png": &bintree{assetsGemojiImagesEmojiUnicode1f3c3Png, map[string]*bintree{}},
						"1f3c4.png": &bintree{assetsGemojiImagesEmojiUnicode1f3c4Png, map[string]*bintree{}},
						"1f3c6.png": &bintree{assetsGemojiImagesEmojiUnicode1f3c6Png, map[string]*bintree{}},
						"1f3c7.png": &bintree{assetsGemojiImagesEmojiUnicode1f3c7Png, map[string]*bintree{}},
						"1f3c8.png": &bintree{assetsGemojiImagesEmojiUnicode1f3c8Png, map[string]*bintree{}},
						"1f3c9.png": &bintree{assetsGemojiImagesEmojiUnicode1f3c9Png, map[string]*bintree{}},
						"1f3ca.png": &bintree{assetsGemojiImagesEmojiUnicode1f3caPng, map[string]*bintree{}},
						"1f3e0.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e0Png, map[string]*bintree{}},
						"1f3e1.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e1Png, map[string]*bintree{}},
						"1f3e2.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e2Png, map[string]*bintree{}},
						"1f3e3.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e3Png, map[string]*bintree{}},
						"1f3e4.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e4Png, map[string]*bintree{}},
						"1f3e5.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e5Png, map[string]*bintree{}},
						"1f3e6.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e6Png, map[string]*bintree{}},
						"1f3e7.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e7Png, map[string]*bintree{}},
						"1f3e8.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e8Png, map[string]*bintree{}},
						"1f3e9.png": &bintree{assetsGemojiImagesEmojiUnicode1f3e9Png, map[string]*bintree{}},
						"1f3ea.png": &bintree{assetsGemojiImagesEmojiUnicode1f3eaPng, map[string]*bintree{}},
						"1f3eb.png": &bintree{assetsGemojiImagesEmojiUnicode1f3ebPng, map[string]*bintree{}},
						"1f3ec.png": &bintree{assetsGemojiImagesEmojiUnicode1f3ecPng, map[string]*bintree{}},
						"1f3ed.png": &bintree{assetsGemojiImagesEmojiUnicode1f3edPng, map[string]*bintree{}},
						"1f3ee.png": &bintree{assetsGemojiImagesEmojiUnicode1f3eePng, map[string]*bintree{}},
						"1f3ef.png": &bintree{assetsGemojiImagesEmojiUnicode1f3efPng, map[string]*bintree{}},
						"1f3f0.png": &bintree{assetsGemojiImagesEmojiUnicode1f3f0Png, map[string]*bintree{}},
						"1f400.png": &bintree{assetsGemojiImagesEmojiUnicode1f400Png, map[string]*bintree{}},
						"1f401.png": &bintree{assetsGemojiImagesEmojiUnicode1f401Png, map[string]*bintree{}},
						"1f402.png": &bintree{assetsGemojiImagesEmojiUnicode1f402Png, map[string]*bintree{}},
						"1f403.png": &bintree{assetsGemojiImagesEmojiUnicode1f403Png, map[string]*bintree{}},
						"1f404.png": &bintree{assetsGemojiImagesEmojiUnicode1f404Png, map[string]*bintree{}},
						"1f405.png": &bintree{assetsGemojiImagesEmojiUnicode1f405Png, map[string]*bintree{}},
						"1f406.png": &bintree{assetsGemojiImagesEmojiUnicode1f406Png, map[string]*bintree{}},
						"1f407.png": &bintree{assetsGemojiImagesEmojiUnicode1f407Png, map[string]*bintree{}},
						"1f408.png": &bintree{assetsGemojiImagesEmojiUnicode1f408Png, map[string]*bintree{}},
						"1f409.png": &bintree{assetsGemojiImagesEmojiUnicode1f409Png, map[string]*bintree{}},
						"1f40a.png": &bintree{assetsGemojiImagesEmojiUnicode1f40aPng, map[string]*bintree{}},
						"1f40b.png": &bintree{assetsGemojiImagesEmojiUnicode1f40bPng, map[string]*bintree{}},
						"1f40c.png": &bintree{assetsGemojiImagesEmojiUnicode1f40cPng, map[string]*bintree{}},
						"1f40d.png": &bintree{assetsGemojiImagesEmojiUnicode1f40dPng, map[string]*bintree{}},
						"1f40e.png": &bintree{assetsGemojiImagesEmojiUnicode1f40ePng, map[string]*bintree{}},
						"1f40f.png": &bintree{assetsGemojiImagesEmojiUnicode1f40fPng, map[string]*bintree{}},
						"1f410.png": &bintree{assetsGemojiImagesEmojiUnicode1f410Png, map[string]*bintree{}},
						"1f411.png": &bintree{assetsGemojiImagesEmojiUnicode1f411Png, map[string]*bintree{}},
						"1f412.png": &bintree{assetsGemojiImagesEmojiUnicode1f412Png, map[string]*bintree{}},
						"1f413.png": &bintree{assetsGemojiImagesEmojiUnicode1f413Png, map[string]*bintree{}},
						"1f414.png": &bintree{assetsGemojiImagesEmojiUnicode1f414Png, map[string]*bintree{}},
						"1f415.png": &bintree{assetsGemojiImagesEmojiUnicode1f415Png, map[string]*bintree{}},
						"1f416.png": &bintree{assetsGemojiImagesEmojiUnicode1f416Png, map[string]*bintree{}},
						"1f417.png": &bintree{assetsGemojiImagesEmojiUnicode1f417Png, map[string]*bintree{}},
						"1f418.png": &bintree{assetsGemojiImagesEmojiUnicode1f418Png, map[string]*bintree{}},
						"1f419.png": &bintree{assetsGemojiImagesEmojiUnicode1f419Png, map[string]*bintree{}},
						"1f41a.png": &bintree{assetsGemojiImagesEmojiUnicode1f41aPng, map[string]*bintree{}},
						"1f41b.png": &bintree{assetsGemojiImagesEmojiUnicode1f41bPng, map[string]*bintree{}},
						"1f41c.png": &bintree{assetsGemojiImagesEmojiUnicode1f41cPng, map[string]*bintree{}},
						"1f41d.png": &bintree{assetsGemojiImagesEmojiUnicode1f41dPng, map[string]*bintree{}},
						"1f41e.png": &bintree{assetsGemojiImagesEmojiUnicode1f41ePng, map[string]*bintree{}},
						"1f41f.png": &bintree{assetsGemojiImagesEmojiUnicode1f41fPng, map[string]*bintree{}},
						"1f420.png": &bintree{assetsGemojiImagesEmojiUnicode1f420Png, map[string]*bintree{}},
						"1f421.png": &bintree{assetsGemojiImagesEmojiUnicode1f421Png, map[string]*bintree{}},
						"1f422.png": &bintree{assetsGemojiImagesEmojiUnicode1f422Png, map[string]*bintree{}},
						"1f423.png": &bintree{assetsGemojiImagesEmojiUnicode1f423Png, map[string]*bintree{}},
						"1f424.png": &bintree{assetsGemojiImagesEmojiUnicode1f424Png, map[string]*bintree{}},
						"1f425.png": &bintree{assetsGemojiImagesEmojiUnicode1f425Png, map[string]*bintree{}},
						"1f426.png": &bintree{assetsGemojiImagesEmojiUnicode1f426Png, map[string]*bintree{}},
						"1f427.png": &bintree{assetsGemojiImagesEmojiUnicode1f427Png, map[string]*bintree{}},
						"1f428.png": &bintree{assetsGemojiImagesEmojiUnicode1f428Png, map[string]*bintree{}},
						"1f429.png": &bintree{assetsGemojiImagesEmojiUnicode1f429Png, map[string]*bintree{}},
						"1f42a.png": &bintree{assetsGemojiImagesEmojiUnicode1f42aPng, map[string]*bintree{}},
						"1f42b.png": &bintree{assetsGemojiImagesEmojiUnicode1f42bPng, map[string]*bintree{}},
						"1f42c.png": &bintree{assetsGemojiImagesEmojiUnicode1f42cPng, map[string]*bintree{}},
						"1f42d.png": &bintree{assetsGemojiImagesEmojiUnicode1f42dPng, map[string]*bintree{}},
						"1f42e.png": &bintree{assetsGemojiImagesEmojiUnicode1f42ePng, map[string]*bintree{}},
						"1f42f.png": &bintree{assetsGemojiImagesEmojiUnicode1f42fPng, map[string]*bintree{}},
						"1f430.png": &bintree{assetsGemojiImagesEmojiUnicode1f430Png, map[string]*bintree{}},
						"1f431.png": &bintree{assetsGemojiImagesEmojiUnicode1f431Png, map[string]*bintree{}},
						"1f432.png": &bintree{assetsGemojiImagesEmojiUnicode1f432Png, map[string]*bintree{}},
						"1f433.png": &bintree{assetsGemojiImagesEmojiUnicode1f433Png, map[string]*bintree{}},
						"1f434.png": &bintree{assetsGemojiImagesEmojiUnicode1f434Png, map[string]*bintree{}},
						"1f435.png": &bintree{assetsGemojiImagesEmojiUnicode1f435Png, map[string]*bintree{}},
						"1f436.png": &bintree{assetsGemojiImagesEmojiUnicode1f436Png, map[string]*bintree{}},
						"1f437.png": &bintree{assetsGemojiImagesEmojiUnicode1f437Png, map[string]*bintree{}},
						"1f438.png": &bintree{assetsGemojiImagesEmojiUnicode1f438Png, map[string]*bintree{}},
						"1f439.png": &bintree{assetsGemojiImagesEmojiUnicode1f439Png, map[string]*bintree{}},
						"1f43a.png": &bintree{assetsGemojiImagesEmojiUnicode1f43aPng, map[string]*bintree{}},
						"1f43b.png": &bintree{assetsGemojiImagesEmojiUnicode1f43bPng, map[string]*bintree{}},
						"1f43c.png": &bintree{assetsGemojiImagesEmojiUnicode1f43cPng, map[string]*bintree{}},
						"1f43d.png": &bintree{assetsGemojiImagesEmojiUnicode1f43dPng, map[string]*bintree{}},
						"1f43e.png": &bintree{assetsGemojiImagesEmojiUnicode1f43ePng, map[string]*bintree{}},
						"1f440.png": &bintree{assetsGemojiImagesEmojiUnicode1f440Png, map[string]*bintree{}},
						"1f442.png": &bintree{assetsGemojiImagesEmojiUnicode1f442Png, map[string]*bintree{}},
						"1f443.png": &bintree{assetsGemojiImagesEmojiUnicode1f443Png, map[string]*bintree{}},
						"1f444.png": &bintree{assetsGemojiImagesEmojiUnicode1f444Png, map[string]*bintree{}},
						"1f445.png": &bintree{assetsGemojiImagesEmojiUnicode1f445Png, map[string]*bintree{}},
						"1f446.png": &bintree{assetsGemojiImagesEmojiUnicode1f446Png, map[string]*bintree{}},
						"1f447.png": &bintree{assetsGemojiImagesEmojiUnicode1f447Png, map[string]*bintree{}},
						"1f448.png": &bintree{assetsGemojiImagesEmojiUnicode1f448Png, map[string]*bintree{}},
						"1f449.png": &bintree{assetsGemojiImagesEmojiUnicode1f449Png, map[string]*bintree{}},
						"1f44a.png": &bintree{assetsGemojiImagesEmojiUnicode1f44aPng, map[string]*bintree{}},
						"1f44b.png": &bintree{assetsGemojiImagesEmojiUnicode1f44bPng, map[string]*bintree{}},
						"1f44c.png": &bintree{assetsGemojiImagesEmojiUnicode1f44cPng, map[string]*bintree{}},
						"1f44d.png": &bintree{assetsGemojiImagesEmojiUnicode1f44dPng, map[string]*bintree{}},
						"1f44e.png": &bintree{assetsGemojiImagesEmojiUnicode1f44ePng, map[string]*bintree{}},
						"1f44f.png": &bintree{assetsGemojiImagesEmojiUnicode1f44fPng, map[string]*bintree{}},
						"1f450.png": &bintree{assetsGemojiImagesEmojiUnicode1f450Png, map[string]*bintree{}},
						"1f451.png": &bintree{assetsGemojiImagesEmojiUnicode1f451Png, map[string]*bintree{}},
						"1f452.png": &bintree{assetsGemojiImagesEmojiUnicode1f452Png, map[string]*bintree{}},
						"1f453.png": &bintree{assetsGemojiImagesEmojiUnicode1f453Png, map[string]*bintree{}},
						"1f454.png": &bintree{assetsGemojiImagesEmojiUnicode1f454Png, map[string]*bintree{}},
						"1f455.png": &bintree{assetsGemojiImagesEmojiUnicode1f455Png, map[string]*bintree{}},
						"1f456.png": &bintree{assetsGemojiImagesEmojiUnicode1f456Png, map[string]*bintree{}},
						"1f457.png": &bintree{assetsGemojiImagesEmojiUnicode1f457Png, map[string]*bintree{}},
						"1f458.png": &bintree{assetsGemojiImagesEmojiUnicode1f458Png, map[string]*bintree{}},
						"1f459.png": &bintree{assetsGemojiImagesEmojiUnicode1f459Png, map[string]*bintree{}},
						"1f45a.png": &bintree{assetsGemojiImagesEmojiUnicode1f45aPng, map[string]*bintree{}},
						"1f45b.png": &bintree{assetsGemojiImagesEmojiUnicode1f45bPng, map[string]*bintree{}},
						"1f45c.png": &bintree{assetsGemojiImagesEmojiUnicode1f45cPng, map[string]*bintree{}},
						"1f45d.png": &bintree{assetsGemojiImagesEmojiUnicode1f45dPng, map[string]*bintree{}},
						"1f45e.png": &bintree{assetsGemojiImagesEmojiUnicode1f45ePng, map[string]*bintree{}},
						"1f45f.png": &bintree{assetsGemojiImagesEmojiUnicode1f45fPng, map[string]*bintree{}},
						"1f460.png": &bintree{assetsGemojiImagesEmojiUnicode1f460Png, map[string]*bintree{}},
						"1f461.png": &bintree{assetsGemojiImagesEmojiUnicode1f461Png, map[string]*bintree{}},
						"1f462.png": &bintree{assetsGemojiImagesEmojiUnicode1f462Png, map[string]*bintree{}},
						"1f463.png": &bintree{assetsGemojiImagesEmojiUnicode1f463Png, map[string]*bintree{}},
						"1f464.png": &bintree{assetsGemojiImagesEmojiUnicode1f464Png, map[string]*bintree{}},
						"1f465.png": &bintree{assetsGemojiImagesEmojiUnicode1f465Png, map[string]*bintree{}},
						"1f466.png": &bintree{assetsGemojiImagesEmojiUnicode1f466Png, map[string]*bintree{}},
						"1f467.png": &bintree{assetsGemojiImagesEmojiUnicode1f467Png, map[string]*bintree{}},
						"1f468.png": &bintree{assetsGemojiImagesEmojiUnicode1f468Png, map[string]*bintree{}},
						"1f469.png": &bintree{assetsGemojiImagesEmojiUnicode1f469Png, map[string]*bintree{}},
						"1f46a.png": &bintree{assetsGemojiImagesEmojiUnicode1f46aPng, map[string]*bintree{}},
						"1f46b.png": &bintree{assetsGemojiImagesEmojiUnicode1f46bPng, map[string]*bintree{}},
						"1f46c.png": &bintree{assetsGemojiImagesEmojiUnicode1f46cPng, map[string]*bintree{}},
						"1f46d.png": &bintree{assetsGemojiImagesEmojiUnicode1f46dPng, map[string]*bintree{}},
						"1f46e.png": &bintree{assetsGemojiImagesEmojiUnicode1f46ePng, map[string]*bintree{}},
						"1f46f.png": &bintree{assetsGemojiImagesEmojiUnicode1f46fPng, map[string]*bintree{}},
						"1f470.png": &bintree{assetsGemojiImagesEmojiUnicode1f470Png, map[string]*bintree{}},
						"1f471.png": &bintree{assetsGemojiImagesEmojiUnicode1f471Png, map[string]*bintree{}},
						"1f472.png": &bintree{assetsGemojiImagesEmojiUnicode1f472Png, map[string]*bintree{}},
						"1f473.png": &bintree{assetsGemojiImagesEmojiUnicode1f473Png, map[string]*bintree{}},
						"1f474.png": &bintree{assetsGemojiImagesEmojiUnicode1f474Png, map[string]*bintree{}},
						"1f475.png": &bintree{assetsGemojiImagesEmojiUnicode1f475Png, map[string]*bintree{}},
						"1f476.png": &bintree{assetsGemojiImagesEmojiUnicode1f476Png, map[string]*bintree{}},
						"1f477.png": &bintree{assetsGemojiImagesEmojiUnicode1f477Png, map[string]*bintree{}},
						"1f478.png": &bintree{assetsGemojiImagesEmojiUnicode1f478Png, map[string]*bintree{}},
						"1f479.png": &bintree{assetsGemojiImagesEmojiUnicode1f479Png, map[string]*bintree{}},
						"1f47a.png": &bintree{assetsGemojiImagesEmojiUnicode1f47aPng, map[string]*bintree{}},
						"1f47b.png": &bintree{assetsGemojiImagesEmojiUnicode1f47bPng, map[string]*bintree{}},
						"1f47c.png": &bintree{assetsGemojiImagesEmojiUnicode1f47cPng, map[string]*bintree{}},
						"1f47d.png": &bintree{assetsGemojiImagesEmojiUnicode1f47dPng, map[string]*bintree{}},
						"1f47e.png": &bintree{assetsGemojiImagesEmojiUnicode1f47ePng, map[string]*bintree{}},
						"1f47f.png": &bintree{assetsGemojiImagesEmojiUnicode1f47fPng, map[string]*bintree{}},
						"1f480.png": &bintree{assetsGemojiImagesEmojiUnicode1f480Png, map[string]*bintree{}},
						"1f481.png": &bintree{assetsGemojiImagesEmojiUnicode1f481Png, map[string]*bintree{}},
						"1f482.png": &bintree{assetsGemojiImagesEmojiUnicode1f482Png, map[string]*bintree{}},
						"1f483.png": &bintree{assetsGemojiImagesEmojiUnicode1f483Png, map[string]*bintree{}},
						"1f484.png": &bintree{assetsGemojiImagesEmojiUnicode1f484Png, map[string]*bintree{}},
						"1f485.png": &bintree{assetsGemojiImagesEmojiUnicode1f485Png, map[string]*bintree{}},
						"1f486.png": &bintree{assetsGemojiImagesEmojiUnicode1f486Png, map[string]*bintree{}},
						"1f487.png": &bintree{assetsGemojiImagesEmojiUnicode1f487Png, map[string]*bintree{}},
						"1f488.png": &bintree{assetsGemojiImagesEmojiUnicode1f488Png, map[string]*bintree{}},
						"1f489.png": &bintree{assetsGemojiImagesEmojiUnicode1f489Png, map[string]*bintree{}},
						"1f48a.png": &bintree{assetsGemojiImagesEmojiUnicode1f48aPng, map[string]*bintree{}},
						"1f48b.png": &bintree{assetsGemojiImagesEmojiUnicode1f48bPng, map[string]*bintree{}},
						"1f48c.png": &bintree{assetsGemojiImagesEmojiUnicode1f48cPng, map[string]*bintree{}},
						"1f48d.png": &bintree{assetsGemojiImagesEmojiUnicode1f48dPng, map[string]*bintree{}},
						"1f48e.png": &bintree{assetsGemojiImagesEmojiUnicode1f48ePng, map[string]*bintree{}},
						"1f48f.png": &bintree{assetsGemojiImagesEmojiUnicode1f48fPng, map[string]*bintree{}},
						"1f490.png": &bintree{assetsGemojiImagesEmojiUnicode1f490Png, map[string]*bintree{}},
						"1f491.png": &bintree{assetsGemojiImagesEmojiUnicode1f491Png, map[string]*bintree{}},
						"1f492.png": &bintree{assetsGemojiImagesEmojiUnicode1f492Png, map[string]*bintree{}},
						"1f493.png": &bintree{assetsGemojiImagesEmojiUnicode1f493Png, map[string]*bintree{}},
						"1f494.png": &bintree{assetsGemojiImagesEmojiUnicode1f494Png, map[string]*bintree{}},
						"1f495.png": &bintree{assetsGemojiImagesEmojiUnicode1f495Png, map[string]*bintree{}},
						"1f496.png": &bintree{assetsGemojiImagesEmojiUnicode1f496Png, map[string]*bintree{}},
						"1f497.png": &bintree{assetsGemojiImagesEmojiUnicode1f497Png, map[string]*bintree{}},
						"1f498.png": &bintree{assetsGemojiImagesEmojiUnicode1f498Png, map[string]*bintree{}},
						"1f499.png": &bintree{assetsGemojiImagesEmojiUnicode1f499Png, map[string]*bintree{}},
						"1f49a.png": &bintree{assetsGemojiImagesEmojiUnicode1f49aPng, map[string]*bintree{}},
						"1f49b.png": &bintree{assetsGemojiImagesEmojiUnicode1f49bPng, map[string]*bintree{}},
						"1f49c.png": &bintree{assetsGemojiImagesEmojiUnicode1f49cPng, map[string]*bintree{}},
						"1f49d.png": &bintree{assetsGemojiImagesEmojiUnicode1f49dPng, map[string]*bintree{}},
						"1f49e.png": &bintree{assetsGemojiImagesEmojiUnicode1f49ePng, map[string]*bintree{}},
						"1f49f.png": &bintree{assetsGemojiImagesEmojiUnicode1f49fPng, map[string]*bintree{}},
						"1f4a0.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a0Png, map[string]*bintree{}},
						"1f4a1.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a1Png, map[string]*bintree{}},
						"1f4a2.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a2Png, map[string]*bintree{}},
						"1f4a3.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a3Png, map[string]*bintree{}},
						"1f4a4.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a4Png, map[string]*bintree{}},
						"1f4a5.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a5Png, map[string]*bintree{}},
						"1f4a6.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a6Png, map[string]*bintree{}},
						"1f4a7.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a7Png, map[string]*bintree{}},
						"1f4a8.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a8Png, map[string]*bintree{}},
						"1f4a9.png": &bintree{assetsGemojiImagesEmojiUnicode1f4a9Png, map[string]*bintree{}},
						"1f4aa.png": &bintree{assetsGemojiImagesEmojiUnicode1f4aaPng, map[string]*bintree{}},
						"1f4ab.png": &bintree{assetsGemojiImagesEmojiUnicode1f4abPng, map[string]*bintree{}},
						"1f4ac.png": &bintree{assetsGemojiImagesEmojiUnicode1f4acPng, map[string]*bintree{}},
						"1f4ad.png": &bintree{assetsGemojiImagesEmojiUnicode1f4adPng, map[string]*bintree{}},
						"1f4ae.png": &bintree{assetsGemojiImagesEmojiUnicode1f4aePng, map[string]*bintree{}},
						"1f4af.png": &bintree{assetsGemojiImagesEmojiUnicode1f4afPng, map[string]*bintree{}},
						"1f4b0.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b0Png, map[string]*bintree{}},
						"1f4b1.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b1Png, map[string]*bintree{}},
						"1f4b2.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b2Png, map[string]*bintree{}},
						"1f4b3.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b3Png, map[string]*bintree{}},
						"1f4b4.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b4Png, map[string]*bintree{}},
						"1f4b5.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b5Png, map[string]*bintree{}},
						"1f4b6.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b6Png, map[string]*bintree{}},
						"1f4b7.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b7Png, map[string]*bintree{}},
						"1f4b8.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b8Png, map[string]*bintree{}},
						"1f4b9.png": &bintree{assetsGemojiImagesEmojiUnicode1f4b9Png, map[string]*bintree{}},
						"1f4ba.png": &bintree{assetsGemojiImagesEmojiUnicode1f4baPng, map[string]*bintree{}},
						"1f4bb.png": &bintree{assetsGemojiImagesEmojiUnicode1f4bbPng, map[string]*bintree{}},
						"1f4bc.png": &bintree{assetsGemojiImagesEmojiUnicode1f4bcPng, map[string]*bintree{}},
						"1f4bd.png": &bintree{assetsGemojiImagesEmojiUnicode1f4bdPng, map[string]*bintree{}},
						"1f4be.png": &bintree{assetsGemojiImagesEmojiUnicode1f4bePng, map[string]*bintree{}},
						"1f4bf.png": &bintree{assetsGemojiImagesEmojiUnicode1f4bfPng, map[string]*bintree{}},
						"1f4c0.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c0Png, map[string]*bintree{}},
						"1f4c1.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c1Png, map[string]*bintree{}},
						"1f4c2.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c2Png, map[string]*bintree{}},
						"1f4c3.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c3Png, map[string]*bintree{}},
						"1f4c4.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c4Png, map[string]*bintree{}},
						"1f4c5.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c5Png, map[string]*bintree{}},
						"1f4c6.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c6Png, map[string]*bintree{}},
						"1f4c7.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c7Png, map[string]*bintree{}},
						"1f4c8.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c8Png, map[string]*bintree{}},
						"1f4c9.png": &bintree{assetsGemojiImagesEmojiUnicode1f4c9Png, map[string]*bintree{}},
						"1f4ca.png": &bintree{assetsGemojiImagesEmojiUnicode1f4caPng, map[string]*bintree{}},
						"1f4cb.png": &bintree{assetsGemojiImagesEmojiUnicode1f4cbPng, map[string]*bintree{}},
						"1f4cc.png": &bintree{assetsGemojiImagesEmojiUnicode1f4ccPng, map[string]*bintree{}},
						"1f4cd.png": &bintree{assetsGemojiImagesEmojiUnicode1f4cdPng, map[string]*bintree{}},
						"1f4ce.png": &bintree{assetsGemojiImagesEmojiUnicode1f4cePng, map[string]*bintree{}},
						"1f4cf.png": &bintree{assetsGemojiImagesEmojiUnicode1f4cfPng, map[string]*bintree{}},
						"1f4d0.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d0Png, map[string]*bintree{}},
						"1f4d1.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d1Png, map[string]*bintree{}},
						"1f4d2.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d2Png, map[string]*bintree{}},
						"1f4d3.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d3Png, map[string]*bintree{}},
						"1f4d4.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d4Png, map[string]*bintree{}},
						"1f4d5.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d5Png, map[string]*bintree{}},
						"1f4d6.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d6Png, map[string]*bintree{}},
						"1f4d7.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d7Png, map[string]*bintree{}},
						"1f4d8.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d8Png, map[string]*bintree{}},
						"1f4d9.png": &bintree{assetsGemojiImagesEmojiUnicode1f4d9Png, map[string]*bintree{}},
						"1f4da.png": &bintree{assetsGemojiImagesEmojiUnicode1f4daPng, map[string]*bintree{}},
						"1f4db.png": &bintree{assetsGemojiImagesEmojiUnicode1f4dbPng, map[string]*bintree{}},
						"1f4dc.png": &bintree{assetsGemojiImagesEmojiUnicode1f4dcPng, map[string]*bintree{}},
						"1f4dd.png": &bintree{assetsGemojiImagesEmojiUnicode1f4ddPng, map[string]*bintree{}},
						"1f4de.png": &bintree{assetsGemojiImagesEmojiUnicode1f4dePng, map[string]*bintree{}},
						"1f4df.png": &bintree{assetsGemojiImagesEmojiUnicode1f4dfPng, map[string]*bintree{}},
						"1f4e0.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e0Png, map[string]*bintree{}},
						"1f4e1.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e1Png, map[string]*bintree{}},
						"1f4e2.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e2Png, map[string]*bintree{}},
						"1f4e3.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e3Png, map[string]*bintree{}},
						"1f4e4.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e4Png, map[string]*bintree{}},
						"1f4e5.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e5Png, map[string]*bintree{}},
						"1f4e6.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e6Png, map[string]*bintree{}},
						"1f4e7.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e7Png, map[string]*bintree{}},
						"1f4e8.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e8Png, map[string]*bintree{}},
						"1f4e9.png": &bintree{assetsGemojiImagesEmojiUnicode1f4e9Png, map[string]*bintree{}},
						"1f4ea.png": &bintree{assetsGemojiImagesEmojiUnicode1f4eaPng, map[string]*bintree{}},
						"1f4eb.png": &bintree{assetsGemojiImagesEmojiUnicode1f4ebPng, map[string]*bintree{}},
						"1f4ec.png": &bintree{assetsGemojiImagesEmojiUnicode1f4ecPng, map[string]*bintree{}},
						"1f4ed.png": &bintree{assetsGemojiImagesEmojiUnicode1f4edPng, map[string]*bintree{}},
						"1f4ee.png": &bintree{assetsGemojiImagesEmojiUnicode1f4eePng, map[string]*bintree{}},
						"1f4ef.png": &bintree{assetsGemojiImagesEmojiUnicode1f4efPng, map[string]*bintree{}},
						"1f4f0.png": &bintree{assetsGemojiImagesEmojiUnicode1f4f0Png, map[string]*bintree{}},
						"1f4f1.png": &bintree{assetsGemojiImagesEmojiUnicode1f4f1Png, map[string]*bintree{}},
						"1f4f2.png": &bintree{assetsGemojiImagesEmojiUnicode1f4f2Png, map[string]*bintree{}},
						"1f4f3.png": &bintree{assetsGemojiImagesEmojiUnicode1f4f3Png, map[string]*bintree{}},
						"1f4f4.png": &bintree{assetsGemojiImagesEmojiUnicode1f4f4Png, map[string]*bintree{}},
						"1f4f5.png": &bintree{assetsGemojiImagesEmojiUnicode1f4f5Png, map[string]*bintree{}},
						"1f4f6.png": &bintree{assetsGemojiImagesEmojiUnicode1f4f6Png, map[string]*bintree{}},
						"1f4f7.png": &bintree{assetsGemojiImagesEmojiUnicode1f4f7Png, map[string]*bintree{}},
						"1f4f9.png": &bintree{assetsGemojiImagesEmojiUnicode1f4f9Png, map[string]*bintree{}},
						"1f4fa.png": &bintree{assetsGemojiImagesEmojiUnicode1f4faPng, map[string]*bintree{}},
						"1f4fb.png": &bintree{assetsGemojiImagesEmojiUnicode1f4fbPng, map[string]*bintree{}},
						"1f4fc.png": &bintree{assetsGemojiImagesEmojiUnicode1f4fcPng, map[string]*bintree{}},
						"1f500.png": &bintree{assetsGemojiImagesEmojiUnicode1f500Png, map[string]*bintree{}},
						"1f501.png": &bintree{assetsGemojiImagesEmojiUnicode1f501Png, map[string]*bintree{}},
						"1f502.png": &bintree{assetsGemojiImagesEmojiUnicode1f502Png, map[string]*bintree{}},
						"1f503.png": &bintree{assetsGemojiImagesEmojiUnicode1f503Png, map[string]*bintree{}},
						"1f504.png": &bintree{assetsGemojiImagesEmojiUnicode1f504Png, map[string]*bintree{}},
						"1f505.png": &bintree{assetsGemojiImagesEmojiUnicode1f505Png, map[string]*bintree{}},
						"1f506.png": &bintree{assetsGemojiImagesEmojiUnicode1f506Png, map[string]*bintree{}},
						"1f507.png": &bintree{assetsGemojiImagesEmojiUnicode1f507Png, map[string]*bintree{}},
						"1f508.png": &bintree{assetsGemojiImagesEmojiUnicode1f508Png, map[string]*bintree{}},
						"1f509.png": &bintree{assetsGemojiImagesEmojiUnicode1f509Png, map[string]*bintree{}},
						"1f50a.png": &bintree{assetsGemojiImagesEmojiUnicode1f50aPng, map[string]*bintree{}},
						"1f50b.png": &bintree{assetsGemojiImagesEmojiUnicode1f50bPng, map[string]*bintree{}},
						"1f50c.png": &bintree{assetsGemojiImagesEmojiUnicode1f50cPng, map[string]*bintree{}},
						"1f50d.png": &bintree{assetsGemojiImagesEmojiUnicode1f50dPng, map[string]*bintree{}},
						"1f50e.png": &bintree{assetsGemojiImagesEmojiUnicode1f50ePng, map[string]*bintree{}},
						"1f50f.png": &bintree{assetsGemojiImagesEmojiUnicode1f50fPng, map[string]*bintree{}},
						"1f510.png": &bintree{assetsGemojiImagesEmojiUnicode1f510Png, map[string]*bintree{}},
						"1f511.png": &bintree{assetsGemojiImagesEmojiUnicode1f511Png, map[string]*bintree{}},
						"1f512.png": &bintree{assetsGemojiImagesEmojiUnicode1f512Png, map[string]*bintree{}},
						"1f513.png": &bintree{assetsGemojiImagesEmojiUnicode1f513Png, map[string]*bintree{}},
						"1f514.png": &bintree{assetsGemojiImagesEmojiUnicode1f514Png, map[string]*bintree{}},
						"1f515.png": &bintree{assetsGemojiImagesEmojiUnicode1f515Png, map[string]*bintree{}},
						"1f516.png": &bintree{assetsGemojiImagesEmojiUnicode1f516Png, map[string]*bintree{}},
						"1f517.png": &bintree{assetsGemojiImagesEmojiUnicode1f517Png, map[string]*bintree{}},
						"1f518.png": &bintree{assetsGemojiImagesEmojiUnicode1f518Png, map[string]*bintree{}},
						"1f519.png": &bintree{assetsGemojiImagesEmojiUnicode1f519Png, map[string]*bintree{}},
						"1f51a.png": &bintree{assetsGemojiImagesEmojiUnicode1f51aPng, map[string]*bintree{}},
						"1f51b.png": &bintree{assetsGemojiImagesEmojiUnicode1f51bPng, map[string]*bintree{}},
						"1f51c.png": &bintree{assetsGemojiImagesEmojiUnicode1f51cPng, map[string]*bintree{}},
						"1f51d.png": &bintree{assetsGemojiImagesEmojiUnicode1f51dPng, map[string]*bintree{}},
						"1f51e.png": &bintree{assetsGemojiImagesEmojiUnicode1f51ePng, map[string]*bintree{}},
						"1f51f.png": &bintree{assetsGemojiImagesEmojiUnicode1f51fPng, map[string]*bintree{}},
						"1f520.png": &bintree{assetsGemojiImagesEmojiUnicode1f520Png, map[string]*bintree{}},
						"1f521.png": &bintree{assetsGemojiImagesEmojiUnicode1f521Png, map[string]*bintree{}},
						"1f522.png": &bintree{assetsGemojiImagesEmojiUnicode1f522Png, map[string]*bintree{}},
						"1f523.png": &bintree{assetsGemojiImagesEmojiUnicode1f523Png, map[string]*bintree{}},
						"1f524.png": &bintree{assetsGemojiImagesEmojiUnicode1f524Png, map[string]*bintree{}},
						"1f525.png": &bintree{assetsGemojiImagesEmojiUnicode1f525Png, map[string]*bintree{}},
						"1f526.png": &bintree{assetsGemojiImagesEmojiUnicode1f526Png, map[string]*bintree{}},
						"1f527.png": &bintree{assetsGemojiImagesEmojiUnicode1f527Png, map[string]*bintree{}},
						"1f528.png": &bintree{assetsGemojiImagesEmojiUnicode1f528Png, map[string]*bintree{}},
						"1f529.png": &bintree{assetsGemojiImagesEmojiUnicode1f529Png, map[string]*bintree{}},
						"1f52a.png": &bintree{assetsGemojiImagesEmojiUnicode1f52aPng, map[string]*bintree{}},
						"1f52b.png": &bintree{assetsGemojiImagesEmojiUnicode1f52bPng, map[string]*bintree{}},
						"1f52c.png": &bintree{assetsGemojiImagesEmojiUnicode1f52cPng, map[string]*bintree{}},
						"1f52d.png": &bintree{assetsGemojiImagesEmojiUnicode1f52dPng, map[string]*bintree{}},
						"1f52e.png": &bintree{assetsGemojiImagesEmojiUnicode1f52ePng, map[string]*bintree{}},
						"1f52f.png": &bintree{assetsGemojiImagesEmojiUnicode1f52fPng, map[string]*bintree{}},
						"1f530.png": &bintree{assetsGemojiImagesEmojiUnicode1f530Png, map[string]*bintree{}},
						"1f531.png": &bintree{assetsGemojiImagesEmojiUnicode1f531Png, map[string]*bintree{}},
						"1f532.png": &bintree{assetsGemojiImagesEmojiUnicode1f532Png, map[string]*bintree{}},
						"1f533.png": &bintree{assetsGemojiImagesEmojiUnicode1f533Png, map[string]*bintree{}},
						"1f534.png": &bintree{assetsGemojiImagesEmojiUnicode1f534Png, map[string]*bintree{}},
						"1f535.png": &bintree{assetsGemojiImagesEmojiUnicode1f535Png, map[string]*bintree{}},
						"1f536.png": &bintree{assetsGemojiImagesEmojiUnicode1f536Png, map[string]*bintree{}},
						"1f537.png": &bintree{assetsGemojiImagesEmojiUnicode1f537Png, map[string]*bintree{}},
						"1f538.png": &bintree{assetsGemojiImagesEmojiUnicode1f538Png, map[string]*bintree{}},
						"1f539.png": &bintree{assetsGemojiImagesEmojiUnicode1f539Png, map[string]*bintree{}},
						"1f53a.png": &bintree{assetsGemojiImagesEmojiUnicode1f53aPng, map[string]*bintree{}},
						"1f53b.png": &bintree{assetsGemojiImagesEmojiUnicode1f53bPng, map[string]*bintree{}},
						"1f53c.png": &bintree{assetsGemojiImagesEmojiUnicode1f53cPng, map[string]*bintree{}},
						"1f53d.png": &bintree{assetsGemojiImagesEmojiUnicode1f53dPng, map[string]*bintree{}},
						"1f550.png": &bintree{assetsGemojiImagesEmojiUnicode1f550Png, map[string]*bintree{}},
						"1f551.png": &bintree{assetsGemojiImagesEmojiUnicode1f551Png, map[string]*bintree{}},
						"1f552.png": &bintree{assetsGemojiImagesEmojiUnicode1f552Png, map[string]*bintree{}},
						"1f553.png": &bintree{assetsGemojiImagesEmojiUnicode1f553Png, map[string]*bintree{}},
						"1f554.png": &bintree{assetsGemojiImagesEmojiUnicode1f554Png, map[string]*bintree{}},
						"1f555.png": &bintree{assetsGemojiImagesEmojiUnicode1f555Png, map[string]*bintree{}},
						"1f556.png": &bintree{assetsGemojiImagesEmojiUnicode1f556Png, map[string]*bintree{}},
						"1f557.png": &bintree{assetsGemojiImagesEmojiUnicode1f557Png, map[string]*bintree{}},
						"1f558.png": &bintree{assetsGemojiImagesEmojiUnicode1f558Png, map[string]*bintree{}},
						"1f559.png": &bintree{assetsGemojiImagesEmojiUnicode1f559Png, map[string]*bintree{}},
						"1f55a.png": &bintree{assetsGemojiImagesEmojiUnicode1f55aPng, map[string]*bintree{}},
						"1f55b.png": &bintree{assetsGemojiImagesEmojiUnicode1f55bPng, map[string]*bintree{}},
						"1f55c.png": &bintree{assetsGemojiImagesEmojiUnicode1f55cPng, map[string]*bintree{}},
						"1f55d.png": &bintree{assetsGemojiImagesEmojiUnicode1f55dPng, map[string]*bintree{}},
						"1f55e.png": &bintree{assetsGemojiImagesEmojiUnicode1f55ePng, map[string]*bintree{}},
						"1f55f.png": &bintree{assetsGemojiImagesEmojiUnicode1f55fPng, map[string]*bintree{}},
						"1f560.png": &bintree{assetsGemojiImagesEmojiUnicode1f560Png, map[string]*bintree{}},
						"1f561.png": &bintree{assetsGemojiImagesEmojiUnicode1f561Png, map[string]*bintree{}},
						"1f562.png": &bintree{assetsGemojiImagesEmojiUnicode1f562Png, map[string]*bintree{}},
						"1f563.png": &bintree{assetsGemojiImagesEmojiUnicode1f563Png, map[string]*bintree{}},
						"1f564.png": &bintree{assetsGemojiImagesEmojiUnicode1f564Png, map[string]*bintree{}},
						"1f565.png": &bintree{assetsGemojiImagesEmojiUnicode1f565Png, map[string]*bintree{}},
						"1f566.png": &bintree{assetsGemojiImagesEmojiUnicode1f566Png, map[string]*bintree{}},
						"1f567.png": &bintree{assetsGemojiImagesEmojiUnicode1f567Png, map[string]*bintree{}},
						"1f5fb.png": &bintree{assetsGemojiImagesEmojiUnicode1f5fbPng, map[string]*bintree{}},
						"1f5fc.png": &bintree{assetsGemojiImagesEmojiUnicode1f5fcPng, map[string]*bintree{}},
						"1f5fd.png": &bintree{assetsGemojiImagesEmojiUnicode1f5fdPng, map[string]*bintree{}},
						"1f5fe.png": &bintree{assetsGemojiImagesEmojiUnicode1f5fePng, map[string]*bintree{}},
						"1f5ff.png": &bintree{assetsGemojiImagesEmojiUnicode1f5ffPng, map[string]*bintree{}},
						"1f600.png": &bintree{assetsGemojiImagesEmojiUnicode1f600Png, map[string]*bintree{}},
						"1f601.png": &bintree{assetsGemojiImagesEmojiUnicode1f601Png, map[string]*bintree{}},
						"1f602.png": &bintree{assetsGemojiImagesEmojiUnicode1f602Png, map[string]*bintree{}},
						"1f603.png": &bintree{assetsGemojiImagesEmojiUnicode1f603Png, map[string]*bintree{}},
						"1f604.png": &bintree{assetsGemojiImagesEmojiUnicode1f604Png, map[string]*bintree{}},
						"1f605.png": &bintree{assetsGemojiImagesEmojiUnicode1f605Png, map[string]*bintree{}},
						"1f606.png": &bintree{assetsGemojiImagesEmojiUnicode1f606Png, map[string]*bintree{}},
						"1f607.png": &bintree{assetsGemojiImagesEmojiUnicode1f607Png, map[string]*bintree{}},
						"1f608.png": &bintree{assetsGemojiImagesEmojiUnicode1f608Png, map[string]*bintree{}},
						"1f609.png": &bintree{assetsGemojiImagesEmojiUnicode1f609Png, map[string]*bintree{}},
						"1f60a.png": &bintree{assetsGemojiImagesEmojiUnicode1f60aPng, map[string]*bintree{}},
						"1f60b.png": &bintree{assetsGemojiImagesEmojiUnicode1f60bPng, map[string]*bintree{}},
						"1f60c.png": &bintree{assetsGemojiImagesEmojiUnicode1f60cPng, map[string]*bintree{}},
						"1f60d.png": &bintree{assetsGemojiImagesEmojiUnicode1f60dPng, map[string]*bintree{}},
						"1f60e.png": &bintree{assetsGemojiImagesEmojiUnicode1f60ePng, map[string]*bintree{}},
						"1f60f.png": &bintree{assetsGemojiImagesEmojiUnicode1f60fPng, map[string]*bintree{}},
						"1f610.png": &bintree{assetsGemojiImagesEmojiUnicode1f610Png, map[string]*bintree{}},
						"1f611.png": &bintree{assetsGemojiImagesEmojiUnicode1f611Png, map[string]*bintree{}},
						"1f612.png": &bintree{assetsGemojiImagesEmojiUnicode1f612Png, map[string]*bintree{}},
						"1f613.png": &bintree{assetsGemojiImagesEmojiUnicode1f613Png, map[string]*bintree{}},
						"1f614.png": &bintree{assetsGemojiImagesEmojiUnicode1f614Png, map[string]*bintree{}},
						"1f615.png": &bintree{assetsGemojiImagesEmojiUnicode1f615Png, map[string]*bintree{}},
						"1f616.png": &bintree{assetsGemojiImagesEmojiUnicode1f616Png, map[string]*bintree{}},
						"1f617.png": &bintree{assetsGemojiImagesEmojiUnicode1f617Png, map[string]*bintree{}},
						"1f618.png": &bintree{assetsGemojiImagesEmojiUnicode1f618Png, map[string]*bintree{}},
						"1f619.png": &bintree{assetsGemojiImagesEmojiUnicode1f619Png, map[string]*bintree{}},
						"1f61a.png": &bintree{assetsGemojiImagesEmojiUnicode1f61aPng, map[string]*bintree{}},
						"1f61b.png": &bintree{assetsGemojiImagesEmojiUnicode1f61bPng, map[string]*bintree{}},
						"1f61c.png": &bintree{assetsGemojiImagesEmojiUnicode1f61cPng, map[string]*bintree{}},
						"1f61d.png": &bintree{assetsGemojiImagesEmojiUnicode1f61dPng, map[string]*bintree{}},
						"1f61e.png": &bintree{assetsGemojiImagesEmojiUnicode1f61ePng, map[string]*bintree{}},
						"1f61f.png": &bintree{assetsGemojiImagesEmojiUnicode1f61fPng, map[string]*bintree{}},
						"1f620.png": &bintree{assetsGemojiImagesEmojiUnicode1f620Png, map[string]*bintree{}},
						"1f621.png": &bintree{assetsGemojiImagesEmojiUnicode1f621Png, map[string]*bintree{}},
						"1f622.png": &bintree{assetsGemojiImagesEmojiUnicode1f622Png, map[string]*bintree{}},
						"1f623.png": &bintree{assetsGemojiImagesEmojiUnicode1f623Png, map[string]*bintree{}},
						"1f624.png": &bintree{assetsGemojiImagesEmojiUnicode1f624Png, map[string]*bintree{}},
						"1f625.png": &bintree{assetsGemojiImagesEmojiUnicode1f625Png, map[string]*bintree{}},
						"1f626.png": &bintree{assetsGemojiImagesEmojiUnicode1f626Png, map[string]*bintree{}},
						"1f627.png": &bintree{assetsGemojiImagesEmojiUnicode1f627Png, map[string]*bintree{}},
						"1f628.png": &bintree{assetsGemojiImagesEmojiUnicode1f628Png, map[string]*bintree{}},
						"1f629.png": &bintree{assetsGemojiImagesEmojiUnicode1f629Png, map[string]*bintree{}},
						"1f62a.png": &bintree{assetsGemojiImagesEmojiUnicode1f62aPng, map[string]*bintree{}},
						"1f62b.png": &bintree{assetsGemojiImagesEmojiUnicode1f62bPng, map[string]*bintree{}},
						"1f62c.png": &bintree{assetsGemojiImagesEmojiUnicode1f62cPng, map[string]*bintree{}},
						"1f62d.png": &bintree{assetsGemojiImagesEmojiUnicode1f62dPng, map[string]*bintree{}},
						"1f62e.png": &bintree{assetsGemojiImagesEmojiUnicode1f62ePng, map[string]*bintree{}},
						"1f62f.png": &bintree{assetsGemojiImagesEmojiUnicode1f62fPng, map[string]*bintree{}},
						"1f630.png": &bintree{assetsGemojiImagesEmojiUnicode1f630Png, map[string]*bintree{}},
						"1f631.png": &bintree{assetsGemojiImagesEmojiUnicode1f631Png, map[string]*bintree{}},
						"1f632.png": &bintree{assetsGemojiImagesEmojiUnicode1f632Png, map[string]*bintree{}},
						"1f633.png": &bintree{assetsGemojiImagesEmojiUnicode1f633Png, map[string]*bintree{}},
						"1f634.png": &bintree{assetsGemojiImagesEmojiUnicode1f634Png, map[string]*bintree{}},
						"1f635.png": &bintree{assetsGemojiImagesEmojiUnicode1f635Png, map[string]*bintree{}},
						"1f636.png": &bintree{assetsGemojiImagesEmojiUnicode1f636Png, map[string]*bintree{}},
						"1f637.png": &bintree{assetsGemojiImagesEmojiUnicode1f637Png, map[string]*bintree{}},
						"1f638.png": &bintree{assetsGemojiImagesEmojiUnicode1f638Png, map[string]*bintree{}},
						"1f639.png": &bintree{assetsGemojiImagesEmojiUnicode1f639Png, map[string]*bintree{}},
						"1f63a.png": &bintree{assetsGemojiImagesEmojiUnicode1f63aPng, map[string]*bintree{}},
						"1f63b.png": &bintree{assetsGemojiImagesEmojiUnicode1f63bPng, map[string]*bintree{}},
						"1f63c.png": &bintree{assetsGemojiImagesEmojiUnicode1f63cPng, map[string]*bintree{}},
						"1f63d.png": &bintree{assetsGemojiImagesEmojiUnicode1f63dPng, map[string]*bintree{}},
						"1f63e.png": &bintree{assetsGemojiImagesEmojiUnicode1f63ePng, map[string]*bintree{}},
						"1f63f.png": &bintree{assetsGemojiImagesEmojiUnicode1f63fPng, map[string]*bintree{}},
						"1f640.png": &bintree{assetsGemojiImagesEmojiUnicode1f640Png, map[string]*bintree{}},
						"1f645.png": &bintree{assetsGemojiImagesEmojiUnicode1f645Png, map[string]*bintree{}},
						"1f646.png": &bintree{assetsGemojiImagesEmojiUnicode1f646Png, map[string]*bintree{}},
						"1f647.png": &bintree{assetsGemojiImagesEmojiUnicode1f647Png, map[string]*bintree{}},
						"1f648.png": &bintree{assetsGemojiImagesEmojiUnicode1f648Png, map[string]*bintree{}},
						"1f649.png": &bintree{assetsGemojiImagesEmojiUnicode1f649Png, map[string]*bintree{}},
						"1f64a.png": &bintree{assetsGemojiImagesEmojiUnicode1f64aPng, map[string]*bintree{}},
						"1f64b.png": &bintree{assetsGemojiImagesEmojiUnicode1f64bPng, map[string]*bintree{}},
						"1f64c.png": &bintree{assetsGemojiImagesEmojiUnicode1f64cPng, map[string]*bintree{}},
						"1f64d.png": &bintree{assetsGemojiImagesEmojiUnicode1f64dPng, map[string]*bintree{}},
						"1f64e.png": &bintree{assetsGemojiImagesEmojiUnicode1f64ePng, map[string]*bintree{}},
						"1f64f.png": &bintree{assetsGemojiImagesEmojiUnicode1f64fPng, map[string]*bintree{}},
						"1f680.png": &bintree{assetsGemojiImagesEmojiUnicode1f680Png, map[string]*bintree{}},
						"1f681.png": &bintree{assetsGemojiImagesEmojiUnicode1f681Png, map[string]*bintree{}},
						"1f682.png": &bintree{assetsGemojiImagesEmojiUnicode1f682Png, map[string]*bintree{}},
						"1f683.png": &bintree{assetsGemojiImagesEmojiUnicode1f683Png, map[string]*bintree{}},
						"1f684.png": &bintree{assetsGemojiImagesEmojiUnicode1f684Png, map[string]*bintree{}},
						"1f685.png": &bintree{assetsGemojiImagesEmojiUnicode1f685Png, map[string]*bintree{}},
						"1f686.png": &bintree{assetsGemojiImagesEmojiUnicode1f686Png, map[string]*bintree{}},
						"1f687.png": &bintree{assetsGemojiImagesEmojiUnicode1f687Png, map[string]*bintree{}},
						"1f688.png": &bintree{assetsGemojiImagesEmojiUnicode1f688Png, map[string]*bintree{}},
						"1f689.png": &bintree{assetsGemojiImagesEmojiUnicode1f689Png, map[string]*bintree{}},
						"1f68a.png": &bintree{assetsGemojiImagesEmojiUnicode1f68aPng, map[string]*bintree{}},
						"1f68b.png": &bintree{assetsGemojiImagesEmojiUnicode1f68bPng, map[string]*bintree{}},
						"1f68c.png": &bintree{assetsGemojiImagesEmojiUnicode1f68cPng, map[string]*bintree{}},
						"1f68d.png": &bintree{assetsGemojiImagesEmojiUnicode1f68dPng, map[string]*bintree{}},
						"1f68e.png": &bintree{assetsGemojiImagesEmojiUnicode1f68ePng, map[string]*bintree{}},
						"1f68f.png": &bintree{assetsGemojiImagesEmojiUnicode1f68fPng, map[string]*bintree{}},
						"1f690.png": &bintree{assetsGemojiImagesEmojiUnicode1f690Png, map[string]*bintree{}},
						"1f691.png": &bintree{assetsGemojiImagesEmojiUnicode1f691Png, map[string]*bintree{}},
						"1f692.png": &bintree{assetsGemojiImagesEmojiUnicode1f692Png, map[string]*bintree{}},
						"1f693.png": &bintree{assetsGemojiImagesEmojiUnicode1f693Png, map[string]*bintree{}},
						"1f694.png": &bintree{assetsGemojiImagesEmojiUnicode1f694Png, map[string]*bintree{}},
						"1f695.png": &bintree{assetsGemojiImagesEmojiUnicode1f695Png, map[string]*bintree{}},
						"1f696.png": &bintree{assetsGemojiImagesEmojiUnicode1f696Png, map[string]*bintree{}},
						"1f697.png": &bintree{assetsGemojiImagesEmojiUnicode1f697Png, map[string]*bintree{}},
						"1f698.png": &bintree{assetsGemojiImagesEmojiUnicode1f698Png, map[string]*bintree{}},
						"1f699.png": &bintree{assetsGemojiImagesEmojiUnicode1f699Png, map[string]*bintree{}},
						"1f69a.png": &bintree{assetsGemojiImagesEmojiUnicode1f69aPng, map[string]*bintree{}},
						"1f69b.png": &bintree{assetsGemojiImagesEmojiUnicode1f69bPng, map[string]*bintree{}},
						"1f69c.png": &bintree{assetsGemojiImagesEmojiUnicode1f69cPng, map[string]*bintree{}},
						"1f69d.png": &bintree{assetsGemojiImagesEmojiUnicode1f69dPng, map[string]*bintree{}},
						"1f69e.png": &bintree{assetsGemojiImagesEmojiUnicode1f69ePng, map[string]*bintree{}},
						"1f69f.png": &bintree{assetsGemojiImagesEmojiUnicode1f69fPng, map[string]*bintree{}},
						"1f6a0.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a0Png, map[string]*bintree{}},
						"1f6a1.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a1Png, map[string]*bintree{}},
						"1f6a2.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a2Png, map[string]*bintree{}},
						"1f6a3.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a3Png, map[string]*bintree{}},
						"1f6a4.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a4Png, map[string]*bintree{}},
						"1f6a5.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a5Png, map[string]*bintree{}},
						"1f6a6.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a6Png, map[string]*bintree{}},
						"1f6a7.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a7Png, map[string]*bintree{}},
						"1f6a8.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a8Png, map[string]*bintree{}},
						"1f6a9.png": &bintree{assetsGemojiImagesEmojiUnicode1f6a9Png, map[string]*bintree{}},
						"1f6aa.png": &bintree{assetsGemojiImagesEmojiUnicode1f6aaPng, map[string]*bintree{}},
						"1f6ab.png": &bintree{assetsGemojiImagesEmojiUnicode1f6abPng, map[string]*bintree{}},
						"1f6ac.png": &bintree{assetsGemojiImagesEmojiUnicode1f6acPng, map[string]*bintree{}},
						"1f6ad.png": &bintree{assetsGemojiImagesEmojiUnicode1f6adPng, map[string]*bintree{}},
						"1f6ae.png": &bintree{assetsGemojiImagesEmojiUnicode1f6aePng, map[string]*bintree{}},
						"1f6af.png": &bintree{assetsGemojiImagesEmojiUnicode1f6afPng, map[string]*bintree{}},
						"1f6b0.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b0Png, map[string]*bintree{}},
						"1f6b1.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b1Png, map[string]*bintree{}},
						"1f6b2.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b2Png, map[string]*bintree{}},
						"1f6b3.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b3Png, map[string]*bintree{}},
						"1f6b4.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b4Png, map[string]*bintree{}},
						"1f6b5.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b5Png, map[string]*bintree{}},
						"1f6b6.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b6Png, map[string]*bintree{}},
						"1f6b7.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b7Png, map[string]*bintree{}},
						"1f6b8.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b8Png, map[string]*bintree{}},
						"1f6b9.png": &bintree{assetsGemojiImagesEmojiUnicode1f6b9Png, map[string]*bintree{}},
						"1f6ba.png": &bintree{assetsGemojiImagesEmojiUnicode1f6baPng, map[string]*bintree{}},
						"1f6bb.png": &bintree{assetsGemojiImagesEmojiUnicode1f6bbPng, map[string]*bintree{}},
						"1f6bc.png": &bintree{assetsGemojiImagesEmojiUnicode1f6bcPng, map[string]*bintree{}},
						"1f6bd.png": &bintree{assetsGemojiImagesEmojiUnicode1f6bdPng, map[string]*bintree{}},
						"1f6be.png": &bintree{assetsGemojiImagesEmojiUnicode1f6bePng, map[string]*bintree{}},
						"1f6bf.png": &bintree{assetsGemojiImagesEmojiUnicode1f6bfPng, map[string]*bintree{}},
						"1f6c0.png": &bintree{assetsGemojiImagesEmojiUnicode1f6c0Png, map[string]*bintree{}},
						"1f6c1.png": &bintree{assetsGemojiImagesEmojiUnicode1f6c1Png, map[string]*bintree{}},
						"1f6c2.png": &bintree{assetsGemojiImagesEmojiUnicode1f6c2Png, map[string]*bintree{}},
						"1f6c3.png": &bintree{assetsGemojiImagesEmojiUnicode1f6c3Png, map[string]*bintree{}},
						"1f6c4.png": &bintree{assetsGemojiImagesEmojiUnicode1f6c4Png, map[string]*bintree{}},
						"1f6c5.png": &bintree{assetsGemojiImagesEmojiUnicode1f6c5Png, map[string]*bintree{}},
						"203c.png": &bintree{assetsGemojiImagesEmojiUnicode203cPng, map[string]*bintree{}},
						"2049.png": &bintree{assetsGemojiImagesEmojiUnicode2049Png, map[string]*bintree{}},
						"2122.png": &bintree{assetsGemojiImagesEmojiUnicode2122Png, map[string]*bintree{}},
						"2139.png": &bintree{assetsGemojiImagesEmojiUnicode2139Png, map[string]*bintree{}},
						"2194.png": &bintree{assetsGemojiImagesEmojiUnicode2194Png, map[string]*bintree{}},
						"2195.png": &bintree{assetsGemojiImagesEmojiUnicode2195Png, map[string]*bintree{}},
						"2196.png": &bintree{assetsGemojiImagesEmojiUnicode2196Png, map[string]*bintree{}},
						"2197.png": &bintree{assetsGemojiImagesEmojiUnicode2197Png, map[string]*bintree{}},
						"2198.png": &bintree{assetsGemojiImagesEmojiUnicode2198Png, map[string]*bintree{}},
						"2199.png": &bintree{assetsGemojiImagesEmojiUnicode2199Png, map[string]*bintree{}},
						"21a9.png": &bintree{assetsGemojiImagesEmojiUnicode21a9Png, map[string]*bintree{}},
						"21aa.png": &bintree{assetsGemojiImagesEmojiUnicode21aaPng, map[string]*bintree{}},
						"231a.png": &bintree{assetsGemojiImagesEmojiUnicode231aPng, map[string]*bintree{}},
						"231b.png": &bintree{assetsGemojiImagesEmojiUnicode231bPng, map[string]*bintree{}},
						"23e9.png": &bintree{assetsGemojiImagesEmojiUnicode23e9Png, map[string]*bintree{}},
						"23ea.png": &bintree{assetsGemojiImagesEmojiUnicode23eaPng, map[string]*bintree{}},
						"23eb.png": &bintree{assetsGemojiImagesEmojiUnicode23ebPng, map[string]*bintree{}},
						"23ec.png": &bintree{assetsGemojiImagesEmojiUnicode23ecPng, map[string]*bintree{}},
						"23f0.png": &bintree{assetsGemojiImagesEmojiUnicode23f0Png, map[string]*bintree{}},
						"23f3.png": &bintree{assetsGemojiImagesEmojiUnicode23f3Png, map[string]*bintree{}},
						"24c2.png": &bintree{assetsGemojiImagesEmojiUnicode24c2Png, map[string]*bintree{}},
						"25aa.png": &bintree{assetsGemojiImagesEmojiUnicode25aaPng, map[string]*bintree{}},
						"25ab.png": &bintree{assetsGemojiImagesEmojiUnicode25abPng, map[string]*bintree{}},
						"25b6.png": &bintree{assetsGemojiImagesEmojiUnicode25b6Png, map[string]*bintree{}},
						"25c0.png": &bintree{assetsGemojiImagesEmojiUnicode25c0Png, map[string]*bintree{}},
						"25fb.png": &bintree{assetsGemojiImagesEmojiUnicode25fbPng, map[string]*bintree{}},
						"25fc.png": &bintree{assetsGemojiImagesEmojiUnicode25fcPng, map[string]*bintree{}},
						"25fd.png": &bintree{assetsGemojiImagesEmojiUnicode25fdPng, map[string]*bintree{}},
						"25fe.png": &bintree{assetsGemojiImagesEmojiUnicode25fePng, map[string]*bintree{}},
						"2600.png": &bintree{assetsGemojiImagesEmojiUnicode2600Png, map[string]*bintree{}},
						"2601.png": &bintree{assetsGemojiImagesEmojiUnicode2601Png, map[string]*bintree{}},
						"260e.png": &bintree{assetsGemojiImagesEmojiUnicode260ePng, map[string]*bintree{}},
						"2611.png": &bintree{assetsGemojiImagesEmojiUnicode2611Png, map[string]*bintree{}},
						"2614.png": &bintree{assetsGemojiImagesEmojiUnicode2614Png, map[string]*bintree{}},
						"2615.png": &bintree{assetsGemojiImagesEmojiUnicode2615Png, map[string]*bintree{}},
						"261d.png": &bintree{assetsGemojiImagesEmojiUnicode261dPng, map[string]*bintree{}},
						"263a.png": &bintree{assetsGemojiImagesEmojiUnicode263aPng, map[string]*bintree{}},
						"2648.png": &bintree{assetsGemojiImagesEmojiUnicode2648Png, map[string]*bintree{}},
						"2649.png": &bintree{assetsGemojiImagesEmojiUnicode2649Png, map[string]*bintree{}},
						"264a.png": &bintree{assetsGemojiImagesEmojiUnicode264aPng, map[string]*bintree{}},
						"264b.png": &bintree{assetsGemojiImagesEmojiUnicode264bPng, map[string]*bintree{}},
						"264c.png": &bintree{assetsGemojiImagesEmojiUnicode264cPng, map[string]*bintree{}},
						"264d.png": &bintree{assetsGemojiImagesEmojiUnicode264dPng, map[string]*bintree{}},
						"264e.png": &bintree{assetsGemojiImagesEmojiUnicode264ePng, map[string]*bintree{}},
						"264f.png": &bintree{assetsGemojiImagesEmojiUnicode264fPng, map[string]*bintree{}},
						"2650.png": &bintree{assetsGemojiImagesEmojiUnicode2650Png, map[string]*bintree{}},
						"2651.png": &bintree{assetsGemojiImagesEmojiUnicode2651Png, map[string]*bintree{}},
						"2652.png": &bintree{assetsGemojiImagesEmojiUnicode2652Png, map[string]*bintree{}},
						"2653.png": &bintree{assetsGemojiImagesEmojiUnicode2653Png, map[string]*bintree{}},
						"2660.png": &bintree{assetsGemojiImagesEmojiUnicode2660Png, map[string]*bintree{}},
						"2663.png": &bintree{assetsGemojiImagesEmojiUnicode2663Png, map[string]*bintree{}},
						"2665.png": &bintree{assetsGemojiImagesEmojiUnicode2665Png, map[string]*bintree{}},
						"2666.png": &bintree{assetsGemojiImagesEmojiUnicode2666Png, map[string]*bintree{}},
						"2668.png": &bintree{assetsGemojiImagesEmojiUnicode2668Png, map[string]*bintree{}},
						"267b.png": &bintree{assetsGemojiImagesEmojiUnicode267bPng, map[string]*bintree{}},
						"267f.png": &bintree{assetsGemojiImagesEmojiUnicode267fPng, map[string]*bintree{}},
						"2693.png": &bintree{assetsGemojiImagesEmojiUnicode2693Png, map[string]*bintree{}},
						"26a0.png": &bintree{assetsGemojiImagesEmojiUnicode26a0Png, map[string]*bintree{}},
						"26a1.png": &bintree{assetsGemojiImagesEmojiUnicode26a1Png, map[string]*bintree{}},
						"26aa.png": &bintree{assetsGemojiImagesEmojiUnicode26aaPng, map[string]*bintree{}},
						"26ab.png": &bintree{assetsGemojiImagesEmojiUnicode26abPng, map[string]*bintree{}},
						"26bd.png": &bintree{assetsGemojiImagesEmojiUnicode26bdPng, map[string]*bintree{}},
						"26be.png": &bintree{assetsGemojiImagesEmojiUnicode26bePng, map[string]*bintree{}},
						"26c4.png": &bintree{assetsGemojiImagesEmojiUnicode26c4Png, map[string]*bintree{}},
						"26c5.png": &bintree{assetsGemojiImagesEmojiUnicode26c5Png, map[string]*bintree{}},
						"26ce.png": &bintree{assetsGemojiImagesEmojiUnicode26cePng, map[string]*bintree{}},
						"26d4.png": &bintree{assetsGemojiImagesEmojiUnicode26d4Png, map[string]*bintree{}},
						"26ea.png": &bintree{assetsGemojiImagesEmojiUnicode26eaPng, map[string]*bintree{}},
						"26f2.png": &bintree{assetsGemojiImagesEmojiUnicode26f2Png, map[string]*bintree{}},
						"26f3.png": &bintree{assetsGemojiImagesEmojiUnicode26f3Png, map[string]*bintree{}},
						"26f5.png": &bintree{assetsGemojiImagesEmojiUnicode26f5Png, map[string]*bintree{}},
						"26fa.png": &bintree{assetsGemojiImagesEmojiUnicode26faPng, map[string]*bintree{}},
						"26fd.png": &bintree{assetsGemojiImagesEmojiUnicode26fdPng, map[string]*bintree{}},
						"2702.png": &bintree{assetsGemojiImagesEmojiUnicode2702Png, map[string]*bintree{}},
						"2705.png": &bintree{assetsGemojiImagesEmojiUnicode2705Png, map[string]*bintree{}},
						"2708.png": &bintree{assetsGemojiImagesEmojiUnicode2708Png, map[string]*bintree{}},
						"2709.png": &bintree{assetsGemojiImagesEmojiUnicode2709Png, map[string]*bintree{}},
						"270a.png": &bintree{assetsGemojiImagesEmojiUnicode270aPng, map[string]*bintree{}},
						"270b.png": &bintree{assetsGemojiImagesEmojiUnicode270bPng, map[string]*bintree{}},
						"270c.png": &bintree{assetsGemojiImagesEmojiUnicode270cPng, map[string]*bintree{}},
						"270f.png": &bintree{assetsGemojiImagesEmojiUnicode270fPng, map[string]*bintree{}},
						"2712.png": &bintree{assetsGemojiImagesEmojiUnicode2712Png, map[string]*bintree{}},
						"2714.png": &bintree{assetsGemojiImagesEmojiUnicode2714Png, map[string]*bintree{}},
						"2716.png": &bintree{assetsGemojiImagesEmojiUnicode2716Png, map[string]*bintree{}},
						"2728.png": &bintree{assetsGemojiImagesEmojiUnicode2728Png, map[string]*bintree{}},
						"2733.png": &bintree{assetsGemojiImagesEmojiUnicode2733Png, map[string]*bintree{}},
						"2734.png": &bintree{assetsGemojiImagesEmojiUnicode2734Png, map[string]*bintree{}},
						"2744.png": &bintree{assetsGemojiImagesEmojiUnicode2744Png, map[string]*bintree{}},
						"2747.png": &bintree{assetsGemojiImagesEmojiUnicode2747Png, map[string]*bintree{}},
						"274c.png": &bintree{assetsGemojiImagesEmojiUnicode274cPng, map[string]*bintree{}},
						"274e.png": &bintree{assetsGemojiImagesEmojiUnicode274ePng, map[string]*bintree{}},
						"2753.png": &bintree{assetsGemojiImagesEmojiUnicode2753Png, map[string]*bintree{}},
						"2754.png": &bintree{assetsGemojiImagesEmojiUnicode2754Png, map[string]*bintree{}},
						"2755.png": &bintree{assetsGemojiImagesEmojiUnicode2755Png, map[string]*bintree{}},
						"2757.png": &bintree{assetsGemojiImagesEmojiUnicode2757Png, map[string]*bintree{}},
						"2764.png": &bintree{assetsGemojiImagesEmojiUnicode2764Png, map[string]*bintree{}},
						"2795.png": &bintree{assetsGemojiImagesEmojiUnicode2795Png, map[string]*bintree{}},
						"2796.png": &bintree{assetsGemojiImagesEmojiUnicode2796Png, map[string]*bintree{}},
						"2797.png": &bintree{assetsGemojiImagesEmojiUnicode2797Png, map[string]*bintree{}},
						"27a1.png": &bintree{assetsGemojiImagesEmojiUnicode27a1Png, map[string]*bintree{}},
						"27b0.png": &bintree{assetsGemojiImagesEmojiUnicode27b0Png, map[string]*bintree{}},
						"27bf.png": &bintree{assetsGemojiImagesEmojiUnicode27bfPng, map[string]*bintree{}},
						"2934.png": &bintree{assetsGemojiImagesEmojiUnicode2934Png, map[string]*bintree{}},
						"2935.png": &bintree{assetsGemojiImagesEmojiUnicode2935Png, map[string]*bintree{}},
						"2b05.png": &bintree{assetsGemojiImagesEmojiUnicode2b05Png, map[string]*bintree{}},
						"2b06.png": &bintree{assetsGemojiImagesEmojiUnicode2b06Png, map[string]*bintree{}},
						"2b07.png": &bintree{assetsGemojiImagesEmojiUnicode2b07Png, map[string]*bintree{}},
						"2b1b.png": &bintree{assetsGemojiImagesEmojiUnicode2b1bPng, map[string]*bintree{}},
						"2b1c.png": &bintree{assetsGemojiImagesEmojiUnicode2b1cPng, map[string]*bintree{}},
						"2b50.png": &bintree{assetsGemojiImagesEmojiUnicode2b50Png, map[string]*bintree{}},
						"2b55.png": &bintree{assetsGemojiImagesEmojiUnicode2b55Png, map[string]*bintree{}},
						"3030.png": &bintree{assetsGemojiImagesEmojiUnicode3030Png, map[string]*bintree{}},
						"303d.png": &bintree{assetsGemojiImagesEmojiUnicode303dPng, map[string]*bintree{}},
						"3297.png": &bintree{assetsGemojiImagesEmojiUnicode3297Png, map[string]*bintree{}},
						"3299.png": &bintree{assetsGemojiImagesEmojiUnicode3299Png, map[string]*bintree{}},
					}},
				}},
			}},
		}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
		"reveal": &bintree{nil, map[string]*bintree{
			"css": &bintree{nil, map[string]*bintree{
				"print": &bintree{nil, map[string]*bintree{
					"paper.css": &bintree{assetsRevealCssPrintPaperCss, map[string]*bintree{}},
					"pdf.css": &bintree{assetsRevealCssPrintPdfCss, map[string]*bintree{}},
				}},
				"reveal.css": &bintree{assetsRevealCssRevealCss, map[string]*bintree{}},
				"reveal.scss": &bintree{assetsRevealCssRevealScss, map[string]*bintree{}},
				"theme": &bintree{nil, map[string]*bintree{
					"README.md": &bintree{assetsRevealCssThemeReadmeMd, map[string]*bintree{}},
					"beige.css": &bintree{assetsRevealCssThemeBeigeCss, map[string]*bintree{}},
					"black.css": &bintree{assetsRevealCssThemeBlackCss, map[string]*bintree{}},
					"blood.css": &bintree{assetsRevealCssThemeBloodCss, map[string]*bintree{}},
					"league.css": &bintree{assetsRevealCssThemeLeagueCss, map[string]*bintree{}},
					"moon.css": &bintree{assetsRevealCssThemeMoonCss, map[string]*bintree{}},
					"night.css": &bintree{assetsRevealCssThemeNightCss, map[string]*bintree{}},
					"serif.css": &bintree{assetsRevealCssThemeSerifCss, map[string]*bintree{}},
					"simple.css": &bintree{assetsRevealCssThemeSimpleCss, map[string]*bintree{}},
					"sky.css": &bintree{assetsRevealCssThemeSkyCss, map[string]*bintree{}},
					"solarized.css": &bintree{assetsRevealCssThemeSolarizedCss, map[string]*bintree{}},
					"source": &bintree{nil, map[string]*bintree{
						"beige.scss": &bintree{assetsRevealCssThemeSourceBeigeScss, map[string]*bintree{}},
						"black.scss": &bintree{assetsRevealCssThemeSourceBlackScss, map[string]*bintree{}},
						"blood.scss": &bintree{assetsRevealCssThemeSourceBloodScss, map[string]*bintree{}},
						"league.scss": &bintree{assetsRevealCssThemeSourceLeagueScss, map[string]*bintree{}},
						"moon.scss": &bintree{assetsRevealCssThemeSourceMoonScss, map[string]*bintree{}},
						"night.scss": &bintree{assetsRevealCssThemeSourceNightScss, map[string]*bintree{}},
						"serif.scss": &bintree{assetsRevealCssThemeSourceSerifScss, map[string]*bintree{}},
						"simple.scss": &bintree{assetsRevealCssThemeSourceSimpleScss, map[string]*bintree{}},
						"sky.scss": &bintree{assetsRevealCssThemeSourceSkyScss, map[string]*bintree{}},
						"solarized.scss": &bintree{assetsRevealCssThemeSourceSolarizedScss, map[string]*bintree{}},
						"white.scss": &bintree{assetsRevealCssThemeSourceWhiteScss, map[string]*bintree{}},
					}},
					"template": &bintree{nil, map[string]*bintree{
						"mixins.scss": &bintree{assetsRevealCssThemeTemplateMixinsScss, map[string]*bintree{}},
						"settings.scss": &bintree{assetsRevealCssThemeTemplateSettingsScss, map[string]*bintree{}},
						"theme.scss": &bintree{assetsRevealCssThemeTemplateThemeScss, map[string]*bintree{}},
					}},
					"white.css": &bintree{assetsRevealCssThemeWhiteCss, map[string]*bintree{}},
				}},
			}},
			"js": &bintree{nil, map[string]*bintree{
				"reveal.js": &bintree{assetsRevealJsRevealJs, map[string]*bintree{}},
			}},
			"lib": &bintree{nil, map[string]*bintree{
				"css": &bintree{nil, map[string]*bintree{
					"zenburn.css": &bintree{assetsRevealLibCssZenburnCss, map[string]*bintree{}},
				}},
				"font": &bintree{nil, map[string]*bintree{
					"league-gothic": &bintree{nil, map[string]*bintree{
						"LICENSE": &bintree{assetsRevealLibFontLeagueGothicLicense, map[string]*bintree{}},
						"league-gothic.css": &bintree{assetsRevealLibFontLeagueGothicLeagueGothicCss, map[string]*bintree{}},
						"league-gothic.eot": &bintree{assetsRevealLibFontLeagueGothicLeagueGothicEot, map[string]*bintree{}},
						"league-gothic.ttf": &bintree{assetsRevealLibFontLeagueGothicLeagueGothicTtf, map[string]*bintree{}},
						"league-gothic.woff": &bintree{assetsRevealLibFontLeagueGothicLeagueGothicWoff, map[string]*bintree{}},
					}},
					"source-sans-pro": &bintree{nil, map[string]*bintree{
						"LICENSE": &bintree{assetsRevealLibFontSourceSansProLicense, map[string]*bintree{}},
						"source-sans-pro-italic.eot": &bintree{assetsRevealLibFontSourceSansProSourceSansProItalicEot, map[string]*bintree{}},
						"source-sans-pro-italic.ttf": &bintree{assetsRevealLibFontSourceSansProSourceSansProItalicTtf, map[string]*bintree{}},
						"source-sans-pro-italic.woff": &bintree{assetsRevealLibFontSourceSansProSourceSansProItalicWoff, map[string]*bintree{}},
						"source-sans-pro-regular.eot": &bintree{assetsRevealLibFontSourceSansProSourceSansProRegularEot, map[string]*bintree{}},
						"source-sans-pro-regular.ttf": &bintree{assetsRevealLibFontSourceSansProSourceSansProRegularTtf, map[string]*bintree{}},
						"source-sans-pro-regular.woff": &bintree{assetsRevealLibFontSourceSansProSourceSansProRegularWoff, map[string]*bintree{}},
						"source-sans-pro-semibold.eot": &bintree{assetsRevealLibFontSourceSansProSourceSansProSemiboldEot, map[string]*bintree{}},
						"source-sans-pro-semibold.ttf": &bintree{assetsRevealLibFontSourceSansProSourceSansProSemiboldTtf, map[string]*bintree{}},
						"source-sans-pro-semibold.woff": &bintree{assetsRevealLibFontSourceSansProSourceSansProSemiboldWoff, map[string]*bintree{}},
						"source-sans-pro-semibolditalic.eot": &bintree{assetsRevealLibFontSourceSansProSourceSansProSemibolditalicEot, map[string]*bintree{}},
						"source-sans-pro-semibolditalic.ttf": &bintree{assetsRevealLibFontSourceSansProSourceSansProSemibolditalicTtf, map[string]*bintree{}},
						"source-sans-pro-semibolditalic.woff": &bintree{assetsRevealLibFontSourceSansProSourceSansProSemibolditalicWoff, map[string]*bintree{}},
						"source-sans-pro.css": &bintree{assetsRevealLibFontSourceSansProSourceSansProCss, map[string]*bintree{}},
					}},
				}},
				"js": &bintree{nil, map[string]*bintree{
					"classList.js": &bintree{assetsRevealLibJsClasslistJs, map[string]*bintree{}},
					"head.min.js": &bintree{assetsRevealLibJsHeadMinJs, map[string]*bintree{}},
					"html5shiv.js": &bintree{assetsRevealLibJsHtml5shivJs, map[string]*bintree{}},
				}},
			}},
			"plugin": &bintree{nil, map[string]*bintree{
				"highlight": &bintree{nil, map[string]*bintree{
					"highlight.js": &bintree{assetsRevealPluginHighlightHighlightJs, map[string]*bintree{}},
				}},
				"markdown": &bintree{nil, map[string]*bintree{
					"example.html": &bintree{assetsRevealPluginMarkdownExampleHtml, map[string]*bintree{}},
					"example.md": &bintree{assetsRevealPluginMarkdownExampleMd, map[string]*bintree{}},
					"markdown.js": &bintree{assetsRevealPluginMarkdownMarkdownJs, map[string]*bintree{}},
					"marked.js": &bintree{assetsRevealPluginMarkdownMarkedJs, map[string]*bintree{}},
				}},
				"math": &bintree{nil, map[string]*bintree{
					"math.js": &bintree{assetsRevealPluginMathMathJs, map[string]*bintree{}},
				}},
				"multiplex": &bintree{nil, map[string]*bintree{
					"client.js": &bintree{assetsRevealPluginMultiplexClientJs, map[string]*bintree{}},
					"index.js": &bintree{assetsRevealPluginMultiplexIndexJs, map[string]*bintree{}},
					"master.js": &bintree{assetsRevealPluginMultiplexMasterJs, map[string]*bintree{}},
					"package.json": &bintree{assetsRevealPluginMultiplexPackageJson, map[string]*bintree{}},
				}},
				"notes": &bintree{nil, map[string]*bintree{
					"notes.html": &bintree{assetsRevealPluginNotesNotesHtml, map[string]*bintree{}},
					"notes.js": &bintree{assetsRevealPluginNotesNotesJs, map[string]*bintree{}},
				}},
				"notes-server": &bintree{nil, map[string]*bintree{
					"client.js": &bintree{assetsRevealPluginNotesServerClientJs, map[string]*bintree{}},
					"index.js": &bintree{assetsRevealPluginNotesServerIndexJs, map[string]*bintree{}},
					"notes.html": &bintree{assetsRevealPluginNotesServerNotesHtml, map[string]*bintree{}},
				}},
				"print-pdf": &bintree{nil, map[string]*bintree{
					"print-pdf.js": &bintree{assetsRevealPluginPrintPdfPrintPdfJs, map[string]*bintree{}},
				}},
				"search": &bintree{nil, map[string]*bintree{
					"search.js": &bintree{assetsRevealPluginSearchSearchJs, map[string]*bintree{}},
				}},
				"zoom-js": &bintree{nil, map[string]*bintree{
					"zoom.js": &bintree{assetsRevealPluginZoomJsZoomJs, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

